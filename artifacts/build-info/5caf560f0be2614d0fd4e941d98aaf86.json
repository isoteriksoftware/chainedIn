{"id":"5caf560f0be2614d0fd4e941d98aaf86","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"contracts/APIConsumer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\";\n\n/**\n * @title The APIConsumer contract\n * @notice An API Consumer contract that makes GET requests to obtain 24h trading volume of ETH in USD\n */\ncontract APIConsumer is ChainlinkClient {\n    using Chainlink for Chainlink.Request;\n\n    uint256 public volume;\n    address private immutable oracle;\n    bytes32 private immutable jobId;\n    uint256 private immutable fee;\n\n    event DataFullfilled(uint256 volume);\n\n    /**\n     * @notice Executes once when a contract is created to initialize state variables\n     *\n     * @param _oracle - address of the specific Chainlink node that a contract makes an API call from\n     * @param _jobId - specific job for :_oracle: to run; each job is unique and returns different types of data\n     * @param _fee - node operator price per API call / data request\n     * @param _link - LINK token address on the corresponding network\n     *\n     * Network: Goerli\n     * Oracle: 0xCC79157eb46F5624204f47AB42b3906cAA40eaB7\n     * Job ID: ca98366cc7314957b8c012c72f05aeeb\n     * Fee: 0.1 LINK\n     */\n    constructor(\n        address _oracle,\n        bytes32 _jobId,\n        uint256 _fee,\n        address _link\n    ) {\n        if (_link == address(0)) {\n            setPublicChainlinkToken();\n        } else {\n            setChainlinkToken(_link);\n        }\n        oracle = _oracle;\n        jobId = _jobId;\n        fee = _fee;\n    }\n\n    /**\n     * @notice Creates a Chainlink request to retrieve API response, find the target\n     * data, then multiply by 1000000000000000000 (to remove decimal places from data).\n     *\n     * @return requestId - id of the request\n     */\n    function requestVolumeData() public returns (bytes32 requestId) {\n        Chainlink.Request memory request = buildChainlinkRequest(\n            jobId,\n            address(this),\n            this.fulfill.selector\n        );\n\n        // Set the URL to perform the GET request on\n        request.add(\n            \"get\",\n            \"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD\"\n        );\n\n        // Set the path to find the desired data in the API response, where the response format is:\n        // {\"RAW\":\n        //   {\"ETH\":\n        //    {\"USD\":\n        //     {\n        //      \"VOLUME24HOUR\": xxx.xxx,\n        //     }\n        //    }\n        //   }\n        //  }\n        // request.add(\"path\", \"RAW.ETH.USD.VOLUME24HOUR\"); // Chainlink nodes prior to 1.0.0 support this format\n        request.add(\"path\", \"RAW,ETH,USD,VOLUME24HOUR\"); // Chainlink nodes 1.0.0 and later support this format\n\n        // Multiply the result by 1000000000000000000 to remove decimals\n        int256 timesAmount = 10**18;\n        request.addInt(\"times\", timesAmount);\n\n        // Sends the request\n        return sendChainlinkRequestTo(oracle, request, fee);\n    }\n\n    /**\n     * @notice Receives the response in the form of uint256\n     *\n     * @param _requestId - id of the request\n     * @param _volume - response; requested 24h trading volume of ETH in USD\n     */\n    function fulfill(bytes32 _requestId, uint256 _volume)\n        public\n        recordChainlinkFulfillment(_requestId)\n    {\n        volume = _volume;\n        emit DataFullfilled(volume);\n    }\n\n    /**\n     * @notice Witdraws LINK from the contract\n     * @dev Implement a withdraw function to avoid locking your LINK in the contract\n     */\n    function withdrawLink() external {}\n}\n"},"@chainlink/contracts/src/v0.8/ChainlinkClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Chainlink.sol\";\nimport \"./interfaces/ENSInterface.sol\";\nimport \"./interfaces/LinkTokenInterface.sol\";\nimport \"./interfaces/ChainlinkRequestInterface.sol\";\nimport \"./interfaces/OperatorInterface.sol\";\nimport \"./interfaces/PointerInterface.sol\";\nimport {ENSResolver as ENSResolver_Chainlink} from \"./vendor/ENSResolver.sol\";\n\n/**\n * @title The ChainlinkClient contract\n * @notice Contract writers can inherit this contract in order to create requests for the\n * Chainlink network\n */\nabstract contract ChainlinkClient {\n  using Chainlink for Chainlink.Request;\n\n  uint256 internal constant LINK_DIVISIBILITY = 10**18;\n  uint256 private constant AMOUNT_OVERRIDE = 0;\n  address private constant SENDER_OVERRIDE = address(0);\n  uint256 private constant ORACLE_ARGS_VERSION = 1;\n  uint256 private constant OPERATOR_ARGS_VERSION = 2;\n  bytes32 private constant ENS_TOKEN_SUBNAME = keccak256(\"link\");\n  bytes32 private constant ENS_ORACLE_SUBNAME = keccak256(\"oracle\");\n  address private constant LINK_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\n\n  ENSInterface private s_ens;\n  bytes32 private s_ensNode;\n  LinkTokenInterface private s_link;\n  OperatorInterface private s_oracle;\n  uint256 private s_requestCount = 1;\n  mapping(bytes32 => address) private s_pendingRequests;\n\n  event ChainlinkRequested(bytes32 indexed id);\n  event ChainlinkFulfilled(bytes32 indexed id);\n  event ChainlinkCancelled(bytes32 indexed id);\n\n  /**\n   * @notice Creates a request that can hold additional parameters\n   * @param specId The Job Specification ID that the request will be created for\n   * @param callbackAddr address to operate the callback on\n   * @param callbackFunctionSignature function signature to use for the callback\n   * @return A Chainlink Request struct in memory\n   */\n  function buildChainlinkRequest(\n    bytes32 specId,\n    address callbackAddr,\n    bytes4 callbackFunctionSignature\n  ) internal pure returns (Chainlink.Request memory) {\n    Chainlink.Request memory req;\n    return req.initialize(specId, callbackAddr, callbackFunctionSignature);\n  }\n\n  /**\n   * @notice Creates a request that can hold additional parameters\n   * @param specId The Job Specification ID that the request will be created for\n   * @param callbackFunctionSignature function signature to use for the callback\n   * @return A Chainlink Request struct in memory\n   */\n  function buildOperatorRequest(bytes32 specId, bytes4 callbackFunctionSignature)\n    internal\n    view\n    returns (Chainlink.Request memory)\n  {\n    Chainlink.Request memory req;\n    return req.initialize(specId, address(this), callbackFunctionSignature);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the stored oracle address\n   * @dev Calls `chainlinkRequestTo` with the stored oracle address\n   * @param req The initialized Chainlink Request\n   * @param payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendChainlinkRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\n    return sendChainlinkRequestTo(address(s_oracle), req, payment);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the specified oracle address\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n   * send LINK which creates a request on the target oracle contract.\n   * Emits ChainlinkRequested event.\n   * @param oracleAddress The address of the oracle for the request\n   * @param req The initialized Chainlink Request\n   * @param payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendChainlinkRequestTo(\n    address oracleAddress,\n    Chainlink.Request memory req,\n    uint256 payment\n  ) internal returns (bytes32 requestId) {\n    uint256 nonce = s_requestCount;\n    s_requestCount = nonce + 1;\n    bytes memory encodedRequest = abi.encodeWithSelector(\n      ChainlinkRequestInterface.oracleRequest.selector,\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\n      req.id,\n      address(this),\n      req.callbackFunctionId,\n      nonce,\n      ORACLE_ARGS_VERSION,\n      req.buf.buf\n    );\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the stored oracle address\n   * @dev This function supports multi-word response\n   * @dev Calls `sendOperatorRequestTo` with the stored oracle address\n   * @param req The initialized Chainlink Request\n   * @param payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendOperatorRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\n    return sendOperatorRequestTo(address(s_oracle), req, payment);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the specified oracle address\n   * @dev This function supports multi-word response\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n   * send LINK which creates a request on the target oracle contract.\n   * Emits ChainlinkRequested event.\n   * @param oracleAddress The address of the oracle for the request\n   * @param req The initialized Chainlink Request\n   * @param payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendOperatorRequestTo(\n    address oracleAddress,\n    Chainlink.Request memory req,\n    uint256 payment\n  ) internal returns (bytes32 requestId) {\n    uint256 nonce = s_requestCount;\n    s_requestCount = nonce + 1;\n    bytes memory encodedRequest = abi.encodeWithSelector(\n      OperatorInterface.operatorRequest.selector,\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\n      req.id,\n      req.callbackFunctionId,\n      nonce,\n      OPERATOR_ARGS_VERSION,\n      req.buf.buf\n    );\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\n  }\n\n  /**\n   * @notice Make a request to an oracle\n   * @param oracleAddress The address of the oracle for the request\n   * @param nonce used to generate the request ID\n   * @param payment The amount of LINK to send for the request\n   * @param encodedRequest data encoded for request type specific format\n   * @return requestId The request ID\n   */\n  function _rawRequest(\n    address oracleAddress,\n    uint256 nonce,\n    uint256 payment,\n    bytes memory encodedRequest\n  ) private returns (bytes32 requestId) {\n    requestId = keccak256(abi.encodePacked(this, nonce));\n    s_pendingRequests[requestId] = oracleAddress;\n    emit ChainlinkRequested(requestId);\n    require(s_link.transferAndCall(oracleAddress, payment, encodedRequest), \"unable to transferAndCall to oracle\");\n  }\n\n  /**\n   * @notice Allows a request to be cancelled if it has not been fulfilled\n   * @dev Requires keeping track of the expiration value emitted from the oracle contract.\n   * Deletes the request from the `pendingRequests` mapping.\n   * Emits ChainlinkCancelled event.\n   * @param requestId The request ID\n   * @param payment The amount of LINK sent for the request\n   * @param callbackFunc The callback function specified for the request\n   * @param expiration The time of the expiration for the request\n   */\n  function cancelChainlinkRequest(\n    bytes32 requestId,\n    uint256 payment,\n    bytes4 callbackFunc,\n    uint256 expiration\n  ) internal {\n    OperatorInterface requested = OperatorInterface(s_pendingRequests[requestId]);\n    delete s_pendingRequests[requestId];\n    emit ChainlinkCancelled(requestId);\n    requested.cancelOracleRequest(requestId, payment, callbackFunc, expiration);\n  }\n\n  /**\n   * @notice the next request count to be used in generating a nonce\n   * @dev starts at 1 in order to ensure consistent gas cost\n   * @return returns the next request count to be used in a nonce\n   */\n  function getNextRequestCount() internal view returns (uint256) {\n    return s_requestCount;\n  }\n\n  /**\n   * @notice Sets the stored oracle address\n   * @param oracleAddress The address of the oracle contract\n   */\n  function setChainlinkOracle(address oracleAddress) internal {\n    s_oracle = OperatorInterface(oracleAddress);\n  }\n\n  /**\n   * @notice Sets the LINK token address\n   * @param linkAddress The address of the LINK token contract\n   */\n  function setChainlinkToken(address linkAddress) internal {\n    s_link = LinkTokenInterface(linkAddress);\n  }\n\n  /**\n   * @notice Sets the Chainlink token address for the public\n   * network as given by the Pointer contract\n   */\n  function setPublicChainlinkToken() internal {\n    setChainlinkToken(PointerInterface(LINK_TOKEN_POINTER).getAddress());\n  }\n\n  /**\n   * @notice Retrieves the stored address of the LINK token\n   * @return The address of the LINK token\n   */\n  function chainlinkTokenAddress() internal view returns (address) {\n    return address(s_link);\n  }\n\n  /**\n   * @notice Retrieves the stored address of the oracle contract\n   * @return The address of the oracle contract\n   */\n  function chainlinkOracleAddress() internal view returns (address) {\n    return address(s_oracle);\n  }\n\n  /**\n   * @notice Allows for a request which was created on another contract to be fulfilled\n   * on this contract\n   * @param oracleAddress The address of the oracle contract that will fulfill the request\n   * @param requestId The request ID used for the response\n   */\n  function addChainlinkExternalRequest(address oracleAddress, bytes32 requestId) internal notPendingRequest(requestId) {\n    s_pendingRequests[requestId] = oracleAddress;\n  }\n\n  /**\n   * @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\n   * @dev Accounts for subnodes having different resolvers\n   * @param ensAddress The address of the ENS contract\n   * @param node The ENS node hash\n   */\n  function useChainlinkWithENS(address ensAddress, bytes32 node) internal {\n    s_ens = ENSInterface(ensAddress);\n    s_ensNode = node;\n    bytes32 linkSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_TOKEN_SUBNAME));\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(linkSubnode));\n    setChainlinkToken(resolver.addr(linkSubnode));\n    updateChainlinkOracleWithENS();\n  }\n\n  /**\n   * @notice Sets the stored oracle contract with the address resolved by ENS\n   * @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously\n   */\n  function updateChainlinkOracleWithENS() internal {\n    bytes32 oracleSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_ORACLE_SUBNAME));\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(oracleSubnode));\n    setChainlinkOracle(resolver.addr(oracleSubnode));\n  }\n\n  /**\n   * @notice Ensures that the fulfillment is valid for this contract\n   * @dev Use if the contract developer prefers methods instead of modifiers for validation\n   * @param requestId The request ID for fulfillment\n   */\n  function validateChainlinkCallback(bytes32 requestId)\n    internal\n    recordChainlinkFulfillment(requestId)\n  // solhint-disable-next-line no-empty-blocks\n  {\n\n  }\n\n  /**\n   * @dev Reverts if the sender is not the oracle of the request.\n   * Emits ChainlinkFulfilled event.\n   * @param requestId The request ID for fulfillment\n   */\n  modifier recordChainlinkFulfillment(bytes32 requestId) {\n    require(msg.sender == s_pendingRequests[requestId], \"Source must be the oracle of the request\");\n    delete s_pendingRequests[requestId];\n    emit ChainlinkFulfilled(requestId);\n    _;\n  }\n\n  /**\n   * @dev Reverts if the request is already pending\n   * @param requestId The request ID for fulfillment\n   */\n  modifier notPendingRequest(bytes32 requestId) {\n    require(s_pendingRequests[requestId] == address(0), \"Request is already pending\");\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/Chainlink.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {CBORChainlink} from \"./vendor/CBORChainlink.sol\";\nimport {BufferChainlink} from \"./vendor/BufferChainlink.sol\";\n\n/**\n * @title Library for common Chainlink functions\n * @dev Uses imported CBOR library for encoding to buffer\n */\nlibrary Chainlink {\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\n\n  using CBORChainlink for BufferChainlink.buffer;\n\n  struct Request {\n    bytes32 id;\n    address callbackAddress;\n    bytes4 callbackFunctionId;\n    uint256 nonce;\n    BufferChainlink.buffer buf;\n  }\n\n  /**\n   * @notice Initializes a Chainlink request\n   * @dev Sets the ID, callback address, and callback function signature on the request\n   * @param self The uninitialized request\n   * @param jobId The Job Specification ID\n   * @param callbackAddr The callback address\n   * @param callbackFunc The callback function signature\n   * @return The initialized request\n   */\n  function initialize(\n    Request memory self,\n    bytes32 jobId,\n    address callbackAddr,\n    bytes4 callbackFunc\n  ) internal pure returns (Chainlink.Request memory) {\n    BufferChainlink.init(self.buf, defaultBufferSize);\n    self.id = jobId;\n    self.callbackAddress = callbackAddr;\n    self.callbackFunctionId = callbackFunc;\n    return self;\n  }\n\n  /**\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\n   * @param self The initialized request\n   * @param data The CBOR data\n   */\n  function setBuffer(Request memory self, bytes memory data) internal pure {\n    BufferChainlink.init(self.buf, data.length);\n    BufferChainlink.append(self.buf, data);\n  }\n\n  /**\n   * @notice Adds a string value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The string value to add\n   */\n  function add(\n    Request memory self,\n    string memory key,\n    string memory value\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.encodeString(value);\n  }\n\n  /**\n   * @notice Adds a bytes value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The bytes value to add\n   */\n  function addBytes(\n    Request memory self,\n    string memory key,\n    bytes memory value\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.encodeBytes(value);\n  }\n\n  /**\n   * @notice Adds a int256 value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The int256 value to add\n   */\n  function addInt(\n    Request memory self,\n    string memory key,\n    int256 value\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.encodeInt(value);\n  }\n\n  /**\n   * @notice Adds a uint256 value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The uint256 value to add\n   */\n  function addUint(\n    Request memory self,\n    string memory key,\n    uint256 value\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.encodeUInt(value);\n  }\n\n  /**\n   * @notice Adds an array of strings to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param values The array of string values to add\n   */\n  function addStringArray(\n    Request memory self,\n    string memory key,\n    string[] memory values\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.startArray();\n    for (uint256 i = 0; i < values.length; i++) {\n      self.buf.encodeString(values[i]);\n    }\n    self.buf.endSequence();\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ENSInterface {\n  // Logged when the owner of a node assigns a new owner to a subnode.\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n  // Logged when the owner of a node transfers ownership to a new account.\n  event Transfer(bytes32 indexed node, address owner);\n\n  // Logged when the resolver for a node changes.\n  event NewResolver(bytes32 indexed node, address resolver);\n\n  // Logged when the TTL of a node changes\n  event NewTTL(bytes32 indexed node, uint64 ttl);\n\n  function setSubnodeOwner(\n    bytes32 node,\n    bytes32 label,\n    address owner\n  ) external;\n\n  function setResolver(bytes32 node, address resolver) external;\n\n  function setOwner(bytes32 node, address owner) external;\n\n  function setTTL(bytes32 node, uint64 ttl) external;\n\n  function owner(bytes32 node) external view returns (address);\n\n  function resolver(bytes32 node) external view returns (address);\n\n  function ttl(bytes32 node) external view returns (uint64);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ChainlinkRequestInterface {\n  function oracleRequest(\n    address sender,\n    uint256 requestPrice,\n    bytes32 serviceAgreementID,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 nonce,\n    uint256 dataVersion,\n    bytes calldata data\n  ) external;\n\n  function cancelOracleRequest(\n    bytes32 requestId,\n    uint256 payment,\n    bytes4 callbackFunctionId,\n    uint256 expiration\n  ) external;\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./OracleInterface.sol\";\nimport \"./ChainlinkRequestInterface.sol\";\n\ninterface OperatorInterface is OracleInterface, ChainlinkRequestInterface {\n  function operatorRequest(\n    address sender,\n    uint256 payment,\n    bytes32 specId,\n    bytes4 callbackFunctionId,\n    uint256 nonce,\n    uint256 dataVersion,\n    bytes calldata data\n  ) external;\n\n  function fulfillOracleRequest2(\n    bytes32 requestId,\n    uint256 payment,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 expiration,\n    bytes calldata data\n  ) external returns (bool);\n\n  function ownerTransferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function distributeFunds(address payable[] calldata receivers, uint256[] calldata amounts) external payable;\n\n  function getAuthorizedSenders() external returns (address[] memory);\n\n  function setAuthorizedSenders(address[] calldata senders) external;\n\n  function getForwarder() external returns (address);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface PointerInterface {\n  function getAddress() external view returns (address);\n}\n"},"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nabstract contract ENSResolver {\n  function addr(bytes32 node) public view virtual returns (address);\n}\n"},"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.4.19;\n\nimport {BufferChainlink} from \"./BufferChainlink.sol\";\n\nlibrary CBORChainlink {\n  using BufferChainlink for BufferChainlink.buffer;\n\n  uint8 private constant MAJOR_TYPE_INT = 0;\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\n  uint8 private constant MAJOR_TYPE_STRING = 3;\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\n  uint8 private constant MAJOR_TYPE_MAP = 5;\n  uint8 private constant MAJOR_TYPE_TAG = 6;\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\n\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\n    if(value <= 23) {\n      buf.appendUint8(uint8((major << 5) | value));\n    } else if (value <= 0xFF) {\n      buf.appendUint8(uint8((major << 5) | 24));\n      buf.appendInt(value, 1);\n    } else if (value <= 0xFFFF) {\n      buf.appendUint8(uint8((major << 5) | 25));\n      buf.appendInt(value, 2);\n    } else if (value <= 0xFFFFFFFF) {\n      buf.appendUint8(uint8((major << 5) | 26));\n      buf.appendInt(value, 4);\n    } else {\n      buf.appendUint8(uint8((major << 5) | 27));\n      buf.appendInt(value, 8);\n    }\n  }\n\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\n    buf.appendUint8(uint8((major << 5) | 31));\n  }\n\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\n    if(value > 0xFFFFFFFFFFFFFFFF) {\n      encodeBigNum(buf, value);\n    } else {\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\n    }\n  }\n\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\n    if(value < -0x10000000000000000) {\n      encodeSignedBigNum(buf, value);\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\n      encodeBigNum(buf, uint(value));\n    } else if(value >= 0) {\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\n    } else {\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\n    }\n  }\n\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\n    buf.append(value);\n  }\n\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\n    encodeBytes(buf, abi.encode(value));\n  }\n\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\n  }\n\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\n    buf.append(bytes(value));\n  }\n\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n  }\n\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n  }\n\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev A library for working with mutable byte buffers in Solidity.\n *\n * Byte buffers are mutable and expandable, and provide a variety of primitives\n * for writing to them. At any time you can fetch a bytes object containing the\n * current contents of the buffer. The bytes object should not be stored between\n * operations, as it may change due to resizing of the buffer.\n */\nlibrary BufferChainlink {\n  /**\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n   *      a capacity. The capacity may be longer than the current value, in\n   *      which case it can be extended without the need to allocate more memory.\n   */\n  struct buffer {\n    bytes buf;\n    uint256 capacity;\n  }\n\n  /**\n   * @dev Initializes a buffer with an initial capacity.\n   * @param buf The buffer to initialize.\n   * @param capacity The number of bytes of space to allocate the buffer.\n   * @return The buffer, for chaining.\n   */\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\n    if (capacity % 32 != 0) {\n      capacity += 32 - (capacity % 32);\n    }\n    // Allocate space for the buffer data\n    buf.capacity = capacity;\n    assembly {\n      let ptr := mload(0x40)\n      mstore(buf, ptr)\n      mstore(ptr, 0)\n      mstore(0x40, add(32, add(ptr, capacity)))\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Initializes a new buffer from an existing bytes object.\n   *      Changes to the buffer may mutate the original value.\n   * @param b The bytes object to initialize the buffer with.\n   * @return A new buffer.\n   */\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\n    buffer memory buf;\n    buf.buf = b;\n    buf.capacity = b.length;\n    return buf;\n  }\n\n  function resize(buffer memory buf, uint256 capacity) private pure {\n    bytes memory oldbuf = buf.buf;\n    init(buf, capacity);\n    append(buf, oldbuf);\n  }\n\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\n    if (a > b) {\n      return a;\n    }\n    return b;\n  }\n\n  /**\n   * @dev Sets buffer length to 0.\n   * @param buf The buffer to truncate.\n   * @return The original buffer, for chaining..\n   */\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\n    assembly {\n      let bufptr := mload(buf)\n      mstore(bufptr, 0)\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The start offset to write to.\n   * @param data The data to append.\n   * @param len The number of bytes to copy.\n   * @return The original buffer, for chaining.\n   */\n  function write(\n    buffer memory buf,\n    uint256 off,\n    bytes memory data,\n    uint256 len\n  ) internal pure returns (buffer memory) {\n    require(len <= data.length);\n\n    if (off + len > buf.capacity) {\n      resize(buf, max(buf.capacity, len + off) * 2);\n    }\n\n    uint256 dest;\n    uint256 src;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Start address = buffer address + offset + sizeof(buffer length)\n      dest := add(add(bufptr, 32), off)\n      // Update buffer length if we're extending it\n      if gt(add(len, off), buflen) {\n        mstore(bufptr, add(len, off))\n      }\n      src := add(data, 32)\n    }\n\n    // Copy word-length chunks while possible\n    for (; len >= 32; len -= 32) {\n      assembly {\n        mstore(dest, mload(src))\n      }\n      dest += 32;\n      src += 32;\n    }\n\n    // Copy remaining bytes\n    unchecked {\n      uint256 mask = (256**(32 - len)) - 1;\n      assembly {\n        let srcpart := and(mload(src), not(mask))\n        let destpart := and(mload(dest), mask)\n        mstore(dest, or(destpart, srcpart))\n      }\n    }\n\n    return buf;\n  }\n\n  /**\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @param len The number of bytes to copy.\n   * @return The original buffer, for chaining.\n   */\n  function append(\n    buffer memory buf,\n    bytes memory data,\n    uint256 len\n  ) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, len);\n  }\n\n  /**\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, data.length);\n  }\n\n  /**\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n   *      capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The offset to write the byte at.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function writeUint8(\n    buffer memory buf,\n    uint256 off,\n    uint8 data\n  ) internal pure returns (buffer memory) {\n    if (off >= buf.capacity) {\n      resize(buf, buf.capacity * 2);\n    }\n\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Address = buffer address + sizeof(buffer length) + off\n      let dest := add(add(bufptr, off), 32)\n      mstore8(dest, data)\n      // Update buffer length if we extended it\n      if eq(off, buflen) {\n        mstore(bufptr, add(buflen, 1))\n      }\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n   *      capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\n    return writeUint8(buf, buf.buf.length, data);\n  }\n\n  /**\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n   *      exceed the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The offset to write at.\n   * @param data The data to append.\n   * @param len The number of bytes to write (left-aligned).\n   * @return The original buffer, for chaining.\n   */\n  function write(\n    buffer memory buf,\n    uint256 off,\n    bytes32 data,\n    uint256 len\n  ) private pure returns (buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    unchecked {\n      uint256 mask = (256**len) - 1;\n      // Right-align data\n      data = data >> (8 * (32 - len));\n      assembly {\n        // Memory address of the buffer data\n        let bufptr := mload(buf)\n        // Address = buffer address + sizeof(buffer length) + off + len\n        let dest := add(add(bufptr, off), len)\n        mstore(dest, or(and(mload(dest), not(mask)), data))\n        // Update buffer length if we extended it\n        if gt(add(off, len), mload(bufptr)) {\n          mstore(bufptr, add(off, len))\n        }\n      }\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n   *      capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The offset to write at.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function writeBytes20(\n    buffer memory buf,\n    uint256 off,\n    bytes20 data\n  ) internal pure returns (buffer memory) {\n    return write(buf, off, bytes32(data), 20);\n  }\n\n  /**\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer, for chhaining.\n   */\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, bytes32(data), 20);\n  }\n\n  /**\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, 32);\n  }\n\n  /**\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The offset to write at.\n   * @param data The data to append.\n   * @param len The number of bytes to write (right-aligned).\n   * @return The original buffer, for chaining.\n   */\n  function writeInt(\n    buffer memory buf,\n    uint256 off,\n    uint256 data,\n    uint256 len\n  ) private pure returns (buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    uint256 mask = (256**len) - 1;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Address = buffer address + off + sizeof(buffer length) + len\n      let dest := add(add(bufptr, off), len)\n      mstore(dest, or(and(mload(dest), not(mask)), data))\n      // Update buffer length if we extended it\n      if gt(add(off, len), mload(bufptr)) {\n        mstore(bufptr, add(off, len))\n      }\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n   * exceed the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer.\n   */\n  function appendInt(\n    buffer memory buf,\n    uint256 data,\n    uint256 len\n  ) internal pure returns (buffer memory) {\n    return writeInt(buf, buf.buf.length, data, len);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface OracleInterface {\n  function fulfillOracleRequest(\n    bytes32 requestId,\n    uint256 payment,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 expiration,\n    bytes32 data\n  ) external returns (bool);\n\n  function isAuthorizedSender(address node) external view returns (bool);\n\n  function withdraw(address recipient, uint256 amount) external;\n\n  function withdrawable() external view returns (uint256);\n}\n"},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2.\npragma solidity ^0.8.4;\n\nimport \"../interfaces/LinkTokenInterface.sol\";\nimport \"../interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"../VRFConsumerBaseV2.sol\";\n\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\n  uint96 public immutable BASE_FEE;\n  uint96 public immutable GAS_PRICE_LINK;\n\n  error InvalidSubscription();\n  error InsufficientBalance();\n  error MustBeSubOwner(address owner);\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint64 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\n  event SubscriptionCreated(uint64 indexed subId, address owner);\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\n\n  uint64 s_currentSubId;\n  uint256 s_nextRequestId = 1;\n  uint256 s_nextPreSeed = 100;\n  struct Subscription {\n    address owner;\n    uint96 balance;\n  }\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\n\n  struct Request {\n    uint64 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n  }\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\n    BASE_FEE = _baseFee;\n    GAS_PRICE_LINK = _gasPriceLink;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert(\"nonexistent request\");\n    }\n    Request memory req = s_requests[_requestId];\n\n    uint256[] memory words = new uint256[](req.numWords);\n    for (uint256 i = 0; i < req.numWords; i++) {\n      words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n    }\n\n    VRFConsumerBaseV2 v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, words);\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\n    if (s_subscriptions[req.subId].balance < payment) {\n      revert InsufficientBalance();\n    }\n    s_subscriptions[req.subId].balance -= payment;\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint96 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += _amount;\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  function requestRandomWords(\n    bytes32 _keyHash,\n    uint64 _subId,\n    uint16 _minimumRequestConfirmations,\n    uint32 _callbackGasLimit,\n    uint32 _numWords\n  ) external override returns (uint256) {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\n\n    emit RandomWordsRequested(\n      _keyHash,\n      requestId,\n      preSeed,\n      _subId,\n      _minimumRequestConfirmations,\n      _callbackGasLimit,\n      _numWords,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  function createSubscription() external override returns (uint64 _subId) {\n    s_currentSubId++;\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\n    return s_currentSubId;\n  }\n\n  function getSubscription(uint64 _subId)\n    external\n    view\n    override\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    )\n  {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, new address[](0));\n  }\n\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\n    delete (s_subscriptions[_subId]);\n  }\n\n  modifier onlySubOwner(uint64 _subId) {\n    address owner = s_subscriptions[_subId].owner;\n    if (owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (msg.sender != owner) {\n      revert MustBeSubOwner(owner);\n    }\n    _;\n  }\n\n  function getRequestConfig()\n    external\n    pure\n    override\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    )\n  {\n    return (3, 2000000, new bytes32[](0));\n  }\n\n  function addConsumer(uint64 _subId, address _consumer) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    revert(\"not implemented\");\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/RandomNumberConsumerV2.sol":{"content":"// SPDX-License-Identifier: MIT\n// An example of a consumer contract that relies on a subscription for funding.\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\n\n/**\n * @title The RandomNumberConsumerV2 contract\n * @notice A contract that gets random values from Chainlink VRF V2\n */\ncontract RandomNumberConsumerV2 is VRFConsumerBaseV2 {\n    VRFCoordinatorV2Interface immutable COORDINATOR;\n\n    // Your subscription ID.\n    uint64 immutable s_subscriptionId;\n\n    // The gas lane to use, which specifies the maximum gas price to bump to.\n    // For a list of available gas lanes on each network,\n    // see https://docs.chain.link/docs/vrf-contracts/#configurations\n    bytes32 immutable s_keyHash;\n\n    // Depends on the number of requested values that you want sent to the\n    // fulfillRandomWords() function. Storing each word costs about 20,000 gas,\n    // so 100,000 is a safe default for this example contract. Test and adjust\n    // this limit based on the network that you select, the size of the request,\n    // and the processing of the callback request in the fulfillRandomWords()\n    // function.\n    uint32 constant CALLBACK_GAS_LIMIT = 100000;\n\n    // The default is 3, but you can set this higher.\n    uint16 constant REQUEST_CONFIRMATIONS = 3;\n\n    // For this example, retrieve 2 random values in one request.\n    // Cannot exceed VRFCoordinatorV2.MAX_NUM_WORDS.\n    uint32 constant NUM_WORDS = 2;\n\n    uint256[] public s_randomWords;\n    uint256 public s_requestId;\n    address s_owner;\n\n    event ReturnedRandomness(uint256[] randomWords);\n\n    /**\n     * @notice Constructor inherits VRFConsumerBaseV2\n     *\n     * @param subscriptionId - the subscription ID that this contract uses for funding requests\n     * @param vrfCoordinator - coordinator, check https://docs.chain.link/docs/vrf-contracts/#configurations\n     * @param keyHash - the gas lane to use, which specifies the maximum gas price to bump to\n     */\n    constructor(\n        uint64 subscriptionId,\n        address vrfCoordinator,\n        bytes32 keyHash\n    ) VRFConsumerBaseV2(vrfCoordinator) {\n        COORDINATOR = VRFCoordinatorV2Interface(vrfCoordinator);\n        s_keyHash = keyHash;\n        s_owner = msg.sender;\n        s_subscriptionId = subscriptionId;\n    }\n\n    /**\n     * @notice Requests randomness\n     * Assumes the subscription is funded sufficiently; \"Words\" refers to unit of data in Computer Science\n     */\n    function requestRandomWords() external onlyOwner {\n        // Will revert if subscription is not set and funded.\n        s_requestId = COORDINATOR.requestRandomWords(\n            s_keyHash,\n            s_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            CALLBACK_GAS_LIMIT,\n            NUM_WORDS\n        );\n    }\n\n    /**\n     * @notice Callback function used by VRF Coordinator\n     *\n     * @param requestId - id of the request\n     * @param randomWords - array of random results from VRF Coordinator\n     */\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n        s_randomWords = randomWords;\n        emit ReturnedRandomness(randomWords);\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == s_owner);\n        _;\n    }\n}\n"},"contracts/test/VRFCoordinatorV2Mock.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\";\n"},"contracts/KeepersCounter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\n\n/**\n * @title The Counter contract\n * @notice  A keeper-compatible contract that increments counter variable at fixed time intervals\n */\ncontract KeepersCounter is KeeperCompatibleInterface {\n    /**\n     * Public counter variable\n     */\n    uint256 public counter;\n\n    /**\n     * Use an interval in seconds and a timestamp to slow execution of Upkeep\n     */\n    uint256 public immutable interval;\n    uint256 public lastTimeStamp;\n\n    /**\n     * @notice Executes once when a contract is created to initialize state variables\n     *\n     * @param updateInterval - Period of time between two counter increments expressed as UNIX timestamp value\n     */\n    constructor(uint256 updateInterval) {\n        interval = updateInterval;\n        lastTimeStamp = block.timestamp;\n\n        counter = 0;\n    }\n\n    /**\n     * @notice Checks if the contract requires work to be done\n     */\n    function checkUpkeep(\n        bytes memory /* checkData */\n    )\n        public\n        view\n        override\n        returns (\n            bool upkeepNeeded,\n            bytes memory /* performData */\n        )\n    {\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > interval;\n        // We don't use the checkData in this example. The checkData is defined when the Upkeep was registered.\n    }\n\n    /**\n     * @notice Performs the work on the contract, if instructed by :checkUpkeep():\n     */\n    function performUpkeep(\n        bytes calldata /* performData */\n    ) external override {\n        // add some verification\n        (bool upkeepNeeded, ) = checkUpkeep(\"\");\n        require(upkeepNeeded, \"Time interval not met\");\n\n        lastTimeStamp = block.timestamp;\n        counter = counter + 1;\n        // We don't use the performData in this example. The performData is generated by the Keeper's call to your checkUpkeep function\n    }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface KeeperCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"contracts/test/fuzzing/KeepersCounterEchidnaTest.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"../../KeepersCounter.sol\";\n\ncontract KeepersCounterEchidnaTest is KeepersCounter {\n    constructor() KeepersCounter(8 days) {}\n\n    function echidna_test_perform_upkeep_gate() public view returns (bool) {\n        return counter == 0;\n    }\n}\n"},"contracts/PriceConsumerV3.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n/**\n * @title The PriceConsumerV3 contract\n * @notice Acontract that returns latest price from Chainlink Price Feeds\n */\ncontract PriceConsumerV3 {\n    AggregatorV3Interface internal immutable priceFeed;\n\n    /**\n     * @notice Executes once when a contract is created to initialize state variables\n     *\n     * @param _priceFeed - Price Feed Address\n     *\n     * Network: Goerli\n     * Aggregator: ETH/USD\n     * Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\n     */\n    constructor(address _priceFeed) {\n        priceFeed = AggregatorV3Interface(_priceFeed);\n    }\n\n    /**\n     * @notice Returns the latest price\n     *\n     * @return latest price\n     */\n    function getLatestPrice() public view returns (int256) {\n        (\n            uint80 roundID,\n            int256 price,\n            uint256 startedAt,\n            uint256 timeStamp,\n            uint80 answeredInRound\n        ) = priceFeed.latestRoundData();\n        return price;\n    }\n\n    /**\n     * @notice Returns the Price Feed address\n     *\n     * @return Price Feed address\n     */\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\n        return priceFeed;\n    }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/KeepersCounter.sol:45:13:\n   |\n45 |             bytes memory /* performData */\n   |             ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":1208,"file":"contracts/KeepersCounter.sol","start":1196},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:186:24:\n    |\n186 |   function addConsumer(uint64 _subId, address _consumer) external pure override {\n    |                        ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5777,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5764},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:186:39:\n    |\n186 |   function addConsumer(uint64 _subId, address _consumer) external pure override {\n    |                                       ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5796,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5779},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:190:27:\n    |\n190 |   function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    |                           ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5898,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5885},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:190:42:\n    |\n190 |   function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    |                                          ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5917,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5900},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:194:45:\n    |\n194 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                             ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6037,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6024},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:194:60:\n    |\n194 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                                            ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6056,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6039},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:198:44:\n    |\n198 |   function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    |                                            ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6175,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6162},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/PriceConsumerV3.sol:33:13:\n   |\n33 |             uint80 roundID,\n   |             ^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":899,"file":"contracts/PriceConsumerV3.sol","start":885},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/PriceConsumerV3.sol:35:13:\n   |\n35 |             uint256 startedAt,\n   |             ^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":956,"file":"contracts/PriceConsumerV3.sol","start":939},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/PriceConsumerV3.sol:36:13:\n   |\n36 |             uint256 timeStamp,\n   |             ^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":987,"file":"contracts/PriceConsumerV3.sol","start":970},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/PriceConsumerV3.sol:37:13:\n   |\n37 |             uint80 answeredInRound\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":1023,"file":"contracts/PriceConsumerV3.sol","start":1001},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/RandomNumberConsumerV2.sol:83:33:\n   |\n83 |     function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n   |                                 ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3113,"file":"contracts/RandomNumberConsumerV2.sol","start":3096},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/Chainlink.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/Chainlink.sol","exportedSymbols":{"BufferChainlink":[2509],"CBORChainlink":[2956],"Chainlink":[268]},"id":269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol","file":"./vendor/CBORChainlink.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":269,"sourceUnit":2957,"src":"57:57:0","symbolAliases":[{"foreign":{"id":2,"name":"CBORChainlink","nodeType":"Identifier","overloadedDeclarations":[],"src":"65:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol","file":"./vendor/BufferChainlink.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":269,"sourceUnit":2510,"src":"115:61:0","symbolAliases":[{"foreign":{"id":4,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"src":"123:15:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"178:114:0","text":" @title Library for common Chainlink functions\n @dev Uses imported CBOR library for encoding to buffer"},"fullyImplemented":true,"id":268,"linearizedBaseContracts":[268],"name":"Chainlink","nameLocation":"301:9:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":9,"mutability":"constant","name":"defaultBufferSize","nameLocation":"341:17:0","nodeType":"VariableDeclaration","scope":268,"src":"315:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"315:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323536","id":8,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"361:3:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"visibility":"internal"},{"id":13,"libraryName":{"id":10,"name":"CBORChainlink","nodeType":"IdentifierPath","referencedDeclaration":2956,"src":"420:13:0"},"nodeType":"UsingForDirective","src":"414:47:0","typeName":{"id":12,"nodeType":"UserDefinedTypeName","pathNode":{"id":11,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"438:22:0"},"referencedDeclaration":1995,"src":"438:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}}},{"canonicalName":"Chainlink.Request","id":25,"members":[{"constant":false,"id":15,"mutability":"mutable","name":"id","nameLocation":"494:2:0","nodeType":"VariableDeclaration","scope":25,"src":"486:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14,"name":"bytes32","nodeType":"ElementaryTypeName","src":"486:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"callbackAddress","nameLocation":"510:15:0","nodeType":"VariableDeclaration","scope":25,"src":"502:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"502:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"538:18:0","nodeType":"VariableDeclaration","scope":25,"src":"531:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18,"name":"bytes4","nodeType":"ElementaryTypeName","src":"531:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"nonce","nameLocation":"570:5:0","nodeType":"VariableDeclaration","scope":25,"src":"562:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"buf","nameLocation":"604:3:0","nodeType":"VariableDeclaration","scope":25,"src":"581:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":23,"nodeType":"UserDefinedTypeName","pathNode":{"id":22,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"581:22:0"},"referencedDeclaration":1995,"src":"581:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"name":"Request","nameLocation":"472:7:0","nodeType":"StructDefinition","scope":268,"src":"465:147:0","visibility":"public"},{"body":{"id":69,"nodeType":"Block","src":"1155:183:0","statements":[{"expression":{"arguments":[{"expression":{"id":44,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1182:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":45,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"1182:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":46,"name":"defaultBufferSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"1192:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":41,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"1161:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BufferChainlink_$2509_$","typeString":"type(library BufferChainlink)"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"init","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"1161:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1161:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":48,"nodeType":"ExpressionStatement","src":"1161:49:0"},{"expression":{"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":49,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1216:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":51,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":15,"src":"1216:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":52,"name":"jobId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1226:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1216:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":54,"nodeType":"ExpressionStatement","src":"1216:15:0"},{"expression":{"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":55,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1237:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":57,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"callbackAddress","nodeType":"MemberAccess","referencedDeclaration":17,"src":"1237:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":58,"name":"callbackAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1260:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1237:35:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60,"nodeType":"ExpressionStatement","src":"1237:35:0"},{"expression":{"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":61,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1278:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":63,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"callbackFunctionId","nodeType":"MemberAccess","referencedDeclaration":19,"src":"1278:23:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":64,"name":"callbackFunc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1304:12:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1278:38:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":66,"nodeType":"ExpressionStatement","src":"1278:38:0"},{"expression":{"id":67,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1329:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"functionReturnParameters":40,"id":68,"nodeType":"Return","src":"1322:11:0"}]},"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"616:368:0","text":" @notice Initializes a Chainlink request\n @dev Sets the ID, callback address, and callback function signature on the request\n @param self The uninitialized request\n @param jobId The Job Specification ID\n @param callbackAddr The callback address\n @param callbackFunc The callback function signature\n @return The initialized request"},"id":70,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"996:10:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"self","nameLocation":"1027:4:0","nodeType":"VariableDeclaration","scope":70,"src":"1012:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":28,"nodeType":"UserDefinedTypeName","pathNode":{"id":27,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1012:7:0"},"referencedDeclaration":25,"src":"1012:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"jobId","nameLocation":"1045:5:0","nodeType":"VariableDeclaration","scope":70,"src":"1037:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1037:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"callbackAddr","nameLocation":"1064:12:0","nodeType":"VariableDeclaration","scope":70,"src":"1056:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"callbackFunc","nameLocation":"1089:12:0","nodeType":"VariableDeclaration","scope":70,"src":"1082:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":34,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1082:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1006:99:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"1129:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":38,"nodeType":"UserDefinedTypeName","pathNode":{"id":37,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1129:17:0"},"referencedDeclaration":25,"src":"1129:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"src":"1128:26:0"},"scope":268,"src":"987:351:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":96,"nodeType":"Block","src":"1648:98:0","statements":[{"expression":{"arguments":[{"expression":{"id":82,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1675:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":83,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"1675:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"id":84,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"1685:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1685:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":79,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"1654:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BufferChainlink_$2509_$","typeString":"type(library BufferChainlink)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"init","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"1654:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":87,"nodeType":"ExpressionStatement","src":"1654:43:0"},{"expression":{"arguments":[{"expression":{"id":91,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1726:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":92,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"1726:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":93,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"1736:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":88,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"1703:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BufferChainlink_$2509_$","typeString":"type(library BufferChainlink)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"append","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"1703:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure returns (struct BufferChainlink.buffer memory)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1703:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":95,"nodeType":"ExpressionStatement","src":"1703:38:0"}]},"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"1342:230:0","text":" @notice Sets the data for the buffer without encoding CBOR on-chain\n @dev CBOR can be closed with curly-brackets {} or they can be left off\n @param self The initialized request\n @param data The CBOR data"},"id":97,"implemented":true,"kind":"function","modifiers":[],"name":"setBuffer","nameLocation":"1584:9:0","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"self","nameLocation":"1609:4:0","nodeType":"VariableDeclaration","scope":97,"src":"1594:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":73,"nodeType":"UserDefinedTypeName","pathNode":{"id":72,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1594:7:0"},"referencedDeclaration":25,"src":"1594:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"data","nameLocation":"1628:4:0","nodeType":"VariableDeclaration","scope":97,"src":"1615:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":75,"name":"bytes","nodeType":"ElementaryTypeName","src":"1615:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1593:40:0"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[],"src":"1648:0:0"},"scope":268,"src":"1575:171:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":124,"nodeType":"Block","src":"2055:71:0","statements":[{"expression":{"arguments":[{"id":113,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"2083:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":108,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2061:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2061:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2919,"src":"2061:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2061:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":115,"nodeType":"ExpressionStatement","src":"2061:26:0"},{"expression":{"arguments":[{"id":121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2115:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":116,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2093:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2093:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2919,"src":"2093:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2093:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"ExpressionStatement","src":"2093:28:0"}]},"documentation":{"id":98,"nodeType":"StructuredDocumentation","src":"1750:198:0","text":" @notice Adds a string value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The string value to add"},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"1960:3:0","nodeType":"FunctionDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"self","nameLocation":"1984:4:0","nodeType":"VariableDeclaration","scope":125,"src":"1969:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":100,"nodeType":"UserDefinedTypeName","pathNode":{"id":99,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1969:7:0"},"referencedDeclaration":25,"src":"1969:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"key","nameLocation":"2008:3:0","nodeType":"VariableDeclaration","scope":125,"src":"1994:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":102,"name":"string","nodeType":"ElementaryTypeName","src":"1994:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"value","nameLocation":"2031:5:0","nodeType":"VariableDeclaration","scope":125,"src":"2017:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":104,"name":"string","nodeType":"ElementaryTypeName","src":"2017:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1963:77:0"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2055:0:0"},"scope":268,"src":"1951:175:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"2437:70:0","statements":[{"expression":{"arguments":[{"id":141,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"2465:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":136,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"2443:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2443:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2919,"src":"2443:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2443:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"2443:26:0"},{"expression":{"arguments":[{"id":149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"2496:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":144,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2475:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeBytes","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"2475:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_bytes_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2475:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2475:27:0"}]},"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2130:196:0","text":" @notice Adds a bytes value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The bytes value to add"},"id":153,"implemented":true,"kind":"function","modifiers":[],"name":"addBytes","nameLocation":"2338:8:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"self","nameLocation":"2367:4:0","nodeType":"VariableDeclaration","scope":153,"src":"2352:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":128,"nodeType":"UserDefinedTypeName","pathNode":{"id":127,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2352:7:0"},"referencedDeclaration":25,"src":"2352:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"key","nameLocation":"2391:3:0","nodeType":"VariableDeclaration","scope":153,"src":"2377:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":130,"name":"string","nodeType":"ElementaryTypeName","src":"2377:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"value","nameLocation":"2413:5:0","nodeType":"VariableDeclaration","scope":153,"src":"2400:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":132,"name":"bytes","nodeType":"ElementaryTypeName","src":"2400:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2346:76:0"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"2437:0:0"},"scope":268,"src":"2329:178:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":180,"nodeType":"Block","src":"2812:68:0","statements":[{"expression":{"arguments":[{"id":169,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2840:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":164,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2818:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2818:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2919,"src":"2818:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2818:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":171,"nodeType":"ExpressionStatement","src":"2818:26:0"},{"expression":{"arguments":[{"id":177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2869:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":172,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2850:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2850:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeInt","nodeType":"MemberAccess","referencedDeclaration":2795,"src":"2850:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,int256) pure"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2850:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"ExpressionStatement","src":"2850:25:0"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"2511:198:0","text":" @notice Adds a int256 value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The int256 value to add"},"id":181,"implemented":true,"kind":"function","modifiers":[],"name":"addInt","nameLocation":"2721:6:0","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"self","nameLocation":"2748:4:0","nodeType":"VariableDeclaration","scope":181,"src":"2733:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":156,"nodeType":"UserDefinedTypeName","pathNode":{"id":155,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2733:7:0"},"referencedDeclaration":25,"src":"2733:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"key","nameLocation":"2772:3:0","nodeType":"VariableDeclaration","scope":181,"src":"2758:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":158,"name":"string","nodeType":"ElementaryTypeName","src":"2758:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"value","nameLocation":"2788:5:0","nodeType":"VariableDeclaration","scope":181,"src":"2781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":160,"name":"int256","nodeType":"ElementaryTypeName","src":"2781:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2727:70:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"2812:0:0"},"scope":268,"src":"2712:168:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":208,"nodeType":"Block","src":"3189:69:0","statements":[{"expression":{"arguments":[{"id":197,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"3217:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":192,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3195:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3195:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2919,"src":"3195:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3195:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"ExpressionStatement","src":"3195:26:0"},{"expression":{"arguments":[{"id":205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3247:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":200,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3227:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3227:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeUInt","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"3227:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3227:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"3227:26:0"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"2884:200:0","text":" @notice Adds a uint256 value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The uint256 value to add"},"id":209,"implemented":true,"kind":"function","modifiers":[],"name":"addUint","nameLocation":"3096:7:0","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"self","nameLocation":"3124:4:0","nodeType":"VariableDeclaration","scope":209,"src":"3109:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":184,"nodeType":"UserDefinedTypeName","pathNode":{"id":183,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"3109:7:0"},"referencedDeclaration":25,"src":"3109:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"key","nameLocation":"3148:3:0","nodeType":"VariableDeclaration","scope":209,"src":"3134:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":186,"name":"string","nodeType":"ElementaryTypeName","src":"3134:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"value","nameLocation":"3165:5:0","nodeType":"VariableDeclaration","scope":209,"src":"3157:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3157:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3103:71:0"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"3189:0:0"},"scope":268,"src":"3087:171:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":266,"nodeType":"Block","src":"3597:188:0","statements":[{"expression":{"arguments":[{"id":226,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"3625:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":221,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3603:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3603:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2919,"src":"3603:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3603:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":228,"nodeType":"ExpressionStatement","src":"3603:26:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":229,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3635:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3635:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startArray","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"3635:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory) pure"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3635:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":235,"nodeType":"ExpressionStatement","src":"3635:21:0"},{"body":{"id":257,"nodeType":"Block","src":"3706:47:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":252,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3736:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":254,"indexExpression":{"id":253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3743:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3736:9:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":247,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3714:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3714:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2919,"src":"3714:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3714:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"3714:32:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3682:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":241,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3686:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3686:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3682:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":258,"initializationExpression":{"assignments":[237],"declarations":[{"constant":false,"id":237,"mutability":"mutable","name":"i","nameLocation":"3675:1:0","nodeType":"VariableDeclaration","scope":258,"src":"3667:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3667:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":239,"initialValue":{"hexValue":"30","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3679:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3667:13:0"},"loopExpression":{"expression":{"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3701:3:0","subExpression":{"id":244,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3701:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":246,"nodeType":"ExpressionStatement","src":"3701:3:0"},"nodeType":"ForStatement","src":"3662:91:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":259,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3758:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3758:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endSequence","nodeType":"MemberAccess","referencedDeclaration":2955,"src":"3758:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory) pure"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3758:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":265,"nodeType":"ExpressionStatement","src":"3758:22:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3262:214:0","text":" @notice Adds an array of strings to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param values The array of string values to add"},"id":267,"implemented":true,"kind":"function","modifiers":[],"name":"addStringArray","nameLocation":"3488:14:0","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"self","nameLocation":"3523:4:0","nodeType":"VariableDeclaration","scope":267,"src":"3508:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":212,"nodeType":"UserDefinedTypeName","pathNode":{"id":211,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"3508:7:0"},"referencedDeclaration":25,"src":"3508:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"key","nameLocation":"3547:3:0","nodeType":"VariableDeclaration","scope":267,"src":"3533:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":214,"name":"string","nodeType":"ElementaryTypeName","src":"3533:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"values","nameLocation":"3572:6:0","nodeType":"VariableDeclaration","scope":267,"src":"3556:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":216,"name":"string","nodeType":"ElementaryTypeName","src":"3556:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":217,"nodeType":"ArrayTypeName","src":"3556:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3502:80:0"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"3597:0:0"},"scope":268,"src":"3479:306:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":269,"src":"293:3494:0","usedErrors":[]}],"src":"32:3756:0"},"id":0},"@chainlink/contracts/src/v0.8/ChainlinkClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol","exportedSymbols":{"BufferChainlink":[2509],"CBORChainlink":[2956],"Chainlink":[268],"ChainlinkClient":[861],"ChainlinkRequestInterface":[998],"ENSInterface":[1078],"ENSResolver_Chainlink":[2966],"LinkTokenInterface":[1192],"OperatorInterface":[1272],"OracleInterface":[1311],"PointerInterface":[1319]},"id":862,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":270,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/Chainlink.sol","file":"./Chainlink.sol","id":271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":269,"src":"57:25:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol","file":"./interfaces/ENSInterface.sol","id":272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":1079,"src":"83:39:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","file":"./interfaces/LinkTokenInterface.sol","id":273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":1193,"src":"123:45:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol","file":"./interfaces/ChainlinkRequestInterface.sol","id":274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":999,"src":"169:52:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol","file":"./interfaces/OperatorInterface.sol","id":275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":1273,"src":"222:44:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol","file":"./interfaces/PointerInterface.sol","id":276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":1320,"src":"267:43:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol","file":"./vendor/ENSResolver.sol","id":278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":2967,"src":"311:78:1","symbolAliases":[{"foreign":{"id":277,"name":"ENSResolver","nodeType":"Identifier","overloadedDeclarations":[],"src":"319:11:1","typeDescriptions":{}},"local":"ENSResolver_Chainlink","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"391:157:1","text":" @title The ChainlinkClient contract\n @notice Contract writers can inherit this contract in order to create requests for the\n Chainlink network"},"fullyImplemented":true,"id":861,"linearizedBaseContracts":[861],"name":"ChainlinkClient","nameLocation":"567:15:1","nodeType":"ContractDefinition","nodes":[{"id":283,"libraryName":{"id":280,"name":"Chainlink","nodeType":"IdentifierPath","referencedDeclaration":268,"src":"593:9:1"},"nodeType":"UsingForDirective","src":"587:38:1","typeName":{"id":282,"nodeType":"UserDefinedTypeName","pathNode":{"id":281,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"607:17:1"},"referencedDeclaration":25,"src":"607:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}}},{"constant":true,"id":288,"mutability":"constant","name":"LINK_DIVISIBILITY","nameLocation":"655:17:1","nodeType":"VariableDeclaration","scope":861,"src":"629:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"675:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"679:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"675:6:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":true,"id":291,"mutability":"constant","name":"AMOUNT_OVERRIDE","nameLocation":"710:15:1","nodeType":"VariableDeclaration","scope":861,"src":"685:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"728:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":297,"mutability":"constant","name":"SENDER_OVERRIDE","nameLocation":"758:15:1","nodeType":"VariableDeclaration","scope":861,"src":"733:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"733:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"784:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"776:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:1","typeDescriptions":{}}},"id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"776:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":300,"mutability":"constant","name":"ORACLE_ARGS_VERSION","nameLocation":"815:19:1","nodeType":"VariableDeclaration","scope":861,"src":"790:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":303,"mutability":"constant","name":"OPERATOR_ARGS_VERSION","nameLocation":"867:21:1","nodeType":"VariableDeclaration","scope":861,"src":"842:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":308,"mutability":"constant","name":"ENS_TOKEN_SUBNAME","nameLocation":"921:17:1","nodeType":"VariableDeclaration","scope":861,"src":"896:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"896:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6c696e6b","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"951:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_90430203e2d9ce04f00738d355173358b054545ecb52218de9c6fb01cbd9aeaf","typeString":"literal_string \"link\""},"value":"link"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_90430203e2d9ce04f00738d355173358b054545ecb52218de9c6fb01cbd9aeaf","typeString":"literal_string \"link\""}],"id":305,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"941:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":313,"mutability":"constant","name":"ENS_ORACLE_SUBNAME","nameLocation":"987:18:1","nodeType":"VariableDeclaration","scope":861,"src":"962:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"962:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6f7261636c65","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1018:8:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6","typeString":"literal_string \"oracle\""},"value":"oracle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6","typeString":"literal_string \"oracle\""}],"id":310,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1008:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1008:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":316,"mutability":"constant","name":"LINK_TOKEN_POINTER","nameLocation":"1056:18:1","nodeType":"VariableDeclaration","scope":861,"src":"1031:88:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307843383962443445313633324433413433434230334141416435323632636265343033384263353731","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571"},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"s_ens","nameLocation":"1145:5:1","nodeType":"VariableDeclaration","scope":861,"src":"1124:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$1078","typeString":"contract ENSInterface"},"typeName":{"id":318,"nodeType":"UserDefinedTypeName","pathNode":{"id":317,"name":"ENSInterface","nodeType":"IdentifierPath","referencedDeclaration":1078,"src":"1124:12:1"},"referencedDeclaration":1078,"src":"1124:12:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$1078","typeString":"contract ENSInterface"}},"visibility":"private"},{"constant":false,"id":321,"mutability":"mutable","name":"s_ensNode","nameLocation":"1170:9:1","nodeType":"VariableDeclaration","scope":861,"src":"1154:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1154:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":324,"mutability":"mutable","name":"s_link","nameLocation":"1210:6:1","nodeType":"VariableDeclaration","scope":861,"src":"1183:33:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1192","typeString":"contract LinkTokenInterface"},"typeName":{"id":323,"nodeType":"UserDefinedTypeName","pathNode":{"id":322,"name":"LinkTokenInterface","nodeType":"IdentifierPath","referencedDeclaration":1192,"src":"1183:18:1"},"referencedDeclaration":1192,"src":"1183:18:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1192","typeString":"contract LinkTokenInterface"}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"s_oracle","nameLocation":"1246:8:1","nodeType":"VariableDeclaration","scope":861,"src":"1220:34:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"OperatorInterface","nodeType":"IdentifierPath","referencedDeclaration":1272,"src":"1220:17:1"},"referencedDeclaration":1272,"src":"1220:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}},"visibility":"private"},{"constant":false,"id":330,"mutability":"mutable","name":"s_requestCount","nameLocation":"1274:14:1","nodeType":"VariableDeclaration","scope":861,"src":"1258:34:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1258:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1291:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"s_pendingRequests","nameLocation":"1332:17:1","nodeType":"VariableDeclaration","scope":861,"src":"1296:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":333,"keyType":{"id":331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1304:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1296:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"anonymous":false,"id":338,"name":"ChainlinkRequested","nameLocation":"1360:18:1","nodeType":"EventDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1395:2:1","nodeType":"VariableDeclaration","scope":338,"src":"1379:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1379:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1378:20:1"},"src":"1354:45:1"},{"anonymous":false,"id":342,"name":"ChainlinkFulfilled","nameLocation":"1408:18:1","nodeType":"EventDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1443:2:1","nodeType":"VariableDeclaration","scope":342,"src":"1427:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1427:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1426:20:1"},"src":"1402:45:1"},{"anonymous":false,"id":346,"name":"ChainlinkCancelled","nameLocation":"1456:18:1","nodeType":"EventDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1491:2:1","nodeType":"VariableDeclaration","scope":346,"src":"1475:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1475:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1474:20:1"},"src":"1450:45:1"},{"body":{"id":372,"nodeType":"Block","src":"2018:115:1","statements":[{"assignments":[363],"declarations":[{"constant":false,"id":363,"mutability":"mutable","name":"req","nameLocation":"2049:3:1","nodeType":"VariableDeclaration","scope":372,"src":"2024:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":362,"nodeType":"UserDefinedTypeName","pathNode":{"id":361,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2024:17:1"},"referencedDeclaration":25,"src":"2024:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"id":364,"nodeType":"VariableDeclarationStatement","src":"2024:28:1"},{"expression":{"arguments":[{"id":367,"name":"specId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2080:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":368,"name":"callbackAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"2088:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"callbackFunctionSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2102:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":365,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2065:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":70,"src":"2065:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$25_memory_ptr_$bound_to$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (struct Chainlink.Request memory,bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"functionReturnParameters":358,"id":371,"nodeType":"Return","src":"2058:70:1"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1499:348:1","text":" @notice Creates a request that can hold additional parameters\n @param specId The Job Specification ID that the request will be created for\n @param callbackAddr address to operate the callback on\n @param callbackFunctionSignature function signature to use for the callback\n @return A Chainlink Request struct in memory"},"id":373,"implemented":true,"kind":"function","modifiers":[],"name":"buildChainlinkRequest","nameLocation":"1859:21:1","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"specId","nameLocation":"1894:6:1","nodeType":"VariableDeclaration","scope":373,"src":"1886:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"callbackAddr","nameLocation":"1914:12:1","nodeType":"VariableDeclaration","scope":373,"src":"1906:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"1906:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"callbackFunctionSignature","nameLocation":"1939:25:1","nodeType":"VariableDeclaration","scope":373,"src":"1932:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":352,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1932:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1880:88:1"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":373,"src":"1992:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":356,"nodeType":"UserDefinedTypeName","pathNode":{"id":355,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1992:17:1"},"referencedDeclaration":25,"src":"1992:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"src":"1991:26:1"},"scope":861,"src":"1850:283:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":400,"nodeType":"Block","src":"2571:116:1","statements":[{"assignments":[388],"declarations":[{"constant":false,"id":388,"mutability":"mutable","name":"req","nameLocation":"2602:3:1","nodeType":"VariableDeclaration","scope":400,"src":"2577:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":387,"nodeType":"UserDefinedTypeName","pathNode":{"id":386,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2577:17:1"},"referencedDeclaration":25,"src":"2577:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"id":389,"nodeType":"VariableDeclarationStatement","src":"2577:28:1"},{"expression":{"arguments":[{"id":392,"name":"specId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2633:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":395,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2649:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}],"id":394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"2641:7:1","typeDescriptions":{}}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2641:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"callbackFunctionSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2656:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":390,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2618:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":70,"src":"2618:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$25_memory_ptr_$bound_to$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (struct Chainlink.Request memory,bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2618:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"functionReturnParameters":383,"id":399,"nodeType":"Return","src":"2611:71:1"}]},"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"2137:288:1","text":" @notice Creates a request that can hold additional parameters\n @param specId The Job Specification ID that the request will be created for\n @param callbackFunctionSignature function signature to use for the callback\n @return A Chainlink Request struct in memory"},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"buildOperatorRequest","nameLocation":"2437:20:1","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"specId","nameLocation":"2466:6:1","nodeType":"VariableDeclaration","scope":401,"src":"2458:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2458:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"callbackFunctionSignature","nameLocation":"2481:25:1","nodeType":"VariableDeclaration","scope":401,"src":"2474:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":377,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2474:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2457:50:1"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":401,"src":"2543:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":381,"nodeType":"UserDefinedTypeName","pathNode":{"id":380,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2543:17:1"},"referencedDeclaration":25,"src":"2543:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"src":"2542:26:1"},"scope":861,"src":"2428:259:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":421,"nodeType":"Block","src":"3096:73:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":415,"name":"s_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3140:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3132:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3132:7:1","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3132:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":417,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"3151:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},{"id":418,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3156:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"sendChainlinkRequestTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3109:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3109:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":411,"id":420,"nodeType":"Return","src":"3102:62:1"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"2691:298:1","text":" @notice Creates a Chainlink request to the stored oracle address\n @dev Calls `chainlinkRequestTo` with the stored oracle address\n @param req The initialized Chainlink Request\n @param payment The amount of LINK to send for the request\n @return requestId The request ID"},"id":422,"implemented":true,"kind":"function","modifiers":[],"name":"sendChainlinkRequest","nameLocation":"3001:20:1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"req","nameLocation":"3047:3:1","nodeType":"VariableDeclaration","scope":422,"src":"3022:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":404,"nodeType":"UserDefinedTypeName","pathNode":{"id":403,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"3022:17:1"},"referencedDeclaration":25,"src":"3022:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"payment","nameLocation":"3060:7:1","nodeType":"VariableDeclaration","scope":422,"src":"3052:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"3052:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3021:47:1"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"3087:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3087:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3086:9:1"},"scope":861,"src":"2992:177:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"3842:601:1","statements":[{"assignments":[436],"declarations":[{"constant":false,"id":436,"mutability":"mutable","name":"nonce","nameLocation":"3856:5:1","nodeType":"VariableDeclaration","scope":476,"src":"3848:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3848:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":438,"initialValue":{"id":437,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3864:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3848:30:1"},{"expression":{"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":439,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3884:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3901:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3909:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3901:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3884:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":444,"nodeType":"ExpressionStatement","src":"3884:26:1"},{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"encodedRequest","nameLocation":"3929:14:1","nodeType":"VariableDeclaration","scope":476,"src":"3916:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":445,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":468,"initialValue":{"arguments":[{"expression":{"expression":{"id":449,"name":"ChainlinkRequestInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3976:25:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ChainlinkRequestInterface_$998_$","typeString":"type(contract ChainlinkRequestInterface)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"oracleRequest","nodeType":"MemberAccess","referencedDeclaration":986,"src":"3976:39:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function ChainlinkRequestInterface.oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes calldata)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3976:48:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":452,"name":"SENDER_OVERRIDE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"4032:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"AMOUNT_OVERRIDE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"4140:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":454,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"4245:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":15,"src":"4245:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":458,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4267:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4259:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:1","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4259:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":460,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"4280:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackFunctionId","nodeType":"MemberAccess","referencedDeclaration":19,"src":"4280:22:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":462,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4310:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":463,"name":"ORACLE_ARGS_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4323:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":464,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"4350:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4350:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"4350:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":447,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3946:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3946:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3946:421:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3916:451:1"},{"expression":{"arguments":[{"id":470,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"4392:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4407:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":472,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"4414:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":473,"name":"encodedRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4423:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":469,"name":"_rawRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4380:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,uint256,uint256,bytes memory) returns (bytes32)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4380:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":434,"id":475,"nodeType":"Return","src":"4373:65:1"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"3173:511:1","text":" @notice Creates a Chainlink request to the specified oracle address\n @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n send LINK which creates a request on the target oracle contract.\n Emits ChainlinkRequested event.\n @param oracleAddress The address of the oracle for the request\n @param req The initialized Chainlink Request\n @param payment The amount of LINK to send for the request\n @return requestId The request ID"},"id":477,"implemented":true,"kind":"function","modifiers":[],"name":"sendChainlinkRequestTo","nameLocation":"3696:22:1","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"oracleAddress","nameLocation":"3732:13:1","nodeType":"VariableDeclaration","scope":477,"src":"3724:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"3724:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"req","nameLocation":"3776:3:1","nodeType":"VariableDeclaration","scope":477,"src":"3751:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":427,"nodeType":"UserDefinedTypeName","pathNode":{"id":426,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"3751:17:1"},"referencedDeclaration":25,"src":"3751:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"payment","nameLocation":"3793:7:1","nodeType":"VariableDeclaration","scope":477,"src":"3785:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"3785:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3718:86:1"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"requestId","nameLocation":"3831:9:1","nodeType":"VariableDeclaration","scope":477,"src":"3823:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3823:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3822:19:1"},"scope":861,"src":"3687:756:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":497,"nodeType":"Block","src":"4907:72:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":491,"name":"s_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4950:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}],"id":490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4942:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"4942:7:1","typeDescriptions":{}}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4942:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4961:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},{"id":494,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"4966:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":488,"name":"sendOperatorRequestTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4920:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4920:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":487,"id":496,"nodeType":"Return","src":"4913:61:1"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"4447:354:1","text":" @notice Creates a Chainlink request to the stored oracle address\n @dev This function supports multi-word response\n @dev Calls `sendOperatorRequestTo` with the stored oracle address\n @param req The initialized Chainlink Request\n @param payment The amount of LINK to send for the request\n @return requestId The request ID"},"id":498,"implemented":true,"kind":"function","modifiers":[],"name":"sendOperatorRequest","nameLocation":"4813:19:1","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"req","nameLocation":"4858:3:1","nodeType":"VariableDeclaration","scope":498,"src":"4833:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"4833:17:1"},"referencedDeclaration":25,"src":"4833:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"payment","nameLocation":"4871:7:1","nodeType":"VariableDeclaration","scope":498,"src":"4863:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4832:47:1"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"4898:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4898:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4897:9:1"},"scope":861,"src":"4804:175:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":548,"nodeType":"Block","src":"5704:576:1","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"nonce","nameLocation":"5718:5:1","nodeType":"VariableDeclaration","scope":548,"src":"5710:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"5710:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5726:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5710:30:1"},{"expression":{"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5746:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":516,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5763:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5771:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5763:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5746:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":520,"nodeType":"ExpressionStatement","src":"5746:26:1"},{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"encodedRequest","nameLocation":"5791:14:1","nodeType":"VariableDeclaration","scope":548,"src":"5778:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":521,"name":"bytes","nodeType":"ElementaryTypeName","src":"5778:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":540,"initialValue":{"arguments":[{"expression":{"expression":{"id":525,"name":"OperatorInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"5838:17:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OperatorInterface_$1272_$","typeString":"type(contract OperatorInterface)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"operatorRequest","nodeType":"MemberAccess","referencedDeclaration":1217,"src":"5838:33:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function OperatorInterface.operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes calldata)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"5838:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":528,"name":"SENDER_OVERRIDE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5888:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"AMOUNT_OVERRIDE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"5996:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":530,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6101:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":15,"src":"6101:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":532,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6115:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackFunctionId","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6115:22:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":534,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"6145:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":535,"name":"OPERATOR_ARGS_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"6158:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":536,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6187:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6187:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"6187:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":523,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5808:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"5808:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5808:396:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5778:426:1"},{"expression":{"arguments":[{"id":542,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6229:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":543,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"6244:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":544,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"6251:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":545,"name":"encodedRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6260:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":541,"name":"_rawRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"6217:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,uint256,uint256,bytes memory) returns (bytes32)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6217:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":510,"id":547,"nodeType":"Return","src":"6210:65:1"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"4983:564:1","text":" @notice Creates a Chainlink request to the specified oracle address\n @dev This function supports multi-word response\n @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n send LINK which creates a request on the target oracle contract.\n Emits ChainlinkRequested event.\n @param oracleAddress The address of the oracle for the request\n @param req The initialized Chainlink Request\n @param payment The amount of LINK to send for the request\n @return requestId The request ID"},"id":549,"implemented":true,"kind":"function","modifiers":[],"name":"sendOperatorRequestTo","nameLocation":"5559:21:1","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"oracleAddress","nameLocation":"5594:13:1","nodeType":"VariableDeclaration","scope":549,"src":"5586:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"req","nameLocation":"5638:3:1","nodeType":"VariableDeclaration","scope":549,"src":"5613:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":503,"nodeType":"UserDefinedTypeName","pathNode":{"id":502,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"5613:17:1"},"referencedDeclaration":25,"src":"5613:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":506,"mutability":"mutable","name":"payment","nameLocation":"5655:7:1","nodeType":"VariableDeclaration","scope":549,"src":"5647:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"5647:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5580:86:1"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"requestId","nameLocation":"5693:9:1","nodeType":"VariableDeclaration","scope":549,"src":"5685:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5685:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5684:19:1"},"scope":861,"src":"5550:730:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"6790:269:1","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":563,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6796:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":567,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6835:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}},{"id":568,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6841:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":565,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6818:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"6818:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6818:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":564,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6808:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6808:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6796:52:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":572,"nodeType":"ExpressionStatement","src":"6796:52:1"},{"expression":{"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":573,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"6854:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":575,"indexExpression":{"id":574,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6872:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6854:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":576,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"6885:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6854:44:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":578,"nodeType":"ExpressionStatement","src":"6854:44:1"},{"eventCall":{"arguments":[{"id":580,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6928:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":579,"name":"ChainlinkRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"6909:18:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"EmitStatement","src":"6904:34:1"},{"expression":{"arguments":[{"arguments":[{"id":586,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"6975:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"6990:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":588,"name":"encodedRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6999:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":584,"name":"s_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"6952:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1192","typeString":"contract LinkTokenInterface"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"6952:22:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6952:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c65","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7016:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96","typeString":"literal_string \"unable to transferAndCall to oracle\""},"value":"unable to transferAndCall to oracle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96","typeString":"literal_string \"unable to transferAndCall to oracle\""}],"id":583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6944:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6944:110:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":592,"nodeType":"ExpressionStatement","src":"6944:110:1"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"6284:342:1","text":" @notice Make a request to an oracle\n @param oracleAddress The address of the oracle for the request\n @param nonce used to generate the request ID\n @param payment The amount of LINK to send for the request\n @param encodedRequest data encoded for request type specific format\n @return requestId The request ID"},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"_rawRequest","nameLocation":"6638:11:1","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"oracleAddress","nameLocation":"6663:13:1","nodeType":"VariableDeclaration","scope":594,"src":"6655:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"6655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"nonce","nameLocation":"6690:5:1","nodeType":"VariableDeclaration","scope":594,"src":"6682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"6682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"payment","nameLocation":"6709:7:1","nodeType":"VariableDeclaration","scope":594,"src":"6701:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"6701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"encodedRequest","nameLocation":"6735:14:1","nodeType":"VariableDeclaration","scope":594,"src":"6722:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":557,"name":"bytes","nodeType":"ElementaryTypeName","src":"6722:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6649:104:1"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"requestId","nameLocation":"6779:9:1","nodeType":"VariableDeclaration","scope":594,"src":"6771:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6771:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6770:19:1"},"scope":861,"src":"6629:430:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":633,"nodeType":"Block","src":"7713:250:1","statements":[{"assignments":[608],"declarations":[{"constant":false,"id":608,"mutability":"mutable","name":"requested","nameLocation":"7737:9:1","nodeType":"VariableDeclaration","scope":633,"src":"7719:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"},"typeName":{"id":607,"nodeType":"UserDefinedTypeName","pathNode":{"id":606,"name":"OperatorInterface","nodeType":"IdentifierPath","referencedDeclaration":1272,"src":"7719:17:1"},"referencedDeclaration":1272,"src":"7719:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}},"visibility":"internal"}],"id":614,"initialValue":{"arguments":[{"baseExpression":{"id":610,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"7767:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":612,"indexExpression":{"id":611,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7785:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7767:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":609,"name":"OperatorInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"7749:17:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OperatorInterface_$1272_$","typeString":"type(contract OperatorInterface)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7749:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}},"nodeType":"VariableDeclarationStatement","src":"7719:77:1"},{"expression":{"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7802:35:1","subExpression":{"baseExpression":{"id":615,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"7809:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":617,"indexExpression":{"id":616,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7827:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7809:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"7802:35:1"},{"eventCall":{"arguments":[{"id":621,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7867:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":620,"name":"ChainlinkCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"7848:18:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7848:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"EmitStatement","src":"7843:34:1"},{"expression":{"arguments":[{"id":627,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7913:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":628,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"7924:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":629,"name":"callbackFunc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"7933:12:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":630,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7947:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":624,"name":"requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7883:9:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cancelOracleRequest","nodeType":"MemberAccess","referencedDeclaration":997,"src":"7883:29:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes4_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,bytes4,uint256) external"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7883:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"7883:75:1"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"7063:509:1","text":" @notice Allows a request to be cancelled if it has not been fulfilled\n @dev Requires keeping track of the expiration value emitted from the oracle contract.\n Deletes the request from the `pendingRequests` mapping.\n Emits ChainlinkCancelled event.\n @param requestId The request ID\n @param payment The amount of LINK sent for the request\n @param callbackFunc The callback function specified for the request\n @param expiration The time of the expiration for the request"},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"cancelChainlinkRequest","nameLocation":"7584:22:1","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"requestId","nameLocation":"7620:9:1","nodeType":"VariableDeclaration","scope":634,"src":"7612:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7612:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"payment","nameLocation":"7643:7:1","nodeType":"VariableDeclaration","scope":634,"src":"7635:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"7635:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"callbackFunc","nameLocation":"7663:12:1","nodeType":"VariableDeclaration","scope":634,"src":"7656:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":600,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7656:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"expiration","nameLocation":"7689:10:1","nodeType":"VariableDeclaration","scope":634,"src":"7681:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"7681:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7606:97:1"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"7713:0:1"},"scope":861,"src":"7575:388:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"8238:32:1","statements":[{"expression":{"id":640,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"8251:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":639,"id":641,"nodeType":"Return","src":"8244:21:1"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"7967:205:1","text":" @notice the next request count to be used in generating a nonce\n @dev starts at 1 in order to ensure consistent gas cost\n @return returns the next request count to be used in a nonce"},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"getNextRequestCount","nameLocation":"8184:19:1","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"8203:2:1"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"8229:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"8229:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8228:9:1"},"scope":861,"src":"8175:95:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"8451:54:1","statements":[{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":649,"name":"s_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8457:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":651,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"8486:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":650,"name":"OperatorInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"8468:17:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OperatorInterface_$1272_$","typeString":"type(contract OperatorInterface)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8468:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}},"src":"8457:43:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}},"id":654,"nodeType":"ExpressionStatement","src":"8457:43:1"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"8274:114:1","text":" @notice Sets the stored oracle address\n @param oracleAddress The address of the oracle contract"},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"setChainlinkOracle","nameLocation":"8400:18:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"oracleAddress","nameLocation":"8427:13:1","nodeType":"VariableDeclaration","scope":656,"src":"8419:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"8419:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8418:23:1"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"8451:0:1"},"scope":861,"src":"8391:114:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":668,"nodeType":"Block","src":"8682:51:1","statements":[{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":662,"name":"s_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"8688:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1192","typeString":"contract LinkTokenInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":664,"name":"linkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"8716:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":663,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"8697:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$1192_$","typeString":"type(contract LinkTokenInterface)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1192","typeString":"contract LinkTokenInterface"}},"src":"8688:40:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1192","typeString":"contract LinkTokenInterface"}},"id":667,"nodeType":"ExpressionStatement","src":"8688:40:1"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"8509:113:1","text":" @notice Sets the LINK token address\n @param linkAddress The address of the LINK token contract"},"id":669,"implemented":true,"kind":"function","modifiers":[],"name":"setChainlinkToken","nameLocation":"8634:17:1","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"linkAddress","nameLocation":"8660:11:1","nodeType":"VariableDeclaration","scope":669,"src":"8652:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"8652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8651:21:1"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[],"src":"8682:0:1"},"scope":861,"src":"8625:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"8900:79:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":675,"name":"LINK_TOKEN_POINTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"8941:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":674,"name":"PointerInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8924:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PointerInterface_$1319_$","typeString":"type(contract PointerInterface)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8924:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PointerInterface_$1319","typeString":"contract PointerInterface"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddress","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"8924:47:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8924:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":673,"name":"setChainlinkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8906:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8906:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"8906:68:1"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"8737:116:1","text":" @notice Sets the Chainlink token address for the public\n network as given by the Pointer contract"},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"setPublicChainlinkToken","nameLocation":"8865:23:1","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8888:2:1"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"8900:0:1"},"scope":861,"src":"8856:123:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"9163:33:1","statements":[{"expression":{"arguments":[{"id":690,"name":"s_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"9184:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1192","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$1192","typeString":"contract LinkTokenInterface"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:1","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":687,"id":692,"nodeType":"Return","src":"9169:22:1"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"8983:112:1","text":" @notice Retrieves the stored address of the LINK token\n @return The address of the LINK token"},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"chainlinkTokenAddress","nameLocation":"9107:21:1","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"9128:2:1"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"9154:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"9154:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9153:9:1"},"scope":861,"src":"9098:98:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":705,"nodeType":"Block","src":"9391:35:1","statements":[{"expression":{"arguments":[{"id":702,"name":"s_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9412:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OperatorInterface_$1272","typeString":"contract OperatorInterface"}],"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9404:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"9404:7:1","typeDescriptions":{}}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9404:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":699,"id":704,"nodeType":"Return","src":"9397:24:1"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"9200:122:1","text":" @notice Retrieves the stored address of the oracle contract\n @return The address of the oracle contract"},"id":706,"implemented":true,"kind":"function","modifiers":[],"name":"chainlinkOracleAddress","nameLocation":"9334:22:1","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"9356:2:1"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"9382:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"9382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9381:9:1"},"scope":861,"src":"9325:101:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":723,"nodeType":"Block","src":"9819:55:1","statements":[{"expression":{"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":717,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"9825:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":719,"indexExpression":{"id":718,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9843:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9825:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":720,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"9856:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9825:44:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":722,"nodeType":"ExpressionStatement","src":"9825:44:1"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"9430:269:1","text":" @notice Allows for a request which was created on another contract to be fulfilled\n on this contract\n @param oracleAddress The address of the oracle contract that will fulfill the request\n @param requestId The request ID used for the response"},"id":724,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":714,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9808:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":715,"kind":"modifierInvocation","modifierName":{"id":713,"name":"notPendingRequest","nodeType":"IdentifierPath","referencedDeclaration":860,"src":"9790:17:1"},"nodeType":"ModifierInvocation","src":"9790:28:1"}],"name":"addChainlinkExternalRequest","nameLocation":"9711:27:1","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"oracleAddress","nameLocation":"9747:13:1","nodeType":"VariableDeclaration","scope":724,"src":"9739:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"9739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"requestId","nameLocation":"9770:9:1","nodeType":"VariableDeclaration","scope":724,"src":"9762:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9762:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9738:42:1"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"9819:0:1"},"scope":861,"src":"9702:172:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":772,"nodeType":"Block","src":"10207:326:1","statements":[{"expression":{"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":732,"name":"s_ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"10213:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$1078","typeString":"contract ENSInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":734,"name":"ensAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10234:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ENSInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"10221:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ENSInterface_$1078_$","typeString":"type(contract ENSInterface)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10221:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$1078","typeString":"contract ENSInterface"}},"src":"10213:32:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$1078","typeString":"contract ENSInterface"}},"id":737,"nodeType":"ExpressionStatement","src":"10213:32:1"},{"expression":{"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":738,"name":"s_ensNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"10251:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":739,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10263:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10251:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":741,"nodeType":"ExpressionStatement","src":"10251:16:1"},{"assignments":[743],"declarations":[{"constant":false,"id":743,"mutability":"mutable","name":"linkSubnode","nameLocation":"10281:11:1","nodeType":"VariableDeclaration","scope":772,"src":"10273:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10273:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":751,"initialValue":{"arguments":[{"arguments":[{"id":747,"name":"s_ensNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"10322:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":748,"name":"ENS_TOKEN_SUBNAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"10333:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":745,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10305:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10305:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10305:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":744,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10295:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10295:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10273:79:1"},{"assignments":[754],"declarations":[{"constant":false,"id":754,"mutability":"mutable","name":"resolver","nameLocation":"10380:8:1","nodeType":"VariableDeclaration","scope":772,"src":"10358:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2966","typeString":"contract ENSResolver"},"typeName":{"id":753,"nodeType":"UserDefinedTypeName","pathNode":{"id":752,"name":"ENSResolver_Chainlink","nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"10358:21:1"},"referencedDeclaration":2966,"src":"10358:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2966","typeString":"contract ENSResolver"}},"visibility":"internal"}],"id":761,"initialValue":{"arguments":[{"arguments":[{"id":758,"name":"linkSubnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"10428:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":756,"name":"s_ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"10413:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$1078","typeString":"contract ENSInterface"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"resolver","nodeType":"MemberAccess","referencedDeclaration":1070,"src":"10413:14:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10413:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":755,"name":"ENSResolver_Chainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"10391:21:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ENSResolver_$2966_$","typeString":"type(contract ENSResolver)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10391:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2966","typeString":"contract ENSResolver"}},"nodeType":"VariableDeclarationStatement","src":"10358:83:1"},{"expression":{"arguments":[{"arguments":[{"id":765,"name":"linkSubnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"10479:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":763,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10465:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2966","typeString":"contract ENSResolver"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"10465:13:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10465:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"setChainlinkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"10447:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10447:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"10447:45:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":769,"name":"updateChainlinkOracleWithENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10498:28:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10498:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"ExpressionStatement","src":"10498:30:1"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"9878:254:1","text":" @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\n @dev Accounts for subnodes having different resolvers\n @param ensAddress The address of the ENS contract\n @param node The ENS node hash"},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"useChainlinkWithENS","nameLocation":"10144:19:1","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"ensAddress","nameLocation":"10172:10:1","nodeType":"VariableDeclaration","scope":773,"src":"10164:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"10164:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"node","nameLocation":"10192:4:1","nodeType":"VariableDeclaration","scope":773,"src":"10184:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10184:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10163:34:1"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"10207:0:1"},"scope":861,"src":"10135:398:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"10776:238:1","statements":[{"assignments":[778],"declarations":[{"constant":false,"id":778,"mutability":"mutable","name":"oracleSubnode","nameLocation":"10790:13:1","nodeType":"VariableDeclaration","scope":804,"src":"10782:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10782:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":786,"initialValue":{"arguments":[{"arguments":[{"id":782,"name":"s_ensNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"10833:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":783,"name":"ENS_ORACLE_SUBNAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10844:18:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":780,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10816:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10816:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10816:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":779,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10806:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10806:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10782:82:1"},{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"resolver","nameLocation":"10892:8:1","nodeType":"VariableDeclaration","scope":804,"src":"10870:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2966","typeString":"contract ENSResolver"},"typeName":{"id":788,"nodeType":"UserDefinedTypeName","pathNode":{"id":787,"name":"ENSResolver_Chainlink","nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"10870:21:1"},"referencedDeclaration":2966,"src":"10870:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2966","typeString":"contract ENSResolver"}},"visibility":"internal"}],"id":796,"initialValue":{"arguments":[{"arguments":[{"id":793,"name":"oracleSubnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10940:13:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":791,"name":"s_ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"10925:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$1078","typeString":"contract ENSInterface"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"resolver","nodeType":"MemberAccess","referencedDeclaration":1070,"src":"10925:14:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10925:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":790,"name":"ENSResolver_Chainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"10903:21:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ENSResolver_$2966_$","typeString":"type(contract ENSResolver)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10903:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2966","typeString":"contract ENSResolver"}},"nodeType":"VariableDeclarationStatement","src":"10870:85:1"},{"expression":{"arguments":[{"arguments":[{"id":800,"name":"oracleSubnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10994:13:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":798,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"10980:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2966","typeString":"contract ENSResolver"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":2965,"src":"10980:13:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10980:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":797,"name":"setChainlinkOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"10961:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10961:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"10961:48:1"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"10537:187:1","text":" @notice Sets the stored oracle contract with the address resolved by ENS\n @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously"},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"updateChainlinkOracleWithENS","nameLocation":"10736:28:1","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"10764:2:1"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"10776:0:1"},"scope":861,"src":"10727:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":814,"nodeType":"Block","src":"11402:6:1","statements":[]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"11018:223:1","text":" @notice Ensures that the fulfillment is valid for this contract\n @dev Use if the contract developer prefers methods instead of modifiers for validation\n @param requestId The request ID for fulfillment"},"id":815,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":811,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"11342:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":812,"kind":"modifierInvocation","modifierName":{"id":810,"name":"recordChainlinkFulfillment","nodeType":"IdentifierPath","referencedDeclaration":841,"src":"11315:26:1"},"nodeType":"ModifierInvocation","src":"11315:37:1"}],"name":"validateChainlinkCallback","nameLocation":"11253:25:1","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"requestId","nameLocation":"11287:9:1","nodeType":"VariableDeclaration","scope":815,"src":"11279:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11279:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11278:19:1"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"11402:0:1"},"scope":861,"src":"11244:164:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"11635:194:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":821,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11649:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11649:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":823,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11663:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":825,"indexExpression":{"id":824,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"11681:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11663:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11649:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f75726365206d75737420626520746865206f7261636c65206f66207468652072657175657374","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11693:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4","typeString":"literal_string \"Source must be the oracle of the request\""},"value":"Source must be the oracle of the request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4","typeString":"literal_string \"Source must be the oracle of the request\""}],"id":820,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11641:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11641:95:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"ExpressionStatement","src":"11641:95:1"},{"expression":{"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11742:35:1","subExpression":{"baseExpression":{"id":830,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11749:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":832,"indexExpression":{"id":831,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"11767:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11749:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":834,"nodeType":"ExpressionStatement","src":"11742:35:1"},{"eventCall":{"arguments":[{"id":836,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"11807:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":835,"name":"ChainlinkFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"11788:18:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11788:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":838,"nodeType":"EmitStatement","src":"11783:34:1"},{"id":839,"nodeType":"PlaceholderStatement","src":"11823:1:1"}]},"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"11412:165:1","text":" @dev Reverts if the sender is not the oracle of the request.\n Emits ChainlinkFulfilled event.\n @param requestId The request ID for fulfillment"},"id":841,"name":"recordChainlinkFulfillment","nameLocation":"11589:26:1","nodeType":"ModifierDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"requestId","nameLocation":"11624:9:1","nodeType":"VariableDeclaration","scope":841,"src":"11616:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11616:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11615:19:1"},"src":"11580:249:1","virtual":false,"visibility":"internal"},{"body":{"id":859,"nodeType":"Block","src":"11996:99:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":847,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"12010:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":849,"indexExpression":{"id":848,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"12028:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12010:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12050:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12042:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"12042:7:1","typeDescriptions":{}}},"id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12042:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12010:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265717565737420697320616c72656164792070656e64696e67","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12054:28:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_efa688de2ca2442cd2f76ca864c7a15bdcb24ac77ed3de01d4cf9f6afd58c7aa","typeString":"literal_string \"Request is already pending\""},"value":"Request is already pending"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efa688de2ca2442cd2f76ca864c7a15bdcb24ac77ed3de01d4cf9f6afd58c7aa","typeString":"literal_string \"Request is already pending\""}],"id":846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12002:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12002:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"ExpressionStatement","src":"12002:81:1"},{"id":858,"nodeType":"PlaceholderStatement","src":"12089:1:1"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"11833:114:1","text":" @dev Reverts if the request is already pending\n @param requestId The request ID for fulfillment"},"id":860,"name":"notPendingRequest","nameLocation":"11959:17:1","nodeType":"ModifierDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"requestId","nameLocation":"11985:9:1","nodeType":"VariableDeclaration","scope":860,"src":"11977:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11977:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11976:19:1"},"src":"11950:145:1","virtual":false,"visibility":"internal"}],"scope":862,"src":"549:11548:1","usedErrors":[]}],"src":"32:12066:1"},"id":1},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[919]},"id":920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":863,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"57:5275:2","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":919,"linearizedBaseContracts":[919],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:2","nodeType":"ContractDefinition","nodes":[{"id":870,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:2","nodeType":"ErrorDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"have","nameLocation":"5413:4:2","nodeType":"VariableDeclaration","scope":870,"src":"5405:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"want","nameLocation":"5427:4:2","nodeType":"VariableDeclaration","scope":870,"src":"5419:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:2"},"src":"5373:60:2"},{"constant":false,"id":872,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:2","nodeType":"VariableDeclaration","scope":919,"src":"5436:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":882,"nodeType":"Block","src":"5593:43:2","statements":[{"expression":{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":878,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"5599:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":879,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"5616:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":881,"nodeType":"ExpressionStatement","src":"5599:32:2"}]},"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"5481:72:2","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":883,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:2","nodeType":"VariableDeclaration","scope":883,"src":"5568:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:2"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"5593:0:2"},"scope":919,"src":"5556:80:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"5640:686:2","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":892,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:2","nodeType":"FunctionDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:2","nodeType":"VariableDeclaration","scope":892,"src":"6357:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:2","nodeType":"VariableDeclaration","scope":892,"src":"6376:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":888,"nodeType":"ArrayTypeName","src":"6376:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:2"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"6422:0:2"},"scope":919,"src":"6329:94:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":917,"nodeType":"Block","src":"6707:167:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":902,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"6731:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"6713:109:2","trueBody":{"id":910,"nodeType":"Block","src":"6747:75:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":905,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"6800:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":904,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"6762:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"RevertStatement","src":"6755:60:2"}]}},{"expression":{"arguments":[{"id":913,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6846:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":914,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"6857:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":912,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"6827:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"ExpressionStatement","src":"6827:42:2"}]},"functionSelector":"1fe543e3","id":918,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:2","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:2","nodeType":"VariableDeclaration","scope":918,"src":"6649:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":918,"src":"6668:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":896,"nodeType":"ArrayTypeName","src":"6668:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:2"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"6707:0:2"},"scope":919,"src":"6618:256:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":920,"src":"5333:1543:2","usedErrors":[870]}],"src":"32:6845:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[965]},"id":966,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":921,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":965,"linearizedBaseContracts":[965],"name":"AggregatorV3Interface","nameLocation":"67:21:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":926,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:3","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"110:2:3"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"136:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":923,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:3"},"scope":965,"src":"93:50:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":931,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:3","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[],"src":"167:2:3"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"193:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":928,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:3"},"scope":965,"src":"147:61:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":936,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:3","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"228:2:3"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"254:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:3"},"scope":965,"src":"212:51:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":951,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"487:12:3","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"_roundId","nameLocation":"507:8:3","nodeType":"VariableDeclaration","scope":951,"src":"500:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":937,"name":"uint80","nodeType":"ElementaryTypeName","src":"500:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"499:17:3"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"roundId","nameLocation":"566:7:3","nodeType":"VariableDeclaration","scope":951,"src":"559:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":940,"name":"uint80","nodeType":"ElementaryTypeName","src":"559:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"answer","nameLocation":"588:6:3","nodeType":"VariableDeclaration","scope":951,"src":"581:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":942,"name":"int256","nodeType":"ElementaryTypeName","src":"581:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"startedAt","nameLocation":"610:9:3","nodeType":"VariableDeclaration","scope":951,"src":"602:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"updatedAt","nameLocation":"635:9:3","nodeType":"VariableDeclaration","scope":951,"src":"627:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"answeredInRound","nameLocation":"659:15:3","nodeType":"VariableDeclaration","scope":951,"src":"652:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":948,"name":"uint80","nodeType":"ElementaryTypeName","src":"652:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"551:129:3"},"scope":965,"src":"478:203:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":964,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"694:15:3","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"709:2:3"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"roundId","nameLocation":"761:7:3","nodeType":"VariableDeclaration","scope":964,"src":"754:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":953,"name":"uint80","nodeType":"ElementaryTypeName","src":"754:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"answer","nameLocation":"783:6:3","nodeType":"VariableDeclaration","scope":964,"src":"776:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":955,"name":"int256","nodeType":"ElementaryTypeName","src":"776:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"startedAt","nameLocation":"805:9:3","nodeType":"VariableDeclaration","scope":964,"src":"797:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"updatedAt","nameLocation":"830:9:3","nodeType":"VariableDeclaration","scope":964,"src":"822:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"answeredInRound","nameLocation":"854:15:3","nodeType":"VariableDeclaration","scope":964,"src":"847:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":961,"name":"uint80","nodeType":"ElementaryTypeName","src":"847:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"746:129:3"},"scope":965,"src":"685:191:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":966,"src":"57:821:3","usedErrors":[]}],"src":"32:847:3"},"id":3},"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol","exportedSymbols":{"ChainlinkRequestInterface":[998]},"id":999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":967,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":998,"linearizedBaseContracts":[998],"name":"ChainlinkRequestInterface","nameLocation":"67:25:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40429946","id":986,"implemented":false,"kind":"function","modifiers":[],"name":"oracleRequest","nameLocation":"106:13:4","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"sender","nameLocation":"133:6:4","nodeType":"VariableDeclaration","scope":986,"src":"125:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"125:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"requestPrice","nameLocation":"153:12:4","nodeType":"VariableDeclaration","scope":986,"src":"145:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"145:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"serviceAgreementID","nameLocation":"179:18:4","nodeType":"VariableDeclaration","scope":986,"src":"171:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"callbackAddress","nameLocation":"211:15:4","nodeType":"VariableDeclaration","scope":986,"src":"203:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"203:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"239:18:4","nodeType":"VariableDeclaration","scope":986,"src":"232:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":976,"name":"bytes4","nodeType":"ElementaryTypeName","src":"232:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"nonce","nameLocation":"271:5:4","nodeType":"VariableDeclaration","scope":986,"src":"263:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"dataVersion","nameLocation":"290:11:4","nodeType":"VariableDeclaration","scope":986,"src":"282:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"282:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"data","nameLocation":"322:4:4","nodeType":"VariableDeclaration","scope":986,"src":"307:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"307:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"119:211:4"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"339:0:4"},"scope":998,"src":"97:243:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6ee4d553","id":997,"implemented":false,"kind":"function","modifiers":[],"name":"cancelOracleRequest","nameLocation":"353:19:4","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"requestId","nameLocation":"386:9:4","nodeType":"VariableDeclaration","scope":997,"src":"378:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"378:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"payment","nameLocation":"409:7:4","nodeType":"VariableDeclaration","scope":997,"src":"401:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"429:18:4","nodeType":"VariableDeclaration","scope":997,"src":"422:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":991,"name":"bytes4","nodeType":"ElementaryTypeName","src":"422:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"expiration","nameLocation":"461:10:4","nodeType":"VariableDeclaration","scope":997,"src":"453:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"372:103:4"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"484:0:4"},"scope":998,"src":"344:141:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":999,"src":"57:430:4","usedErrors":[]}],"src":"32:456:4"},"id":4},"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol","exportedSymbols":{"ENSInterface":[1078]},"id":1079,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1000,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1078,"linearizedBaseContracts":[1078],"name":"ENSInterface","nameLocation":"67:12:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":1008,"name":"NewOwner","nameLocation":"161:8:5","nodeType":"EventDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"186:4:5","nodeType":"VariableDeclaration","scope":1008,"src":"170:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1004,"indexed":true,"mutability":"mutable","name":"label","nameLocation":"208:5:5","nodeType":"VariableDeclaration","scope":1008,"src":"192:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"192:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1006,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"223:5:5","nodeType":"VariableDeclaration","scope":1008,"src":"215:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"215:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"169:60:5"},"src":"155:75:5"},{"anonymous":false,"id":1014,"name":"Transfer","nameLocation":"315:8:5","nodeType":"EventDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"340:4:5","nodeType":"VariableDeclaration","scope":1014,"src":"324:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"324:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1012,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"354:5:5","nodeType":"VariableDeclaration","scope":1014,"src":"346:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"346:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"323:37:5"},"src":"309:52:5"},{"anonymous":false,"id":1020,"name":"NewResolver","nameLocation":"421:11:5","nodeType":"EventDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"449:4:5","nodeType":"VariableDeclaration","scope":1020,"src":"433:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"433:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1018,"indexed":false,"mutability":"mutable","name":"resolver","nameLocation":"463:8:5","nodeType":"VariableDeclaration","scope":1020,"src":"455:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"432:40:5"},"src":"415:58:5"},{"anonymous":false,"id":1026,"name":"NewTTL","nameLocation":"526:6:5","nodeType":"EventDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"549:4:5","nodeType":"VariableDeclaration","scope":1026,"src":"533:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"533:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1024,"indexed":false,"mutability":"mutable","name":"ttl","nameLocation":"562:3:5","nodeType":"VariableDeclaration","scope":1026,"src":"555:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1023,"name":"uint64","nodeType":"ElementaryTypeName","src":"555:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"532:34:5"},"src":"520:47:5"},{"functionSelector":"06ab5923","id":1035,"implemented":false,"kind":"function","modifiers":[],"name":"setSubnodeOwner","nameLocation":"580:15:5","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"node","nameLocation":"609:4:5","nodeType":"VariableDeclaration","scope":1035,"src":"601:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"601:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"label","nameLocation":"627:5:5","nodeType":"VariableDeclaration","scope":1035,"src":"619:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"619:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"owner","nameLocation":"646:5:5","nodeType":"VariableDeclaration","scope":1035,"src":"638:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"595:60:5"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"664:0:5"},"scope":1078,"src":"571:94:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1896f70a","id":1042,"implemented":false,"kind":"function","modifiers":[],"name":"setResolver","nameLocation":"678:11:5","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"node","nameLocation":"698:4:5","nodeType":"VariableDeclaration","scope":1042,"src":"690:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"resolver","nameLocation":"712:8:5","nodeType":"VariableDeclaration","scope":1042,"src":"704:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"704:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"689:32:5"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"730:0:5"},"scope":1078,"src":"669:62:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5b0fc9c3","id":1049,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"744:8:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"node","nameLocation":"761:4:5","nodeType":"VariableDeclaration","scope":1049,"src":"753:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"753:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"owner","nameLocation":"775:5:5","nodeType":"VariableDeclaration","scope":1049,"src":"767:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"767:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:29:5"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"790:0:5"},"scope":1078,"src":"735:56:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"14ab9038","id":1056,"implemented":false,"kind":"function","modifiers":[],"name":"setTTL","nameLocation":"804:6:5","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"node","nameLocation":"819:4:5","nodeType":"VariableDeclaration","scope":1056,"src":"811:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"811:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"ttl","nameLocation":"832:3:5","nodeType":"VariableDeclaration","scope":1056,"src":"825:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1052,"name":"uint64","nodeType":"ElementaryTypeName","src":"825:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"810:26:5"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[],"src":"845:0:5"},"scope":1078,"src":"795:51:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"02571be3","id":1063,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"859:5:5","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"node","nameLocation":"873:4:5","nodeType":"VariableDeclaration","scope":1063,"src":"865:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"865:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"864:14:5"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1063,"src":"902:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"901:9:5"},"scope":1078,"src":"850:61:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0178b8bf","id":1070,"implemented":false,"kind":"function","modifiers":[],"name":"resolver","nameLocation":"924:8:5","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"node","nameLocation":"941:4:5","nodeType":"VariableDeclaration","scope":1070,"src":"933:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"933:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"932:14:5"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1070,"src":"970:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"969:9:5"},"scope":1078,"src":"915:64:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"16a25cbd","id":1077,"implemented":false,"kind":"function","modifiers":[],"name":"ttl","nameLocation":"992:3:5","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"node","nameLocation":"1004:4:5","nodeType":"VariableDeclaration","scope":1077,"src":"996:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"996:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"995:14:5"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"1033:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1074,"name":"uint64","nodeType":"ElementaryTypeName","src":"1033:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1032:8:5"},"scope":1078,"src":"983:58:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1079,"src":"57:986:5","usedErrors":[]}],"src":"32:1012:5"},"id":5},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","exportedSymbols":{"KeeperCompatibleInterface":[1097]},"id":1098,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1080,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1097,"linearizedBaseContracts":[1097],"name":"KeeperCompatibleInterface","nameLocation":"67:25:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"97:985:6","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":1090,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1094:11:6","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"checkData","nameLocation":"1121:9:6","nodeType":"VariableDeclaration","scope":1090,"src":"1106:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1082,"name":"bytes","nodeType":"ElementaryTypeName","src":"1106:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1105:26:6"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1155:12:6","nodeType":"VariableDeclaration","scope":1090,"src":"1150:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1085,"name":"bool","nodeType":"ElementaryTypeName","src":"1150:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"performData","nameLocation":"1182:11:6","nodeType":"VariableDeclaration","scope":1090,"src":"1169:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1087,"name":"bytes","nodeType":"ElementaryTypeName","src":"1169:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1149:45:6"},"scope":1097,"src":"1085:110:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"1199:1003:6","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":1096,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2214:13:6","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"performData","nameLocation":"2243:11:6","nodeType":"VariableDeclaration","scope":1096,"src":"2228:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1092,"name":"bytes","nodeType":"ElementaryTypeName","src":"2228:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2227:28:6"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[],"src":"2264:0:6"},"scope":1097,"src":"2205:60:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1098,"src":"57:2210:6","usedErrors":[]}],"src":"32:2236:6"},"id":6},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[1192]},"id":1193,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1099,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1192,"linearizedBaseContracts":[1192],"name":"LinkTokenInterface","nameLocation":"67:18:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":1108,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:7","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"owner","nameLocation":"117:5:7","nodeType":"VariableDeclaration","scope":1108,"src":"109:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"spender","nameLocation":"132:7:7","nodeType":"VariableDeclaration","scope":1108,"src":"124:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:7"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"remaining","nameLocation":"172:9:7","nodeType":"VariableDeclaration","scope":1108,"src":"164:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:7"},"scope":1192,"src":"90:93:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":1117,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:7","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"spender","nameLocation":"212:7:7","nodeType":"VariableDeclaration","scope":1117,"src":"204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"value","nameLocation":"229:5:7","nodeType":"VariableDeclaration","scope":1117,"src":"221:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:7"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"success","nameLocation":"259:7:7","nodeType":"VariableDeclaration","scope":1117,"src":"254:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1114,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:7"},"scope":1192,"src":"187:81:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":1124,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:7","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"owner","nameLocation":"299:5:7","nodeType":"VariableDeclaration","scope":1124,"src":"291:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:7"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"balance","nameLocation":"337:7:7","nodeType":"VariableDeclaration","scope":1124,"src":"329:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:7"},"scope":1192,"src":"272:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":1129,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:7","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"367:2:7"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:7","nodeType":"VariableDeclaration","scope":1129,"src":"393:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1126,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:7"},"scope":1192,"src":"350:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":1138,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:7","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"spender","nameLocation":"452:7:7","nodeType":"VariableDeclaration","scope":1138,"src":"444:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:7","nodeType":"VariableDeclaration","scope":1138,"src":"461:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:7"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"success","nameLocation":"504:7:7","nodeType":"VariableDeclaration","scope":1138,"src":"499:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1135,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:7"},"scope":1192,"src":"418:95:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":1145,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:7","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"spender","nameLocation":"551:7:7","nodeType":"VariableDeclaration","scope":1145,"src":"543:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:7","nodeType":"VariableDeclaration","scope":1145,"src":"560:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:7"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"593:0:7"},"scope":1192,"src":"517:77:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":1150,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:7","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"611:2:7"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:7","nodeType":"VariableDeclaration","scope":1150,"src":"637:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1147,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:7"},"scope":1192,"src":"598:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":1155,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:7","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"681:2:7"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:7","nodeType":"VariableDeclaration","scope":1155,"src":"707:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1152,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:7"},"scope":1192,"src":"666:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":1160,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:7","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"758:2:7"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:7","nodeType":"VariableDeclaration","scope":1160,"src":"784:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:7"},"scope":1192,"src":"738:73:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":1169,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:7","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"to","nameLocation":"841:2:7","nodeType":"VariableDeclaration","scope":1169,"src":"833:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"value","nameLocation":"853:5:7","nodeType":"VariableDeclaration","scope":1169,"src":"845:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:7"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"success","nameLocation":"883:7:7","nodeType":"VariableDeclaration","scope":1169,"src":"878:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1166,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:7"},"scope":1192,"src":"815:77:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":1180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:7","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"to","nameLocation":"934:2:7","nodeType":"VariableDeclaration","scope":1180,"src":"926:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"value","nameLocation":"950:5:7","nodeType":"VariableDeclaration","scope":1180,"src":"942:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"data","nameLocation":"976:4:7","nodeType":"VariableDeclaration","scope":1180,"src":"961:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1174,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:64:7"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"success","nameLocation":"1008:7:7","nodeType":"VariableDeclaration","scope":1180,"src":"1003:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1177,"name":"bool","nodeType":"ElementaryTypeName","src":"1003:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1002:14:7"},"scope":1192,"src":"896:121:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":1191,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1030:12:7","nodeType":"FunctionDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"from","nameLocation":"1056:4:7","nodeType":"VariableDeclaration","scope":1191,"src":"1048:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"to","nameLocation":"1074:2:7","nodeType":"VariableDeclaration","scope":1191,"src":"1066:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"value","nameLocation":"1090:5:7","nodeType":"VariableDeclaration","scope":1191,"src":"1082:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:57:7"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"success","nameLocation":"1123:7:7","nodeType":"VariableDeclaration","scope":1191,"src":"1118:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1188,"name":"bool","nodeType":"ElementaryTypeName","src":"1118:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1117:14:7"},"scope":1192,"src":"1021:111:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1193,"src":"57:1077:7","usedErrors":[]}],"src":"32:1103:7"},"id":7},"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol","exportedSymbols":{"ChainlinkRequestInterface":[998],"OperatorInterface":[1272],"OracleInterface":[1311]},"id":1273,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1194,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol","file":"./OracleInterface.sol","id":1195,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1273,"sourceUnit":1312,"src":"57:31:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol","file":"./ChainlinkRequestInterface.sol","id":1196,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1273,"sourceUnit":999,"src":"89:41:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1197,"name":"OracleInterface","nodeType":"IdentifierPath","referencedDeclaration":1311,"src":"163:15:8"},"id":1198,"nodeType":"InheritanceSpecifier","src":"163:15:8"},{"baseName":{"id":1199,"name":"ChainlinkRequestInterface","nodeType":"IdentifierPath","referencedDeclaration":998,"src":"180:25:8"},"id":1200,"nodeType":"InheritanceSpecifier","src":"180:25:8"}],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1272,"linearizedBaseContracts":[1272,998,1311],"name":"OperatorInterface","nameLocation":"142:17:8","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3c6d41b9","id":1217,"implemented":false,"kind":"function","modifiers":[],"name":"operatorRequest","nameLocation":"219:15:8","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"sender","nameLocation":"248:6:8","nodeType":"VariableDeclaration","scope":1217,"src":"240:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"240:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"payment","nameLocation":"268:7:8","nodeType":"VariableDeclaration","scope":1217,"src":"260:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1206,"mutability":"mutable","name":"specId","nameLocation":"289:6:8","nodeType":"VariableDeclaration","scope":1217,"src":"281:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"281:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"308:18:8","nodeType":"VariableDeclaration","scope":1217,"src":"301:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1207,"name":"bytes4","nodeType":"ElementaryTypeName","src":"301:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"nonce","nameLocation":"340:5:8","nodeType":"VariableDeclaration","scope":1217,"src":"332:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"332:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"dataVersion","nameLocation":"359:11:8","nodeType":"VariableDeclaration","scope":1217,"src":"351:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"data","nameLocation":"391:4:8","nodeType":"VariableDeclaration","scope":1217,"src":"376:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1213,"name":"bytes","nodeType":"ElementaryTypeName","src":"376:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"234:165:8"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[],"src":"408:0:8"},"scope":1272,"src":"210:199:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6ae0bc76","id":1234,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillOracleRequest2","nameLocation":"422:21:8","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"requestId","nameLocation":"457:9:8","nodeType":"VariableDeclaration","scope":1234,"src":"449:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"449:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"payment","nameLocation":"480:7:8","nodeType":"VariableDeclaration","scope":1234,"src":"472:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"callbackAddress","nameLocation":"501:15:8","nodeType":"VariableDeclaration","scope":1234,"src":"493:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"529:18:8","nodeType":"VariableDeclaration","scope":1234,"src":"522:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1224,"name":"bytes4","nodeType":"ElementaryTypeName","src":"522:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"expiration","nameLocation":"561:10:8","nodeType":"VariableDeclaration","scope":1234,"src":"553:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"data","nameLocation":"592:4:8","nodeType":"VariableDeclaration","scope":1234,"src":"577:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1228,"name":"bytes","nodeType":"ElementaryTypeName","src":"577:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"443:157:8"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1234,"src":"619:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1231,"name":"bool","nodeType":"ElementaryTypeName","src":"619:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"618:6:8"},"scope":1272,"src":"413:212:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"902fc370","id":1245,"implemented":false,"kind":"function","modifiers":[],"name":"ownerTransferAndCall","nameLocation":"638:20:8","nodeType":"FunctionDefinition","parameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"to","nameLocation":"672:2:8","nodeType":"VariableDeclaration","scope":1245,"src":"664:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"664:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"value","nameLocation":"688:5:8","nodeType":"VariableDeclaration","scope":1245,"src":"680:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"data","nameLocation":"714:4:8","nodeType":"VariableDeclaration","scope":1245,"src":"699:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1239,"name":"bytes","nodeType":"ElementaryTypeName","src":"699:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"658:64:8"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"success","nameLocation":"746:7:8","nodeType":"VariableDeclaration","scope":1245,"src":"741:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1242,"name":"bool","nodeType":"ElementaryTypeName","src":"741:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"740:14:8"},"scope":1272,"src":"629:126:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6bd59ec0","id":1254,"implemented":false,"kind":"function","modifiers":[],"name":"distributeFunds","nameLocation":"768:15:8","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"receivers","nameLocation":"811:9:8","nodeType":"VariableDeclaration","scope":1254,"src":"784:36:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"784:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1247,"nodeType":"ArrayTypeName","src":"784:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"amounts","nameLocation":"841:7:8","nodeType":"VariableDeclaration","scope":1254,"src":"822:26:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ArrayTypeName","src":"822:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"783:66:8"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"866:0:8"},"scope":1272,"src":"759:108:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2408afaa","id":1260,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizedSenders","nameLocation":"880:20:8","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"900:2:8"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"921:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1257,"nodeType":"ArrayTypeName","src":"921:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"920:18:8"},"scope":1272,"src":"871:68:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ee56997b","id":1266,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthorizedSenders","nameLocation":"952:20:8","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"senders","nameLocation":"992:7:8","nodeType":"VariableDeclaration","scope":1266,"src":"973:26:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1262,"nodeType":"ArrayTypeName","src":"973:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"972:28:8"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"1009:0:8"},"scope":1272,"src":"943:67:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a0042526","id":1271,"implemented":false,"kind":"function","modifiers":[],"name":"getForwarder","nameLocation":"1023:12:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"1035:2:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1271,"src":"1056:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1055:9:8"},"scope":1272,"src":"1014:51:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1273,"src":"132:935:8","usedErrors":[]}],"src":"32:1036:8"},"id":8},"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol","exportedSymbols":{"OracleInterface":[1311]},"id":1312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1274,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1311,"linearizedBaseContracts":[1311],"name":"OracleInterface","nameLocation":"67:15:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4ab0d190","id":1291,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillOracleRequest","nameLocation":"96:20:9","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"requestId","nameLocation":"130:9:9","nodeType":"VariableDeclaration","scope":1291,"src":"122:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"122:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"payment","nameLocation":"153:7:9","nodeType":"VariableDeclaration","scope":1291,"src":"145:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"145:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"callbackAddress","nameLocation":"174:15:9","nodeType":"VariableDeclaration","scope":1291,"src":"166:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"166:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"202:18:9","nodeType":"VariableDeclaration","scope":1291,"src":"195:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1281,"name":"bytes4","nodeType":"ElementaryTypeName","src":"195:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"expiration","nameLocation":"234:10:9","nodeType":"VariableDeclaration","scope":1291,"src":"226:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"226:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1286,"mutability":"mutable","name":"data","nameLocation":"258:4:9","nodeType":"VariableDeclaration","scope":1291,"src":"250:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"250:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"116:150:9"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"285:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1288,"name":"bool","nodeType":"ElementaryTypeName","src":"285:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"284:6:9"},"scope":1311,"src":"87:204:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fa00763a","id":1298,"implemented":false,"kind":"function","modifiers":[],"name":"isAuthorizedSender","nameLocation":"304:18:9","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"node","nameLocation":"331:4:9","nodeType":"VariableDeclaration","scope":1298,"src":"323:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"323:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"322:14:9"},"returnParameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1298,"src":"360:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1295,"name":"bool","nodeType":"ElementaryTypeName","src":"360:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"359:6:9"},"scope":1311,"src":"295:71:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f3fef3a3","id":1305,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"379:8:9","nodeType":"FunctionDefinition","parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"recipient","nameLocation":"396:9:9","nodeType":"VariableDeclaration","scope":1305,"src":"388:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"amount","nameLocation":"415:6:9","nodeType":"VariableDeclaration","scope":1305,"src":"407:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"387:35:9"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[],"src":"431:0:9"},"scope":1311,"src":"370:62:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"50188301","id":1310,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawable","nameLocation":"445:12:9","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"457:2:9"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"483:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"483:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"482:9:9"},"scope":1311,"src":"436:56:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1312,"src":"57:437:9","usedErrors":[]}],"src":"32:463:9"},"id":9},"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol","exportedSymbols":{"PointerInterface":[1319]},"id":1320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1313,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1319,"linearizedBaseContracts":[1319],"name":"PointerInterface","nameLocation":"67:16:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38cc4831","id":1318,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"97:10:10","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"107:2:10"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"133:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"133:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"132:9:10"},"scope":1319,"src":"88:54:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1320,"src":"57:87:10","usedErrors":[]}],"src":"32:113:10"},"id":10},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[1408]},"id":1409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1321,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1408,"linearizedBaseContracts":[1408],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"97:267:11","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":1332,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:11","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"392:2:11"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1332,"src":"437:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1324,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1332,"src":"451:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1326,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1332,"src":"465:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1329,"nodeType":"ArrayTypeName","src":"465:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:11"},"scope":1408,"src":"367:121:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"492:1511:11","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":1348,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:11","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:11","nodeType":"VariableDeclaration","scope":1348,"src":"2039:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"subId","nameLocation":"2067:5:11","nodeType":"VariableDeclaration","scope":1348,"src":"2060:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1336,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:11","nodeType":"VariableDeclaration","scope":1348,"src":"2078:34:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1338,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:11","nodeType":"VariableDeclaration","scope":1348,"src":"2118:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1340,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:11","nodeType":"VariableDeclaration","scope":1348,"src":"2147:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1342,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:11"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:11","nodeType":"VariableDeclaration","scope":1348,"src":"2185:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:11"},"scope":1408,"src":"2006:198:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"2208:384:11","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":1354,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:11","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[],"src":"2622:2:11"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"subId","nameLocation":"2650:5:11","nodeType":"VariableDeclaration","scope":1354,"src":"2643:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1351,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:11"},"scope":1408,"src":"2595:62:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"2661:381:11","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":1369,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:11","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"subId","nameLocation":"3077:5:11","nodeType":"VariableDeclaration","scope":1369,"src":"3070:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1356,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:11"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"balance","nameLocation":"3133:7:11","nodeType":"VariableDeclaration","scope":1369,"src":"3126:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1359,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:11","nodeType":"VariableDeclaration","scope":1369,"src":"3148:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1361,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"owner","nameLocation":"3179:5:11","nodeType":"VariableDeclaration","scope":1369,"src":"3171:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:11","nodeType":"VariableDeclaration","scope":1369,"src":"3192:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1366,"nodeType":"ArrayTypeName","src":"3192:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:11"},"scope":1408,"src":"3045:180:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"3229:164:11","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":1377,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:11","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"subId","nameLocation":"3445:5:11","nodeType":"VariableDeclaration","scope":1377,"src":"3438:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1371,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:11","nodeType":"VariableDeclaration","scope":1377,"src":"3452:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:11"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[],"src":"3478:0:11"},"scope":1408,"src":"3396:83:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"3483:212:11","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":1383,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:11","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"subId","nameLocation":"3746:5:11","nodeType":"VariableDeclaration","scope":1383,"src":"3739:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1379,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:11"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"3761:0:11"},"scope":1408,"src":"3698:64:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"3766:170:11","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":1391,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:11","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"subId","nameLocation":"3967:5:11","nodeType":"VariableDeclaration","scope":1391,"src":"3960:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1385,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:11","nodeType":"VariableDeclaration","scope":1391,"src":"3974:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:11"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"4000:0:11"},"scope":1408,"src":"3939:62:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"4005:172:11","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":1399,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:11","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"subId","nameLocation":"4211:5:11","nodeType":"VariableDeclaration","scope":1399,"src":"4204:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1393,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:11","nodeType":"VariableDeclaration","scope":1399,"src":"4218:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:11"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[],"src":"4244:0:11"},"scope":1408,"src":"4180:65:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"4249:140:11","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":1407,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:11","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"subId","nameLocation":"4427:5:11","nodeType":"VariableDeclaration","scope":1407,"src":"4420:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1401,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"to","nameLocation":"4442:2:11","nodeType":"VariableDeclaration","scope":1407,"src":"4434:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:11"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"4454:0:11"},"scope":1408,"src":"4392:63:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1409,"src":"57:4400:11","usedErrors":[]}],"src":"32:4426:11"},"id":11},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[1192],"VRFConsumerBaseV2":[919],"VRFCoordinatorV2Interface":[1408],"VRFCoordinatorV2Mock":[1987]},"id":1988,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1410,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"92:23:12"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","file":"../interfaces/LinkTokenInterface.sol","id":1411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":1193,"src":"117:46:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"../interfaces/VRFCoordinatorV2Interface.sol","id":1412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":1409,"src":"164:53:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"../VRFConsumerBaseV2.sol","id":1413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":920,"src":"218:34:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1414,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":1408,"src":"287:25:12"},"id":1415,"nodeType":"InheritanceSpecifier","src":"287:25:12"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1987,"linearizedBaseContracts":[1987,1408],"name":"VRFCoordinatorV2Mock","nameLocation":"263:20:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3d18651e","id":1417,"mutability":"immutable","name":"BASE_FEE","nameLocation":"341:8:12","nodeType":"VariableDeclaration","scope":1987,"src":"317:32:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1416,"name":"uint96","nodeType":"ElementaryTypeName","src":"317:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"a410347f","id":1419,"mutability":"immutable","name":"GAS_PRICE_LINK","nameLocation":"377:14:12","nodeType":"VariableDeclaration","scope":1987,"src":"353:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1418,"name":"uint96","nodeType":"ElementaryTypeName","src":"353:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"id":1421,"name":"InvalidSubscription","nameLocation":"402:19:12","nodeType":"ErrorDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[],"src":"421:2:12"},"src":"396:28:12"},{"id":1423,"name":"InsufficientBalance","nameLocation":"433:19:12","nodeType":"ErrorDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"452:2:12"},"src":"427:28:12"},{"id":1427,"name":"MustBeSubOwner","nameLocation":"464:14:12","nodeType":"ErrorDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"owner","nameLocation":"487:5:12","nodeType":"VariableDeclaration","scope":1427,"src":"479:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"478:15:12"},"src":"458:36:12"},{"anonymous":false,"id":1445,"name":"RandomWordsRequested","nameLocation":"504:20:12","nodeType":"EventDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"546:7:12","nodeType":"VariableDeclaration","scope":1445,"src":"530:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"530:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1431,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"567:9:12","nodeType":"VariableDeclaration","scope":1445,"src":"559:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"559:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1433,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"590:7:12","nodeType":"VariableDeclaration","scope":1445,"src":"582:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"618:5:12","nodeType":"VariableDeclaration","scope":1445,"src":"603:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1434,"name":"uint64","nodeType":"ElementaryTypeName","src":"603:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1437,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"636:27:12","nodeType":"VariableDeclaration","scope":1445,"src":"629:34:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1436,"name":"uint16","nodeType":"ElementaryTypeName","src":"629:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1439,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"676:16:12","nodeType":"VariableDeclaration","scope":1445,"src":"669:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1438,"name":"uint32","nodeType":"ElementaryTypeName","src":"669:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1441,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"705:8:12","nodeType":"VariableDeclaration","scope":1445,"src":"698:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1440,"name":"uint32","nodeType":"ElementaryTypeName","src":"698:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1443,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"735:6:12","nodeType":"VariableDeclaration","scope":1445,"src":"719:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"719:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"524:221:12"},"src":"498:248:12"},{"anonymous":false,"id":1455,"name":"RandomWordsFulfilled","nameLocation":"755:20:12","nodeType":"EventDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"792:9:12","nodeType":"VariableDeclaration","scope":1455,"src":"776:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1449,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"811:10:12","nodeType":"VariableDeclaration","scope":1455,"src":"803:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1451,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"830:7:12","nodeType":"VariableDeclaration","scope":1455,"src":"823:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1450,"name":"uint96","nodeType":"ElementaryTypeName","src":"823:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1453,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"844:7:12","nodeType":"VariableDeclaration","scope":1455,"src":"839:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1452,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"775:77:12"},"src":"749:104:12"},{"anonymous":false,"id":1461,"name":"SubscriptionCreated","nameLocation":"862:19:12","nodeType":"EventDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"897:5:12","nodeType":"VariableDeclaration","scope":1461,"src":"882:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1456,"name":"uint64","nodeType":"ElementaryTypeName","src":"882:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1459,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"912:5:12","nodeType":"VariableDeclaration","scope":1461,"src":"904:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"904:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"881:37:12"},"src":"856:63:12"},{"anonymous":false,"id":1469,"name":"SubscriptionFunded","nameLocation":"928:18:12","nodeType":"EventDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"962:5:12","nodeType":"VariableDeclaration","scope":1469,"src":"947:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1462,"name":"uint64","nodeType":"ElementaryTypeName","src":"947:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1465,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"977:10:12","nodeType":"VariableDeclaration","scope":1469,"src":"969:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1467,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"997:10:12","nodeType":"VariableDeclaration","scope":1469,"src":"989:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"946:62:12"},"src":"922:87:12"},{"anonymous":false,"id":1477,"name":"SubscriptionCanceled","nameLocation":"1018:20:12","nodeType":"EventDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1054:5:12","nodeType":"VariableDeclaration","scope":1477,"src":"1039:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1470,"name":"uint64","nodeType":"ElementaryTypeName","src":"1039:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1473,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1069:2:12","nodeType":"VariableDeclaration","scope":1477,"src":"1061:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1475,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1081:6:12","nodeType":"VariableDeclaration","scope":1477,"src":"1073:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:50:12"},"src":"1012:77:12"},{"constant":false,"id":1479,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1100:14:12","nodeType":"VariableDeclaration","scope":1987,"src":"1093:21:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1478,"name":"uint64","nodeType":"ElementaryTypeName","src":"1093:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1482,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1126:15:12","nodeType":"VariableDeclaration","scope":1987,"src":"1118:27:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1144:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1157:13:12","nodeType":"VariableDeclaration","scope":1987,"src":"1149:27:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1173:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Subscription","id":1490,"members":[{"constant":false,"id":1487,"mutability":"mutable","name":"owner","nameLocation":"1214:5:12","nodeType":"VariableDeclaration","scope":1490,"src":"1206:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1489,"mutability":"mutable","name":"balance","nameLocation":"1232:7:12","nodeType":"VariableDeclaration","scope":1490,"src":"1225:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1488,"name":"uint96","nodeType":"ElementaryTypeName","src":"1225:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1187:12:12","nodeType":"StructDefinition","scope":1987,"src":"1180:64:12","visibility":"public"},{"constant":false,"id":1495,"mutability":"mutable","name":"s_subscriptions","nameLocation":"1279:15:12","nodeType":"VariableDeclaration","scope":1987,"src":"1247:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"typeName":{"id":1494,"keyType":{"id":1491,"name":"uint64","nodeType":"ElementaryTypeName","src":"1255:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1247:31:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"valueType":{"id":1493,"nodeType":"UserDefinedTypeName","pathNode":{"id":1492,"name":"Subscription","nodeType":"IdentifierPath","referencedDeclaration":1490,"src":"1265:12:12"},"referencedDeclaration":1490,"src":"1265:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription"}}},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Request","id":1502,"members":[{"constant":false,"id":1497,"mutability":"mutable","name":"subId","nameLocation":"1358:5:12","nodeType":"VariableDeclaration","scope":1502,"src":"1351:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1496,"name":"uint64","nodeType":"ElementaryTypeName","src":"1351:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1376:16:12","nodeType":"VariableDeclaration","scope":1502,"src":"1369:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1498,"name":"uint32","nodeType":"ElementaryTypeName","src":"1369:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"numWords","nameLocation":"1405:8:12","nodeType":"VariableDeclaration","scope":1502,"src":"1398:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1500,"name":"uint32","nodeType":"ElementaryTypeName","src":"1398:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Request","nameLocation":"1337:7:12","nodeType":"StructDefinition","scope":1987,"src":"1330:88:12","visibility":"public"},{"constant":false,"id":1507,"mutability":"mutable","name":"s_requests","nameLocation":"1449:10:12","nodeType":"VariableDeclaration","scope":1987,"src":"1421:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$1502_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"typeName":{"id":1506,"keyType":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1421:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$1502_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"valueType":{"id":1505,"nodeType":"UserDefinedTypeName","pathNode":{"id":1504,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":1502,"src":"1440:7:12"},"referencedDeclaration":1502,"src":"1440:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}}},"visibility":"internal"},{"body":{"id":1522,"nodeType":"Block","src":"1545:66:12","statements":[{"expression":{"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1514,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1551:8:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1515,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"1562:8:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1551:19:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1517,"nodeType":"ExpressionStatement","src":"1551:19:12"},{"expression":{"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1518,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1576:14:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1519,"name":"_gasPriceLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"1593:13:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1576:30:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1521,"nodeType":"ExpressionStatement","src":"1576:30:12"}]},"id":1523,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"_baseFee","nameLocation":"1513:8:12","nodeType":"VariableDeclaration","scope":1523,"src":"1506:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1508,"name":"uint96","nodeType":"ElementaryTypeName","src":"1506:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"_gasPriceLink","nameLocation":"1530:13:12","nodeType":"VariableDeclaration","scope":1523,"src":"1523:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1510,"name":"uint96","nodeType":"ElementaryTypeName","src":"1523:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1505:39:12"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"1545:0:12"},"scope":1987,"src":"1494:117:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1669,"nodeType":"Block","src":"2241:902:12","statements":[{"assignments":[1532],"declarations":[{"constant":false,"id":1532,"mutability":"mutable","name":"startGas","nameLocation":"2255:8:12","nodeType":"VariableDeclaration","scope":1669,"src":"2247:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1535,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1533,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2266:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2266:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2247:28:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1536,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2285:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$1502_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":1538,"indexExpression":{"id":1537,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2296:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2285:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":1539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"2285:28:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2285:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1547,"nodeType":"IfStatement","src":"2281:83:12","trueBody":{"id":1546,"nodeType":"Block","src":"2320:44:12","statements":[{"expression":{"arguments":[{"hexValue":"6e6f6e6578697374656e742072657175657374","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2335:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""},"value":"nonexistent request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""}],"id":1542,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2328:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2328:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"2328:29:12"}]}},{"assignments":[1550],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"req","nameLocation":"2384:3:12","nodeType":"VariableDeclaration","scope":1669,"src":"2369:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"},"typeName":{"id":1549,"nodeType":"UserDefinedTypeName","pathNode":{"id":1548,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":1502,"src":"2369:7:12"},"referencedDeclaration":1502,"src":"2369:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}},"visibility":"internal"}],"id":1554,"initialValue":{"baseExpression":{"id":1551,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2390:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$1502_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":1553,"indexExpression":{"id":1552,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2401:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2390:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2369:43:12"},{"assignments":[1559],"declarations":[{"constant":false,"id":1559,"mutability":"mutable","name":"words","nameLocation":"2436:5:12","nodeType":"VariableDeclaration","scope":1669,"src":"2419:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2419:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1558,"nodeType":"ArrayTypeName","src":"2419:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1566,"initialValue":{"arguments":[{"expression":{"id":1563,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2458:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":1564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":1501,"src":"2458:12:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2444:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"2448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ArrayTypeName","src":"2448:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2444:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2419:52:12"},{"body":{"id":1593,"nodeType":"Block","src":"2520:71:12","statements":[{"expression":{"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1578,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2528:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1580,"indexExpression":{"id":1579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2534:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2528:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":1586,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2568:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2580:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1584,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2557:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2557:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2557:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1583,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2547:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2547:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2539:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:12","typeDescriptions":{}}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2539:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1592,"nodeType":"ExpressionStatement","src":"2528:56:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1571,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2497:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1572,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2501:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":1573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":1501,"src":"2501:12:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2497:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1594,"initializationExpression":{"assignments":[1568],"declarations":[{"constant":false,"id":1568,"mutability":"mutable","name":"i","nameLocation":"2490:1:12","nodeType":"VariableDeclaration","scope":1594,"src":"2482:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1570,"initialValue":{"hexValue":"30","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2494:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2482:13:12"},"loopExpression":{"expression":{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2515:3:12","subExpression":{"id":1575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2515:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1577,"nodeType":"ExpressionStatement","src":"2515:3:12"},"nodeType":"ForStatement","src":"2477:114:12"},{"assignments":[1597],"declarations":[{"constant":false,"id":1597,"mutability":"mutable","name":"v","nameLocation":"2615:1:12","nodeType":"VariableDeclaration","scope":1669,"src":"2597:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$919","typeString":"contract VRFConsumerBaseV2"},"typeName":{"id":1596,"nodeType":"UserDefinedTypeName","pathNode":{"id":1595,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"2597:17:12"},"referencedDeclaration":919,"src":"2597:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$919","typeString":"contract VRFConsumerBaseV2"}},"visibility":"internal"}],"id":1598,"nodeType":"VariableDeclarationStatement","src":"2597:19:12"},{"assignments":[1600],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"callReq","nameLocation":"2635:7:12","nodeType":"VariableDeclaration","scope":1669,"src":"2622:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1599,"name":"bytes","nodeType":"ElementaryTypeName","src":"2622:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1609,"initialValue":{"arguments":[{"expression":{"expression":{"id":1603,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2668:1:12","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$919","typeString":"contract VRFConsumerBaseV2"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":918,"src":"2668:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2668:32:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1606,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2702:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1607,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2714:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1601,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2645:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2645:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2645:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2622:98:12"},{"assignments":[1611,null],"declarations":[{"constant":false,"id":1611,"mutability":"mutable","name":"success","nameLocation":"2732:7:12","nodeType":"VariableDeclaration","scope":1669,"src":"2727:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"2727:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1619,"initialValue":{"arguments":[{"id":1617,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"2787:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1612,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2745:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2745:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1614,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2765:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":1615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"2765:20:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"2745:41:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2745:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2726:69:12"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"payment","nameLocation":"2809:7:12","nodeType":"VariableDeclaration","scope":1669,"src":"2802:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1620,"name":"uint96","nodeType":"ElementaryTypeName","src":"2802:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1635,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1624,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"2826:8:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1625,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2839:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1626,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2850:7:12","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2850:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2838:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1630,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2863:14:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2838:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2837:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2826:52:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2819:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1622,"name":"uint96","nodeType":"ElementaryTypeName","src":"2819:6:12","typeDescriptions":{}}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2819:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2802:77:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1636,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2889:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1639,"indexExpression":{"expression":{"id":1637,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2905:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":1638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"2905:9:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2889:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1489,"src":"2889:34:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1641,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"2926:7:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2889:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1647,"nodeType":"IfStatement","src":"2885:93:12","trueBody":{"id":1646,"nodeType":"Block","src":"2935:43:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1643,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"2950:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"RevertStatement","src":"2943:28:12"}]}},{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1648,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2983:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1651,"indexExpression":{"expression":{"id":1649,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2999:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":1650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"2999:9:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2983:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1489,"src":"2983:34:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1653,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3021:7:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2983:45:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1655,"nodeType":"ExpressionStatement","src":"2983:45:12"},{"expression":{"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3034:31:12","subExpression":{"components":[{"baseExpression":{"id":1656,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"3042:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$1502_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":1658,"indexExpression":{"id":1657,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3053:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3042:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}}],"id":1659,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3041:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"3034:31:12"},{"eventCall":{"arguments":[{"id":1663,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3097:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1664,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3109:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1665,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3121:7:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":1666,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"3130:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1662,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"3076:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint96,bool)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3076:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"EmitStatement","src":"3071:67:12"}]},"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"1615:547:12","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":1670,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2174:18:12","nodeType":"FunctionDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"_requestId","nameLocation":"2201:10:12","nodeType":"VariableDeclaration","scope":1670,"src":"2193:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"_consumer","nameLocation":"2221:9:12","nodeType":"VariableDeclaration","scope":1670,"src":"2213:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2192:39:12"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[],"src":"2241:0:12"},"scope":1987,"src":"2165:978:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1714,"nodeType":"Block","src":"3409:278:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1678,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"3419:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1680,"indexExpression":{"id":1679,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"3435:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3419:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"3419:29:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3452:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:12","typeDescriptions":{}}},"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3452:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3419:43:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1691,"nodeType":"IfStatement","src":"3415:92:12","trueBody":{"id":1690,"nodeType":"Block","src":"3464:43:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1687,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3479:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3479:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1689,"nodeType":"RevertStatement","src":"3472:28:12"}]}},{"assignments":[1693],"declarations":[{"constant":false,"id":1693,"mutability":"mutable","name":"oldBalance","nameLocation":"3519:10:12","nodeType":"VariableDeclaration","scope":1714,"src":"3512:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1692,"name":"uint96","nodeType":"ElementaryTypeName","src":"3512:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1698,"initialValue":{"expression":{"baseExpression":{"id":1694,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"3532:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1696,"indexExpression":{"id":1695,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"3548:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3532:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1489,"src":"3532:31:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3512:51:12"},{"expression":{"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1699,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"3569:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1701,"indexExpression":{"id":1700,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"3585:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3569:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1489,"src":"3569:31:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1703,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"3604:7:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3569:42:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1705,"nodeType":"ExpressionStatement","src":"3569:42:12"},{"eventCall":{"arguments":[{"id":1707,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"3641:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1708,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"3649:10:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"3661:10:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1710,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"3674:7:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3661:20:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1706,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3622:18:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3622:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"EmitStatement","src":"3617:65:12"}]},"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"3147:195:12","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"afc69b53","id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"3354:16:12","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"_subId","nameLocation":"3378:6:12","nodeType":"VariableDeclaration","scope":1715,"src":"3371:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1672,"name":"uint64","nodeType":"ElementaryTypeName","src":"3371:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"_amount","nameLocation":"3393:7:12","nodeType":"VariableDeclaration","scope":1715,"src":"3386:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1674,"name":"uint96","nodeType":"ElementaryTypeName","src":"3386:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3370:31:12"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"3409:0:12"},"scope":1987,"src":"3345:342:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1348],"body":{"id":1779,"nodeType":"Block","src":"3893:516:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1731,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"3903:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1733,"indexExpression":{"id":1732,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"3919:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3903:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"3903:29:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3936:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"3936:7:12","typeDescriptions":{}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3936:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3903:43:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1744,"nodeType":"IfStatement","src":"3899:92:12","trueBody":{"id":1743,"nodeType":"Block","src":"3948:43:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1740,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3963:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3963:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1742,"nodeType":"RevertStatement","src":"3956:28:12"}]}},{"assignments":[1746],"declarations":[{"constant":false,"id":1746,"mutability":"mutable","name":"requestId","nameLocation":"4005:9:12","nodeType":"VariableDeclaration","scope":1779,"src":"3997:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1749,"initialValue":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4017:17:12","subExpression":{"id":1747,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"4017:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3997:37:12"},{"assignments":[1751],"declarations":[{"constant":false,"id":1751,"mutability":"mutable","name":"preSeed","nameLocation":"4048:7:12","nodeType":"VariableDeclaration","scope":1779,"src":"4040:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4040:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1754,"initialValue":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4058:15:12","subExpression":{"id":1752,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4058:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4040:33:12"},{"expression":{"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1755,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4080:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$1502_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":1757,"indexExpression":{"id":1756,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4091:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1759,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"4120:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1760,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"4146:17:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1761,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"4175:9:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1758,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"4104:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$1502_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Request storage pointer)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["subId","callbackGasLimit","numWords"],"nodeType":"FunctionCall","src":"4104:82:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"src":"4080:106:12","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$1502_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":1764,"nodeType":"ExpressionStatement","src":"4080:106:12"},{"eventCall":{"arguments":[{"id":1766,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"4226:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1767,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4242:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1768,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"4259:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1769,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"4274:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1770,"name":"_minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4288:28:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1771,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"4324:17:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1772,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"4349:9:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":1773,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4366:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4366:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1765,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"4198:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4198:184:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1776,"nodeType":"EmitStatement","src":"4193:189:12"},{"expression":{"id":1777,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4395:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1730,"id":1778,"nodeType":"Return","src":"4388:16:12"}]},"functionSelector":"5d3b1d30","id":1780,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"3700:18:12","nodeType":"FunctionDefinition","overrides":{"id":1727,"nodeType":"OverrideSpecifier","overrides":[],"src":"3866:8:12"},"parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"_keyHash","nameLocation":"3732:8:12","nodeType":"VariableDeclaration","scope":1780,"src":"3724:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3724:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"_subId","nameLocation":"3753:6:12","nodeType":"VariableDeclaration","scope":1780,"src":"3746:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1718,"name":"uint64","nodeType":"ElementaryTypeName","src":"3746:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"_minimumRequestConfirmations","nameLocation":"3772:28:12","nodeType":"VariableDeclaration","scope":1780,"src":"3765:35:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1720,"name":"uint16","nodeType":"ElementaryTypeName","src":"3765:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"_callbackGasLimit","nameLocation":"3813:17:12","nodeType":"VariableDeclaration","scope":1780,"src":"3806:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1722,"name":"uint32","nodeType":"ElementaryTypeName","src":"3806:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"_numWords","nameLocation":"3843:9:12","nodeType":"VariableDeclaration","scope":1780,"src":"3836:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1724,"name":"uint32","nodeType":"ElementaryTypeName","src":"3836:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3718:138:12"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1780,"src":"3884:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3884:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3883:9:12"},"scope":1987,"src":"3691:718:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1354],"body":{"id":1807,"nodeType":"Block","src":"4485:197:12","statements":[{"expression":{"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4491:16:12","subExpression":{"id":1786,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"4491:14:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1788,"nodeType":"ExpressionStatement","src":"4491:16:12"},{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1789,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"4513:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1791,"indexExpression":{"id":1790,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"4529:14:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4513:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4568:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4568:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4589:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1792,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"4547:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$1490_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Subscription storage pointer)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["owner","balance"],"nodeType":"FunctionCall","src":"4547:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription memory"}},"src":"4513:79:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1798,"nodeType":"ExpressionStatement","src":"4513:79:12"},{"eventCall":{"arguments":[{"id":1800,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"4623:14:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":1801,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4639:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4639:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1799,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"4603:19:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4603:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"EmitStatement","src":"4598:52:12"},{"expression":{"id":1805,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"4663:14:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1785,"id":1806,"nodeType":"Return","src":"4656:21:12"}]},"functionSelector":"a21a23e4","id":1808,"implemented":true,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"4422:18:12","nodeType":"FunctionDefinition","overrides":{"id":1782,"nodeType":"OverrideSpecifier","overrides":[],"src":"4452:8:12"},"parameters":{"id":1781,"nodeType":"ParameterList","parameters":[],"src":"4440:2:12"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"_subId","nameLocation":"4477:6:12","nodeType":"VariableDeclaration","scope":1808,"src":"4470:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1783,"name":"uint64","nodeType":"ElementaryTypeName","src":"4470:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4469:15:12"},"scope":1987,"src":"4413:269:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1369],"body":{"id":1853,"nodeType":"Block","src":"4882:200:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1823,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"4892:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1825,"indexExpression":{"id":1824,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"4908:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4892:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"4892:29:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4925:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"4925:7:12","typeDescriptions":{}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4925:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4892:43:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1836,"nodeType":"IfStatement","src":"4888:92:12","trueBody":{"id":1835,"nodeType":"Block","src":"4937:43:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1832,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"4952:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4952:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1834,"nodeType":"RevertStatement","src":"4945:28:12"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":1837,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"4993:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1839,"indexExpression":{"id":1838,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5009:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4993:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1489,"src":"4993:31:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5026:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"baseExpression":{"id":1842,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"5029:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1844,"indexExpression":{"id":1843,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5045:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5029:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"5029:29:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5074:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5060:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"5064:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1847,"nodeType":"ArrayTypeName","src":"5064:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5060:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"id":1851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4992:85:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_rational_0_by_1_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"tuple(uint96,int_const 0,address,address[] memory)"}},"functionReturnParameters":1822,"id":1852,"nodeType":"Return","src":"4985:92:12"}]},"functionSelector":"a47c7696","id":1854,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"4695:15:12","nodeType":"FunctionDefinition","overrides":{"id":1812,"nodeType":"OverrideSpecifier","overrides":[],"src":"4752:8:12"},"parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"_subId","nameLocation":"4718:6:12","nodeType":"VariableDeclaration","scope":1854,"src":"4711:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1809,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:15:12"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"balance","nameLocation":"4788:7:12","nodeType":"VariableDeclaration","scope":1854,"src":"4781:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1813,"name":"uint96","nodeType":"ElementaryTypeName","src":"4781:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"reqCount","nameLocation":"4810:8:12","nodeType":"VariableDeclaration","scope":1854,"src":"4803:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1815,"name":"uint64","nodeType":"ElementaryTypeName","src":"4803:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"owner","nameLocation":"4834:5:12","nodeType":"VariableDeclaration","scope":1854,"src":"4826:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"consumers","nameLocation":"4864:9:12","nodeType":"VariableDeclaration","scope":1854,"src":"4847:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"4847:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1820,"nodeType":"ArrayTypeName","src":"4847:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4773:106:12"},"scope":1987,"src":"4686:396:12","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1407],"body":{"id":1880,"nodeType":"Block","src":"5181:120:12","statements":[{"eventCall":{"arguments":[{"id":1866,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"5213:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1867,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"5221:3:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1868,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"5226:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1870,"indexExpression":{"id":1869,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"5242:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5226:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1489,"src":"5226:31:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1865,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"5192:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint64,address,uint256)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5192:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1873,"nodeType":"EmitStatement","src":"5187:71:12"},{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5264:32:12","subExpression":{"components":[{"baseExpression":{"id":1874,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"5272:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1876,"indexExpression":{"id":1875,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"5288:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5272:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}}],"id":1877,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5271:25:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1879,"nodeType":"ExpressionStatement","src":"5264:32:12"}]},"functionSelector":"d7ae1d30","id":1881,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1862,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"5173:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":1863,"kind":"modifierInvocation","modifierName":{"id":1861,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":1915,"src":"5160:12:12"},"nodeType":"ModifierInvocation","src":"5160:20:12"}],"name":"cancelSubscription","nameLocation":"5095:18:12","nodeType":"FunctionDefinition","overrides":{"id":1860,"nodeType":"OverrideSpecifier","overrides":[],"src":"5151:8:12"},"parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"_subId","nameLocation":"5121:6:12","nodeType":"VariableDeclaration","scope":1881,"src":"5114:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1855,"name":"uint64","nodeType":"ElementaryTypeName","src":"5114:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"_to","nameLocation":"5137:3:12","nodeType":"VariableDeclaration","scope":1881,"src":"5129:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"5129:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5113:28:12"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[],"src":"5181:0:12"},"scope":1987,"src":"5086:215:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1914,"nodeType":"Block","src":"5342:209:12","statements":[{"assignments":[1886],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"owner","nameLocation":"5356:5:12","nodeType":"VariableDeclaration","scope":1914,"src":"5348:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"5348:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1891,"initialValue":{"expression":{"baseExpression":{"id":1887,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"5364:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$1490_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":1889,"indexExpression":{"id":1888,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5380:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5364:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1490_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":1890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"5364:29:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5348:45:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"5403:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5420:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5412:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:12","typeDescriptions":{}}},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5412:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5403:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1902,"nodeType":"IfStatement","src":"5399:68:12","trueBody":{"id":1901,"nodeType":"Block","src":"5424:43:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1898,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5439:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5439:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"RevertStatement","src":"5432:28:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1903,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5476:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5476:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1905,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"5490:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1912,"nodeType":"IfStatement","src":"5472:68:12","trueBody":{"id":1911,"nodeType":"Block","src":"5497:43:12","statements":[{"errorCall":{"arguments":[{"id":1908,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"5527:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1907,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"5512:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5512:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1910,"nodeType":"RevertStatement","src":"5505:28:12"}]}},{"id":1913,"nodeType":"PlaceholderStatement","src":"5545:1:12"}]},"id":1915,"name":"onlySubOwner","nameLocation":"5314:12:12","nodeType":"ModifierDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"_subId","nameLocation":"5334:6:12","nodeType":"VariableDeclaration","scope":1915,"src":"5327:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1882,"name":"uint64","nodeType":"ElementaryTypeName","src":"5327:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5326:15:12"},"src":"5305:246:12","virtual":false,"visibility":"internal"},{"baseFunctions":[1332],"body":{"id":1935,"nodeType":"Block","src":"5691:48:12","statements":[{"expression":{"components":[{"hexValue":"33","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5705:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"hexValue":"32303030303030","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5708:7:12","typeDescriptions":{"typeIdentifier":"t_rational_2000000_by_1","typeString":"int_const 2000000"},"value":"2000000"},{"arguments":[{"hexValue":"30","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5731:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5717:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1929,"nodeType":"ArrayTypeName","src":"5721:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5717:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"id":1933,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5704:30:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_3_by_1_$_t_rational_2000000_by_1_$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"tuple(int_const 3,int_const 2000000,bytes32[] memory)"}},"functionReturnParameters":1925,"id":1934,"nodeType":"Return","src":"5697:37:12"}]},"functionSelector":"00012291","id":1936,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"5564:16:12","nodeType":"FunctionDefinition","overrides":{"id":1917,"nodeType":"OverrideSpecifier","overrides":[],"src":"5609:8:12"},"parameters":{"id":1916,"nodeType":"ParameterList","parameters":[],"src":"5580:2:12"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1936,"src":"5638:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1918,"name":"uint16","nodeType":"ElementaryTypeName","src":"5638:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1936,"src":"5652:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1920,"name":"uint32","nodeType":"ElementaryTypeName","src":"5652:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1936,"src":"5666:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5666:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1923,"nodeType":"ArrayTypeName","src":"5666:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5630:58:12"},"scope":1987,"src":"5555:184:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1391],"body":{"id":1948,"nodeType":"Block","src":"5821:36:12","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5834:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1944,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5827:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5827:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1947,"nodeType":"ExpressionStatement","src":"5827:25:12"}]},"functionSelector":"7341c10c","id":1949,"implemented":true,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"5752:11:12","nodeType":"FunctionDefinition","overrides":{"id":1942,"nodeType":"OverrideSpecifier","overrides":[],"src":"5812:8:12"},"parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"_subId","nameLocation":"5771:6:12","nodeType":"VariableDeclaration","scope":1949,"src":"5764:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1937,"name":"uint64","nodeType":"ElementaryTypeName","src":"5764:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"_consumer","nameLocation":"5787:9:12","nodeType":"VariableDeclaration","scope":1949,"src":"5779:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"5779:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5763:34:12"},"returnParameters":{"id":1943,"nodeType":"ParameterList","parameters":[],"src":"5821:0:12"},"scope":1987,"src":"5743:114:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1399],"body":{"id":1961,"nodeType":"Block","src":"5942:36:12","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5955:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1957,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5948:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5948:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1960,"nodeType":"ExpressionStatement","src":"5948:25:12"}]},"functionSelector":"9f87fad7","id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"5870:14:12","nodeType":"FunctionDefinition","overrides":{"id":1955,"nodeType":"OverrideSpecifier","overrides":[],"src":"5933:8:12"},"parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"_subId","nameLocation":"5892:6:12","nodeType":"VariableDeclaration","scope":1962,"src":"5885:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1950,"name":"uint64","nodeType":"ElementaryTypeName","src":"5885:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"_consumer","nameLocation":"5908:9:12","nodeType":"VariableDeclaration","scope":1962,"src":"5900:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1952,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5884:34:12"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[],"src":"5942:0:12"},"scope":1987,"src":"5861:117:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1377],"body":{"id":1974,"nodeType":"Block","src":"6081:36:12","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6094:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1970,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6087:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6087:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1973,"nodeType":"ExpressionStatement","src":"6087:25:12"}]},"functionSelector":"04c357cb","id":1975,"implemented":true,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"5991:32:12","nodeType":"FunctionDefinition","overrides":{"id":1968,"nodeType":"OverrideSpecifier","overrides":[],"src":"6072:8:12"},"parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"_subId","nameLocation":"6031:6:12","nodeType":"VariableDeclaration","scope":1975,"src":"6024:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1963,"name":"uint64","nodeType":"ElementaryTypeName","src":"6024:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1966,"mutability":"mutable","name":"_newOwner","nameLocation":"6047:9:12","nodeType":"VariableDeclaration","scope":1975,"src":"6039:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6023:34:12"},"returnParameters":{"id":1969,"nodeType":"ParameterList","parameters":[],"src":"6081:0:12"},"scope":1987,"src":"5982:135:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1383],"body":{"id":1985,"nodeType":"Block","src":"6200:36:12","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6213:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1981,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6206:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6206:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1984,"nodeType":"ExpressionStatement","src":"6206:25:12"}]},"functionSelector":"82359740","id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"6130:31:12","nodeType":"FunctionDefinition","overrides":{"id":1979,"nodeType":"OverrideSpecifier","overrides":[],"src":"6191:8:12"},"parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"_subId","nameLocation":"6169:6:12","nodeType":"VariableDeclaration","scope":1986,"src":"6162:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1976,"name":"uint64","nodeType":"ElementaryTypeName","src":"6162:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6161:15:12"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[],"src":"6200:0:12"},"scope":1987,"src":"6121:115:12","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":1988,"src":"254:5984:12","usedErrors":[1421,1423,1427]}],"src":"92:6147:12"},"id":12},"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol","exportedSymbols":{"BufferChainlink":[2509]},"id":2510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1989,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"57:383:13","text":" @dev A library for working with mutable byte buffers in Solidity.\n Byte buffers are mutable and expandable, and provide a variety of primitives\n for writing to them. At any time you can fetch a bytes object containing the\n current contents of the buffer. The bytes object should not be stored between\n operations, as it may change due to resizing of the buffer."},"fullyImplemented":true,"id":2509,"linearizedBaseContracts":[2509],"name":"BufferChainlink","nameLocation":"449:15:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"BufferChainlink.buffer","id":1995,"members":[{"constant":false,"id":1992,"mutability":"mutable","name":"buf","nameLocation":"743:3:13","nodeType":"VariableDeclaration","scope":1995,"src":"737:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"737:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"capacity","nameLocation":"760:8:13","nodeType":"VariableDeclaration","scope":1995,"src":"752:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"buffer","nameLocation":"724:6:13","nodeType":"StructDefinition","scope":2509,"src":"717:56:13","visibility":"public"},{"body":{"id":2032,"nodeType":"Block","src":"1090:310:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"1100:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1100:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1117:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1100:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2022,"nodeType":"IfStatement","src":"1096:71:13","trueBody":{"id":2021,"nodeType":"Block","src":"1120:47:13","statements":[{"expression":{"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2012,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"1128:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1140:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"1146:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1157:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1146:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1145:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1140:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1128:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2020,"nodeType":"ExpressionStatement","src":"1128:32:13"}]}},{"expression":{"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2023,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"1214:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"1214:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2026,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"1229:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1214:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2028,"nodeType":"ExpressionStatement","src":"1214:23:13"},{"AST":{"nodeType":"YulBlock","src":"1252:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1260:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1277:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1271:5:13"},"nodeType":"YulFunctionCall","src":"1271:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1264:3:13","type":""}]},{"expression":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"1296:3:13"},{"name":"ptr","nodeType":"YulIdentifier","src":"1301:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1289:6:13"},"nodeType":"YulFunctionCall","src":"1289:16:13"},"nodeType":"YulExpressionStatement","src":"1289:16:13"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1319:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1324:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1312:6:13"},"nodeType":"YulFunctionCall","src":"1312:14:13"},"nodeType":"YulExpressionStatement","src":"1312:14:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1340:4:13","type":"","value":"0x40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1350:2:13","type":"","value":"32"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1358:3:13"},{"name":"capacity","nodeType":"YulIdentifier","src":"1363:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:13"},"nodeType":"YulFunctionCall","src":"1354:18:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1346:3:13"},"nodeType":"YulFunctionCall","src":"1346:27:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1333:6:13"},"nodeType":"YulFunctionCall","src":"1333:41:13"},"nodeType":"YulExpressionStatement","src":"1333:41:13"}]},"evmVersion":"london","externalReferences":[{"declaration":1999,"isOffset":false,"isSlot":false,"src":"1296:3:13","valueSize":1},{"declaration":2001,"isOffset":false,"isSlot":false,"src":"1363:8:13","valueSize":1}],"id":2029,"nodeType":"InlineAssembly","src":"1243:137:13"},{"expression":{"id":2030,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"1392:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2006,"id":2031,"nodeType":"Return","src":"1385:10:13"}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"777:221:13","text":" @dev Initializes a buffer with an initial capacity.\n @param buf The buffer to initialize.\n @param capacity The number of bytes of space to allocate the buffer.\n @return The buffer, for chaining."},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"init","nameLocation":"1010:4:13","nodeType":"FunctionDefinition","parameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"buf","nameLocation":"1029:3:13","nodeType":"VariableDeclaration","scope":2033,"src":"1015:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1998,"nodeType":"UserDefinedTypeName","pathNode":{"id":1997,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"1015:6:13"},"referencedDeclaration":1995,"src":"1015:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"capacity","nameLocation":"1042:8:13","nodeType":"VariableDeclaration","scope":2033,"src":"1034:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2000,"name":"uint256","nodeType":"ElementaryTypeName","src":"1034:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1014:37:13"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"1075:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2004,"nodeType":"UserDefinedTypeName","pathNode":{"id":2003,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"1075:6:13"},"referencedDeclaration":1995,"src":"1075:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"1074:15:13"},"scope":2509,"src":"1001:399:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2061,"nodeType":"Block","src":"1707:90:13","statements":[{"assignments":[2044],"declarations":[{"constant":false,"id":2044,"mutability":"mutable","name":"buf","nameLocation":"1727:3:13","nodeType":"VariableDeclaration","scope":2061,"src":"1713:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2043,"nodeType":"UserDefinedTypeName","pathNode":{"id":2042,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"1713:6:13"},"referencedDeclaration":1995,"src":"1713:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"id":2045,"nodeType":"VariableDeclarationStatement","src":"1713:17:13"},{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2046,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1736:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"1736:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2049,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"1746:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1736:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2051,"nodeType":"ExpressionStatement","src":"1736:11:13"},{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2052,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1753:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"1753:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2055,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"1768:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1768:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1753:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"1753:23:13"},{"expression":{"id":2059,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1789:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2041,"id":2060,"nodeType":"Return","src":"1782:10:13"}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"1404:227:13","text":" @dev Initializes a new buffer from an existing bytes object.\n      Changes to the buffer may mutate the original value.\n @param b The bytes object to initialize the buffer with.\n @return A new buffer."},"id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"fromBytes","nameLocation":"1643:9:13","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"b","nameLocation":"1666:1:13","nodeType":"VariableDeclaration","scope":2062,"src":"1653:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"1653:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1652:16:13"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"1692:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2039,"nodeType":"UserDefinedTypeName","pathNode":{"id":2038,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"1692:6:13"},"referencedDeclaration":1995,"src":"1692:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"1691:15:13"},"scope":2509,"src":"1634:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2085,"nodeType":"Block","src":"1867:90:13","statements":[{"assignments":[2071],"declarations":[{"constant":false,"id":2071,"mutability":"mutable","name":"oldbuf","nameLocation":"1886:6:13","nodeType":"VariableDeclaration","scope":2085,"src":"1873:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2070,"name":"bytes","nodeType":"ElementaryTypeName","src":"1873:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2074,"initialValue":{"expression":{"id":2072,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"1895:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"1895:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1873:29:13"},{"expression":{"arguments":[{"id":2076,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"1913:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2077,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"1918:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"name":"init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1908:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1908:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2079,"nodeType":"ExpressionStatement","src":"1908:19:13"},{"expression":{"arguments":[{"id":2081,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"1940:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2082,"name":"oldbuf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"1945:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2080,"name":"append","nodeType":"Identifier","overloadedDeclarations":[2229,2252],"referencedDeclaration":2252,"src":"1933:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure returns (struct BufferChainlink.buffer memory)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1933:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2084,"nodeType":"ExpressionStatement","src":"1933:19:13"}]},"id":2086,"implemented":true,"kind":"function","modifiers":[],"name":"resize","nameLocation":"1810:6:13","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"buf","nameLocation":"1831:3:13","nodeType":"VariableDeclaration","scope":2086,"src":"1817:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2064,"nodeType":"UserDefinedTypeName","pathNode":{"id":2063,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"1817:6:13"},"referencedDeclaration":1995,"src":"1817:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"capacity","nameLocation":"1844:8:13","nodeType":"VariableDeclaration","scope":2086,"src":"1836:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1816:37:13"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[],"src":"1867:0:13"},"scope":2509,"src":"1801:156:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2104,"nodeType":"Block","src":"2027:58:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2037:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"2041:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2037:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2101,"nodeType":"IfStatement","src":"2033:34:13","trueBody":{"id":2100,"nodeType":"Block","src":"2044:23:13","statements":[{"expression":{"id":2098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2059:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2094,"id":2099,"nodeType":"Return","src":"2052:8:13"}]}},{"expression":{"id":2102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"2079:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2094,"id":2103,"nodeType":"Return","src":"2072:8:13"}]},"id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1970:3:13","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"a","nameLocation":"1982:1:13","nodeType":"VariableDeclaration","scope":2105,"src":"1974:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1974:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"b","nameLocation":"1993:1:13","nodeType":"VariableDeclaration","scope":2105,"src":"1985:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1985:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1973:22:13"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2105,"src":"2018:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"2018:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2017:9:13"},"scope":2509,"src":"1961:124:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2118,"nodeType":"Block","src":"2300:97:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2315:62:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2323:24:13","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"2343:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2337:5:13"},"nodeType":"YulFunctionCall","src":"2337:10:13"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"2327:6:13","type":""}]},{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"2361:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2369:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2354:6:13"},"nodeType":"YulFunctionCall","src":"2354:17:13"},"nodeType":"YulExpressionStatement","src":"2354:17:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2109,"isOffset":false,"isSlot":false,"src":"2343:3:13","valueSize":1}],"id":2115,"nodeType":"InlineAssembly","src":"2306:71:13"},{"expression":{"id":2116,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2389:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2114,"id":2117,"nodeType":"Return","src":"2382:10:13"}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"2089:133:13","text":" @dev Sets buffer length to 0.\n @param buf The buffer to truncate.\n @return The original buffer, for chaining.."},"id":2119,"implemented":true,"kind":"function","modifiers":[],"name":"truncate","nameLocation":"2234:8:13","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"buf","nameLocation":"2257:3:13","nodeType":"VariableDeclaration","scope":2119,"src":"2243:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2108,"nodeType":"UserDefinedTypeName","pathNode":{"id":2107,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"2243:6:13"},"referencedDeclaration":1995,"src":"2243:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"2242:19:13"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2119,"src":"2285:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2112,"nodeType":"UserDefinedTypeName","pathNode":{"id":2111,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"2285:6:13"},"referencedDeclaration":1995,"src":"2285:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"2284:15:13"},"scope":2509,"src":"2225:172:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"2882:1073:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"2896:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2137,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2903:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2903:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2896:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2888:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2888:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2141,"nodeType":"ExpressionStatement","src":"2888:27:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2142,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2926:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2143,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"2932:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2926:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2145,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"2938:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"2938:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2926:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2162,"nodeType":"IfStatement","src":"2922:90:13","trueBody":{"id":2161,"nodeType":"Block","src":"2952:60:13","statements":[{"expression":{"arguments":[{"id":2149,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"2967:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2151,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"2976:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"2976:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2153,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"2990:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2154,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2996:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2990:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2150,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2972:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2972:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3003:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2972:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2148,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"2960:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2960:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2160,"nodeType":"ExpressionStatement","src":"2960:45:13"}]}},{"assignments":[2164],"declarations":[{"constant":false,"id":2164,"mutability":"mutable","name":"dest","nameLocation":"3026:4:13","nodeType":"VariableDeclaration","scope":2204,"src":"3018:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3018:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2165,"nodeType":"VariableDeclarationStatement","src":"3018:12:13"},{"assignments":[2167],"declarations":[{"constant":false,"id":2167,"mutability":"mutable","name":"src","nameLocation":"3044:3:13","nodeType":"VariableDeclaration","scope":2204,"src":"3036:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2168,"nodeType":"VariableDeclarationStatement","src":"3036:11:13"},{"AST":{"nodeType":"YulBlock","src":"3062:430:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3113:24:13","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"3133:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3127:5:13"},"nodeType":"YulFunctionCall","src":"3127:10:13"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"3117:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3184:27:13","value":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"3204:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3198:5:13"},"nodeType":"YulFunctionCall","src":"3198:13:13"},"variables":[{"name":"buflen","nodeType":"YulTypedName","src":"3188:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3291:33:13","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"3307:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3315:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3303:3:13"},"nodeType":"YulFunctionCall","src":"3303:15:13"},{"name":"off","nodeType":"YulIdentifier","src":"3320:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:13"},"nodeType":"YulFunctionCall","src":"3299:25:13"},"variableNames":[{"name":"dest","nodeType":"YulIdentifier","src":"3291:4:13"}]},{"body":{"nodeType":"YulBlock","src":"3412:47:13","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"3429:6:13"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3441:3:13"},{"name":"off","nodeType":"YulIdentifier","src":"3446:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3437:3:13"},"nodeType":"YulFunctionCall","src":"3437:13:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3422:6:13"},"nodeType":"YulFunctionCall","src":"3422:29:13"},"nodeType":"YulExpressionStatement","src":"3422:29:13"}]},"condition":{"arguments":[{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3393:3:13"},{"name":"off","nodeType":"YulIdentifier","src":"3398:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3389:3:13"},"nodeType":"YulFunctionCall","src":"3389:13:13"},{"name":"buflen","nodeType":"YulIdentifier","src":"3404:6:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3386:2:13"},"nodeType":"YulFunctionCall","src":"3386:25:13"},"nodeType":"YulIf","src":"3383:76:13"},{"nodeType":"YulAssignment","src":"3466:20:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3477:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"3483:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3473:3:13"},"nodeType":"YulFunctionCall","src":"3473:13:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3466:3:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2123,"isOffset":false,"isSlot":false,"src":"3133:3:13","valueSize":1},{"declaration":2127,"isOffset":false,"isSlot":false,"src":"3477:4:13","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"3291:4:13","valueSize":1},{"declaration":2129,"isOffset":false,"isSlot":false,"src":"3393:3:13","valueSize":1},{"declaration":2129,"isOffset":false,"isSlot":false,"src":"3441:3:13","valueSize":1},{"declaration":2125,"isOffset":false,"isSlot":false,"src":"3320:3:13","valueSize":1},{"declaration":2125,"isOffset":false,"isSlot":false,"src":"3398:3:13","valueSize":1},{"declaration":2125,"isOffset":false,"isSlot":false,"src":"3446:3:13","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"3466:3:13","valueSize":1}],"id":2169,"nodeType":"InlineAssembly","src":"3053:439:13"},{"body":{"id":2186,"nodeType":"Block","src":"3573:100:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3590:42:13","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"3607:4:13"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3619:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3613:5:13"},"nodeType":"YulFunctionCall","src":"3613:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3600:6:13"},"nodeType":"YulFunctionCall","src":"3600:24:13"},"nodeType":"YulExpressionStatement","src":"3600:24:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2164,"isOffset":false,"isSlot":false,"src":"3607:4:13","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"3619:3:13","valueSize":1}],"id":2177,"nodeType":"InlineAssembly","src":"3581:51:13"},{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2178,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"3639:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3647:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3639:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2181,"nodeType":"ExpressionStatement","src":"3639:10:13"},{"expression":{"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2182,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"3657:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3664:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3657:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2185,"nodeType":"ExpressionStatement","src":"3657:9:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"3551:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3558:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3551:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2187,"loopExpression":{"expression":{"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2173,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"3562:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3562:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2176,"nodeType":"ExpressionStatement","src":"3562:9:13"},"nodeType":"ForStatement","src":"3544:129:13"},{"id":2201,"nodeType":"UncheckedBlock","src":"3707:227:13","statements":[{"assignments":[2189],"declarations":[{"constant":false,"id":2189,"mutability":"mutable","name":"mask","nameLocation":"3733:4:13","nodeType":"VariableDeclaration","scope":2201,"src":"3725:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3725:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2199,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3741:3:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3747:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2192,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"3752:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3747:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3746:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3741:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3740:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3760:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3740:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3725:36:13"},{"AST":{"nodeType":"YulBlock","src":"3778:150:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3788:41:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3813:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3807:5:13"},"nodeType":"YulFunctionCall","src":"3807:10:13"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3823:4:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3819:3:13"},"nodeType":"YulFunctionCall","src":"3819:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3803:3:13"},"nodeType":"YulFunctionCall","src":"3803:26:13"},"variables":[{"name":"srcpart","nodeType":"YulTypedName","src":"3792:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3838:38:13","value":{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"3864:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3858:5:13"},"nodeType":"YulFunctionCall","src":"3858:11:13"},{"name":"mask","nodeType":"YulIdentifier","src":"3871:4:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3854:3:13"},"nodeType":"YulFunctionCall","src":"3854:22:13"},"variables":[{"name":"destpart","nodeType":"YulTypedName","src":"3842:8:13","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"3892:4:13"},{"arguments":[{"name":"destpart","nodeType":"YulIdentifier","src":"3901:8:13"},{"name":"srcpart","nodeType":"YulIdentifier","src":"3911:7:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3898:2:13"},"nodeType":"YulFunctionCall","src":"3898:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3885:6:13"},"nodeType":"YulFunctionCall","src":"3885:35:13"},"nodeType":"YulExpressionStatement","src":"3885:35:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2164,"isOffset":false,"isSlot":false,"src":"3864:4:13","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"3892:4:13","valueSize":1},{"declaration":2189,"isOffset":false,"isSlot":false,"src":"3823:4:13","valueSize":1},{"declaration":2189,"isOffset":false,"isSlot":false,"src":"3871:4:13","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"3813:3:13","valueSize":1}],"id":2200,"nodeType":"InlineAssembly","src":"3769:159:13"}]},{"expression":{"id":2202,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"3947:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2134,"id":2203,"nodeType":"Return","src":"3940:10:13"}]},"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"2401:341:13","text":" @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The start offset to write to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"write","nameLocation":"2754:5:13","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"buf","nameLocation":"2779:3:13","nodeType":"VariableDeclaration","scope":2205,"src":"2765:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2122,"nodeType":"UserDefinedTypeName","pathNode":{"id":2121,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"2765:6:13"},"referencedDeclaration":1995,"src":"2765:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"off","nameLocation":"2796:3:13","nodeType":"VariableDeclaration","scope":2205,"src":"2788:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2788:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"data","nameLocation":"2818:4:13","nodeType":"VariableDeclaration","scope":2205,"src":"2805:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"2805:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"len","nameLocation":"2836:3:13","nodeType":"VariableDeclaration","scope":2205,"src":"2828:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2828:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2759:84:13"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"2867:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2132,"nodeType":"UserDefinedTypeName","pathNode":{"id":2131,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"2867:6:13"},"referencedDeclaration":1995,"src":"2867:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"2866:15:13"},"scope":2509,"src":"2745:1210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2228,"nodeType":"Block","src":"4379:55:13","statements":[{"expression":{"arguments":[{"id":2220,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4398:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":2221,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4403:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"4403:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4403:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2224,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"4419:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2225,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"4425:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2219,"name":"write","nodeType":"Identifier","overloadedDeclarations":[2205,2365],"referencedDeclaration":2205,"src":"4392:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4392:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2218,"id":2227,"nodeType":"Return","src":"4385:44:13"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"3959:296:13","text":" @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."},"id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"4267:6:13","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"buf","nameLocation":"4293:3:13","nodeType":"VariableDeclaration","scope":2229,"src":"4279:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2208,"nodeType":"UserDefinedTypeName","pathNode":{"id":2207,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"4279:6:13"},"referencedDeclaration":1995,"src":"4279:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"data","nameLocation":"4315:4:13","nodeType":"VariableDeclaration","scope":2229,"src":"4302:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"4302:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"len","nameLocation":"4333:3:13","nodeType":"VariableDeclaration","scope":2229,"src":"4325:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4325:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4273:67:13"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2229,"src":"4364:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2216,"nodeType":"UserDefinedTypeName","pathNode":{"id":2215,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"4364:6:13"},"referencedDeclaration":1995,"src":"4364:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"4363:15:13"},"scope":2509,"src":"4258:176:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2251,"nodeType":"Block","src":"4784:63:13","statements":[{"expression":{"arguments":[{"id":2242,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4803:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":2243,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4808:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"4808:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4808:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2246,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4824:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":2247,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4830:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4830:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2241,"name":"write","nodeType":"Identifier","overloadedDeclarations":[2205,2365],"referencedDeclaration":2205,"src":"4797:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4797:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2240,"id":2250,"nodeType":"Return","src":"4790:52:13"}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"4438:251:13","text":" @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"4701:6:13","nodeType":"FunctionDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"buf","nameLocation":"4722:3:13","nodeType":"VariableDeclaration","scope":2252,"src":"4708:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2232,"nodeType":"UserDefinedTypeName","pathNode":{"id":2231,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"4708:6:13"},"referencedDeclaration":1995,"src":"4708:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2235,"mutability":"mutable","name":"data","nameLocation":"4740:4:13","nodeType":"VariableDeclaration","scope":2252,"src":"4727:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2234,"name":"bytes","nodeType":"ElementaryTypeName","src":"4727:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4707:38:13"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"4769:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2238,"nodeType":"UserDefinedTypeName","pathNode":{"id":2237,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"4769:6:13"},"referencedDeclaration":1995,"src":"4769:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"4768:15:13"},"scope":2509,"src":"4692:155:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"5266:521:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2266,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"5276:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2267,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5283:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"5283:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5276:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"nodeType":"IfStatement","src":"5272:69:13","trueBody":{"id":2278,"nodeType":"Block","src":"5297:44:13","statements":[{"expression":{"arguments":[{"id":2271,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5312:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2272,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5317:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"5317:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5332:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5317:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2270,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"5305:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5305:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2277,"nodeType":"ExpressionStatement","src":"5305:29:13"}]}},{"AST":{"nodeType":"YulBlock","src":"5356:411:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5407:24:13","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"5427:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5421:5:13"},"nodeType":"YulFunctionCall","src":"5421:10:13"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"5411:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5478:27:13","value":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"5498:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5492:5:13"},"nodeType":"YulFunctionCall","src":"5492:13:13"},"variables":[{"name":"buflen","nodeType":"YulTypedName","src":"5482:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5576:37:13","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"5596:6:13"},{"name":"off","nodeType":"YulIdentifier","src":"5604:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5592:3:13"},"nodeType":"YulFunctionCall","src":"5592:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"5610:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5588:3:13"},"nodeType":"YulFunctionCall","src":"5588:25:13"},"variables":[{"name":"dest","nodeType":"YulTypedName","src":"5580:4:13","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"5628:4:13"},{"name":"data","nodeType":"YulIdentifier","src":"5634:4:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"5620:7:13"},"nodeType":"YulFunctionCall","src":"5620:19:13"},"nodeType":"YulExpressionStatement","src":"5620:19:13"},{"body":{"nodeType":"YulBlock","src":"5713:48:13","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"5730:6:13"},{"arguments":[{"name":"buflen","nodeType":"YulIdentifier","src":"5742:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5750:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5738:3:13"},"nodeType":"YulFunctionCall","src":"5738:14:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5723:6:13"},"nodeType":"YulFunctionCall","src":"5723:30:13"},"nodeType":"YulExpressionStatement","src":"5723:30:13"}]},"condition":{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"5700:3:13"},{"name":"buflen","nodeType":"YulIdentifier","src":"5705:6:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5697:2:13"},"nodeType":"YulFunctionCall","src":"5697:15:13"},"nodeType":"YulIf","src":"5694:67:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2256,"isOffset":false,"isSlot":false,"src":"5427:3:13","valueSize":1},{"declaration":2260,"isOffset":false,"isSlot":false,"src":"5634:4:13","valueSize":1},{"declaration":2258,"isOffset":false,"isSlot":false,"src":"5604:3:13","valueSize":1},{"declaration":2258,"isOffset":false,"isSlot":false,"src":"5700:3:13","valueSize":1}],"id":2280,"nodeType":"InlineAssembly","src":"5347:420:13"},{"expression":{"id":2281,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5779:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2265,"id":2282,"nodeType":"Return","src":"5772:10:13"}]},"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"4851:294:13","text":" @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write the byte at.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"writeUint8","nameLocation":"5157:10:13","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"buf","nameLocation":"5187:3:13","nodeType":"VariableDeclaration","scope":2284,"src":"5173:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2255,"nodeType":"UserDefinedTypeName","pathNode":{"id":2254,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"5173:6:13"},"referencedDeclaration":1995,"src":"5173:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"off","nameLocation":"5204:3:13","nodeType":"VariableDeclaration","scope":2284,"src":"5196:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"5196:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"data","nameLocation":"5219:4:13","nodeType":"VariableDeclaration","scope":2284,"src":"5213:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2259,"name":"uint8","nodeType":"ElementaryTypeName","src":"5213:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5167:60:13"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"5251:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2263,"nodeType":"UserDefinedTypeName","pathNode":{"id":2262,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"5251:6:13"},"referencedDeclaration":1995,"src":"5251:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"5250:15:13"},"scope":2509,"src":"5148:639:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2304,"nodeType":"Block","src":"6130:55:13","statements":[{"expression":{"arguments":[{"id":2297,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"6154:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":2298,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"6159:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"6159:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6159:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2301,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"6175:4:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2296,"name":"writeUint8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"6143:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6143:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2295,"id":2303,"nodeType":"Return","src":"6136:44:13"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"5791:246:13","text":" @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":2305,"implemented":true,"kind":"function","modifiers":[],"name":"appendUint8","nameLocation":"6049:11:13","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"buf","nameLocation":"6075:3:13","nodeType":"VariableDeclaration","scope":2305,"src":"6061:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2287,"nodeType":"UserDefinedTypeName","pathNode":{"id":2286,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"6061:6:13"},"referencedDeclaration":1995,"src":"6061:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"data","nameLocation":"6086:4:13","nodeType":"VariableDeclaration","scope":2305,"src":"6080:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2289,"name":"uint8","nodeType":"ElementaryTypeName","src":"6080:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6060:31:13"},"returnParameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"6115:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2293,"nodeType":"UserDefinedTypeName","pathNode":{"id":2292,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"6115:6:13"},"referencedDeclaration":1995,"src":"6115:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"6114:15:13"},"scope":2509,"src":"6040:145:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"6677:652:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2321,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6687:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2322,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6693:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6687:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2324,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"6699:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"6699:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6687:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2338,"nodeType":"IfStatement","src":"6683:73:13","trueBody":{"id":2337,"nodeType":"Block","src":"6713:43:13","statements":[{"expression":{"arguments":[{"id":2328,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"6728:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2329,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6734:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2330,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6740:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6734:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6733:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6733:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2327,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"6721:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6721:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2336,"nodeType":"ExpressionStatement","src":"6721:28:13"}]}},{"id":2361,"nodeType":"UncheckedBlock","src":"6762:547:13","statements":[{"assignments":[2340],"declarations":[{"constant":false,"id":2340,"mutability":"mutable","name":"mask","nameLocation":"6788:4:13","nodeType":"VariableDeclaration","scope":2361,"src":"6780:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2347,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6796:3:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2342,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6801:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6796:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6795:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6808:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6795:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6780:29:13"},{"expression":{"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2348,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"6843:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"6850:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6859:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6864:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2352,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6869:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6864:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6863:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6859:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6858:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6850:24:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6843:31:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2359,"nodeType":"ExpressionStatement","src":"6843:31:13"},{"AST":{"nodeType":"YulBlock","src":"6891:412:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6946:24:13","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"6966:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6960:5:13"},"nodeType":"YulFunctionCall","src":"6960:10:13"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"6950:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7051:38:13","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"7071:6:13"},{"name":"off","nodeType":"YulIdentifier","src":"7079:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7067:3:13"},"nodeType":"YulFunctionCall","src":"7067:16:13"},{"name":"len","nodeType":"YulIdentifier","src":"7085:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7063:3:13"},"nodeType":"YulFunctionCall","src":"7063:26:13"},"variables":[{"name":"dest","nodeType":"YulTypedName","src":"7055:4:13","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"7105:4:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"7124:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7118:5:13"},"nodeType":"YulFunctionCall","src":"7118:11:13"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"7135:4:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7131:3:13"},"nodeType":"YulFunctionCall","src":"7131:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7114:3:13"},"nodeType":"YulFunctionCall","src":"7114:27:13"},{"name":"data","nodeType":"YulIdentifier","src":"7143:4:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7111:2:13"},"nodeType":"YulFunctionCall","src":"7111:37:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7098:6:13"},"nodeType":"YulFunctionCall","src":"7098:51:13"},"nodeType":"YulExpressionStatement","src":"7098:51:13"},{"body":{"nodeType":"YulBlock","src":"7244:51:13","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"7263:6:13"},{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"7275:3:13"},{"name":"len","nodeType":"YulIdentifier","src":"7280:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7271:3:13"},"nodeType":"YulFunctionCall","src":"7271:13:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7256:6:13"},"nodeType":"YulFunctionCall","src":"7256:29:13"},"nodeType":"YulExpressionStatement","src":"7256:29:13"}]},"condition":{"arguments":[{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"7218:3:13"},{"name":"len","nodeType":"YulIdentifier","src":"7223:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7214:3:13"},"nodeType":"YulFunctionCall","src":"7214:13:13"},{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"7235:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7229:5:13"},"nodeType":"YulFunctionCall","src":"7229:13:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7211:2:13"},"nodeType":"YulFunctionCall","src":"7211:32:13"},"nodeType":"YulIf","src":"7208:87:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2309,"isOffset":false,"isSlot":false,"src":"6966:3:13","valueSize":1},{"declaration":2313,"isOffset":false,"isSlot":false,"src":"7143:4:13","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7085:3:13","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7223:3:13","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7280:3:13","valueSize":1},{"declaration":2340,"isOffset":false,"isSlot":false,"src":"7135:4:13","valueSize":1},{"declaration":2311,"isOffset":false,"isSlot":false,"src":"7079:3:13","valueSize":1},{"declaration":2311,"isOffset":false,"isSlot":false,"src":"7218:3:13","valueSize":1},{"declaration":2311,"isOffset":false,"isSlot":false,"src":"7275:3:13","valueSize":1}],"id":2360,"nodeType":"InlineAssembly","src":"6882:421:13"}]},{"expression":{"id":2362,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"7321:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2320,"id":2363,"nodeType":"Return","src":"7314:10:13"}]},"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"6189:354:13","text":" @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @param len The number of bytes to write (left-aligned).\n @return The original buffer, for chaining."},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"write","nameLocation":"6555:5:13","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"buf","nameLocation":"6580:3:13","nodeType":"VariableDeclaration","scope":2365,"src":"6566:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2308,"nodeType":"UserDefinedTypeName","pathNode":{"id":2307,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"6566:6:13"},"referencedDeclaration":1995,"src":"6566:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"off","nameLocation":"6597:3:13","nodeType":"VariableDeclaration","scope":2365,"src":"6589:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"data","nameLocation":"6614:4:13","nodeType":"VariableDeclaration","scope":2365,"src":"6606:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6606:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"len","nameLocation":"6632:3:13","nodeType":"VariableDeclaration","scope":2365,"src":"6624:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"6624:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6560:79:13"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"6662:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2318,"nodeType":"UserDefinedTypeName","pathNode":{"id":2317,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"6662:6:13"},"referencedDeclaration":1995,"src":"6662:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"6661:15:13"},"scope":2509,"src":"6546:783:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2389,"nodeType":"Block","src":"7746:52:13","statements":[{"expression":{"arguments":[{"id":2380,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7765:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2381,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"7770:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2384,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"7783:4:13","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7775:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7775:7:13","typeDescriptions":{}}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7775:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3230","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7790:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":2379,"name":"write","nodeType":"Identifier","overloadedDeclarations":[2205,2365],"referencedDeclaration":2365,"src":"7759:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes32,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7759:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2378,"id":2388,"nodeType":"Return","src":"7752:41:13"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"7333:288:13","text":" @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":2390,"implemented":true,"kind":"function","modifiers":[],"name":"writeBytes20","nameLocation":"7633:12:13","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"buf","nameLocation":"7665:3:13","nodeType":"VariableDeclaration","scope":2390,"src":"7651:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2368,"nodeType":"UserDefinedTypeName","pathNode":{"id":2367,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"7651:6:13"},"referencedDeclaration":1995,"src":"7651:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"off","nameLocation":"7682:3:13","nodeType":"VariableDeclaration","scope":2390,"src":"7674:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"7674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"data","nameLocation":"7699:4:13","nodeType":"VariableDeclaration","scope":2390,"src":"7691:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":2372,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7691:7:13","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7645:62:13"},"returnParameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2390,"src":"7731:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2376,"nodeType":"UserDefinedTypeName","pathNode":{"id":2375,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"7731:6:13"},"referencedDeclaration":1995,"src":"7731:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"7730:15:13"},"scope":2509,"src":"7624:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2414,"nodeType":"Block","src":"8149:63:13","statements":[{"expression":{"arguments":[{"id":2403,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"8168:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":2404,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"8173:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"8173:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8173:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2409,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"8197:4:13","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8189:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8189:7:13","typeDescriptions":{}}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8189:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3230","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8204:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":2402,"name":"write","nodeType":"Identifier","overloadedDeclarations":[2205,2365],"referencedDeclaration":2365,"src":"8162:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes32,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8162:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2401,"id":2413,"nodeType":"Return","src":"8155:52:13"}]},"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"7802:250:13","text":" @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chhaining."},"id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes20","nameLocation":"8064:13:13","nodeType":"FunctionDefinition","parameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"buf","nameLocation":"8092:3:13","nodeType":"VariableDeclaration","scope":2415,"src":"8078:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2393,"nodeType":"UserDefinedTypeName","pathNode":{"id":2392,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"8078:6:13"},"referencedDeclaration":1995,"src":"8078:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"data","nameLocation":"8105:4:13","nodeType":"VariableDeclaration","scope":2415,"src":"8097:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":2395,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8097:7:13","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"8077:33:13"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2415,"src":"8134:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2399,"nodeType":"UserDefinedTypeName","pathNode":{"id":2398,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"8134:6:13"},"referencedDeclaration":1995,"src":"8134:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"8133:15:13"},"scope":2509,"src":"8055:157:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2436,"nodeType":"Block","src":"8562:54:13","statements":[{"expression":{"arguments":[{"id":2428,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"8581:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":2429,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"8586:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"8586:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8586:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2432,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"8602:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3332","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8608:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2427,"name":"write","nodeType":"Identifier","overloadedDeclarations":[2205,2365],"referencedDeclaration":2365,"src":"8575:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes32,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8575:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2426,"id":2435,"nodeType":"Return","src":"8568:43:13"}]},"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"8216:249:13","text":" @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes32","nameLocation":"8477:13:13","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"buf","nameLocation":"8505:3:13","nodeType":"VariableDeclaration","scope":2437,"src":"8491:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2418,"nodeType":"UserDefinedTypeName","pathNode":{"id":2417,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"8491:6:13"},"referencedDeclaration":1995,"src":"8491:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"data","nameLocation":"8518:4:13","nodeType":"VariableDeclaration","scope":2437,"src":"8510:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8510:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8490:33:13"},"returnParameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2437,"src":"8547:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2424,"nodeType":"UserDefinedTypeName","pathNode":{"id":2423,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"8547:6:13"},"referencedDeclaration":1995,"src":"8547:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"8546:15:13"},"scope":2509,"src":"8468:148:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2483,"nodeType":"Block","src":"9108:541:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2453,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"9118:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2454,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"9124:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9118:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2456,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"9130:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"9130:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9118:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2470,"nodeType":"IfStatement","src":"9114:73:13","trueBody":{"id":2469,"nodeType":"Block","src":"9144:43:13","statements":[{"expression":{"arguments":[{"id":2460,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"9159:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"9165:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2462,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"9171:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9165:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9164:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9164:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2459,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"9152:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9152:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2468,"nodeType":"ExpressionStatement","src":"9152:28:13"}]}},{"assignments":[2472],"declarations":[{"constant":false,"id":2472,"mutability":"mutable","name":"mask","nameLocation":"9201:4:13","nodeType":"VariableDeclaration","scope":2483,"src":"9193:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"9193:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2479,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9209:3:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2474,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"9214:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9209:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9208:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9221:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9208:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9193:29:13"},{"AST":{"nodeType":"YulBlock","src":"9237:392:13","statements":[{"nodeType":"YulVariableDeclaration","src":"9288:24:13","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"9308:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9302:5:13"},"nodeType":"YulFunctionCall","src":"9302:10:13"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"9292:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9389:38:13","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"9409:6:13"},{"name":"off","nodeType":"YulIdentifier","src":"9417:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9405:3:13"},"nodeType":"YulFunctionCall","src":"9405:16:13"},{"name":"len","nodeType":"YulIdentifier","src":"9423:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9401:3:13"},"nodeType":"YulFunctionCall","src":"9401:26:13"},"variables":[{"name":"dest","nodeType":"YulTypedName","src":"9393:4:13","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"9441:4:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"9460:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9454:5:13"},"nodeType":"YulFunctionCall","src":"9454:11:13"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"9471:4:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9467:3:13"},"nodeType":"YulFunctionCall","src":"9467:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9450:3:13"},"nodeType":"YulFunctionCall","src":"9450:27:13"},{"name":"data","nodeType":"YulIdentifier","src":"9479:4:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9447:2:13"},"nodeType":"YulFunctionCall","src":"9447:37:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9434:6:13"},"nodeType":"YulFunctionCall","src":"9434:51:13"},"nodeType":"YulExpressionStatement","src":"9434:51:13"},{"body":{"nodeType":"YulBlock","src":"9576:47:13","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"9593:6:13"},{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"9605:3:13"},{"name":"len","nodeType":"YulIdentifier","src":"9610:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:13"},"nodeType":"YulFunctionCall","src":"9601:13:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9586:6:13"},"nodeType":"YulFunctionCall","src":"9586:29:13"},"nodeType":"YulExpressionStatement","src":"9586:29:13"}]},"condition":{"arguments":[{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"9550:3:13"},{"name":"len","nodeType":"YulIdentifier","src":"9555:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9546:3:13"},"nodeType":"YulFunctionCall","src":"9546:13:13"},{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"9567:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9561:5:13"},"nodeType":"YulFunctionCall","src":"9561:13:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9543:2:13"},"nodeType":"YulFunctionCall","src":"9543:32:13"},"nodeType":"YulIf","src":"9540:83:13"}]},"evmVersion":"london","externalReferences":[{"declaration":2441,"isOffset":false,"isSlot":false,"src":"9308:3:13","valueSize":1},{"declaration":2445,"isOffset":false,"isSlot":false,"src":"9479:4:13","valueSize":1},{"declaration":2447,"isOffset":false,"isSlot":false,"src":"9423:3:13","valueSize":1},{"declaration":2447,"isOffset":false,"isSlot":false,"src":"9555:3:13","valueSize":1},{"declaration":2447,"isOffset":false,"isSlot":false,"src":"9610:3:13","valueSize":1},{"declaration":2472,"isOffset":false,"isSlot":false,"src":"9471:4:13","valueSize":1},{"declaration":2443,"isOffset":false,"isSlot":false,"src":"9417:3:13","valueSize":1},{"declaration":2443,"isOffset":false,"isSlot":false,"src":"9550:3:13","valueSize":1},{"declaration":2443,"isOffset":false,"isSlot":false,"src":"9605:3:13","valueSize":1}],"id":2480,"nodeType":"InlineAssembly","src":"9228:401:13"},{"expression":{"id":2481,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"9641:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2452,"id":2482,"nodeType":"Return","src":"9634:10:13"}]},"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"8620:351:13","text":" @dev Writes an integer to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @param len The number of bytes to write (right-aligned).\n @return The original buffer, for chaining."},"id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"writeInt","nameLocation":"8983:8:13","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"buf","nameLocation":"9011:3:13","nodeType":"VariableDeclaration","scope":2484,"src":"8997:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2440,"nodeType":"UserDefinedTypeName","pathNode":{"id":2439,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"8997:6:13"},"referencedDeclaration":1995,"src":"8997:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"off","nameLocation":"9028:3:13","nodeType":"VariableDeclaration","scope":2484,"src":"9020:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"9020:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"data","nameLocation":"9045:4:13","nodeType":"VariableDeclaration","scope":2484,"src":"9037:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"9037:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"len","nameLocation":"9063:3:13","nodeType":"VariableDeclaration","scope":2484,"src":"9055:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"9055:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8991:79:13"},"returnParameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"9093:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2450,"nodeType":"UserDefinedTypeName","pathNode":{"id":2449,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"9093:6:13"},"referencedDeclaration":1995,"src":"9093:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"9092:15:13"},"scope":2509,"src":"8974:675:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2507,"nodeType":"Block","src":"10013:58:13","statements":[{"expression":{"arguments":[{"id":2499,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"10035:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":2500,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"10040:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"10040:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10040:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2503,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"10056:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2504,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"10062:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2498,"name":"writeInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"10026:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10026:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":2497,"id":2506,"nodeType":"Return","src":"10019:47:13"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"9653:238:13","text":" @dev Appends a byte to the end of the buffer. Resizes if doing so would\n exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer."},"id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"appendInt","nameLocation":"9903:9:13","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"buf","nameLocation":"9932:3:13","nodeType":"VariableDeclaration","scope":2508,"src":"9918:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2487,"nodeType":"UserDefinedTypeName","pathNode":{"id":2486,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"9918:6:13"},"referencedDeclaration":1995,"src":"9918:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2490,"mutability":"mutable","name":"data","nameLocation":"9949:4:13","nodeType":"VariableDeclaration","scope":2508,"src":"9941:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"9941:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2492,"mutability":"mutable","name":"len","nameLocation":"9967:3:13","nodeType":"VariableDeclaration","scope":2508,"src":"9959:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9959:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9912:62:13"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2508,"src":"9998:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2495,"nodeType":"UserDefinedTypeName","pathNode":{"id":2494,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"9998:6:13"},"referencedDeclaration":1995,"src":"9998:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"9997:15:13"},"scope":2509,"src":"9894:177:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2510,"src":"441:9632:13","usedErrors":[]}],"src":"32:10042:13"},"id":13},"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol","exportedSymbols":{"BufferChainlink":[2509],"CBORChainlink":[2956]},"id":2957,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2511,"literals":["solidity",">=","0.4",".19"],"nodeType":"PragmaDirective","src":"32:25:14"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol","file":"./BufferChainlink.sol","id":2513,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2957,"sourceUnit":2510,"src":"59:54:14","symbolAliases":[{"foreign":{"id":2512,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"src":"67:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2956,"linearizedBaseContracts":[2956],"name":"CBORChainlink","nameLocation":"123:13:14","nodeType":"ContractDefinition","nodes":[{"id":2517,"libraryName":{"id":2514,"name":"BufferChainlink","nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"147:15:14"},"nodeType":"UsingForDirective","src":"141:49:14","typeName":{"id":2516,"nodeType":"UserDefinedTypeName","pathNode":{"id":2515,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"167:22:14"},"referencedDeclaration":1995,"src":"167:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}}},{"constant":true,"id":2520,"mutability":"constant","name":"MAJOR_TYPE_INT","nameLocation":"217:14:14","nodeType":"VariableDeclaration","scope":2956,"src":"194:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2518,"name":"uint8","nodeType":"ElementaryTypeName","src":"194:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":2523,"mutability":"constant","name":"MAJOR_TYPE_NEGATIVE_INT","nameLocation":"262:23:14","nodeType":"VariableDeclaration","scope":2956,"src":"239:50:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2521,"name":"uint8","nodeType":"ElementaryTypeName","src":"239:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2526,"mutability":"constant","name":"MAJOR_TYPE_BYTES","nameLocation":"316:16:14","nodeType":"VariableDeclaration","scope":2956,"src":"293:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2524,"name":"uint8","nodeType":"ElementaryTypeName","src":"293:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"335:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":2529,"mutability":"constant","name":"MAJOR_TYPE_STRING","nameLocation":"363:17:14","nodeType":"VariableDeclaration","scope":2956,"src":"340:44:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2527,"name":"uint8","nodeType":"ElementaryTypeName","src":"340:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"383:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":2532,"mutability":"constant","name":"MAJOR_TYPE_ARRAY","nameLocation":"411:16:14","nodeType":"VariableDeclaration","scope":2956,"src":"388:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2530,"name":"uint8","nodeType":"ElementaryTypeName","src":"388:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"34","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"430:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"private"},{"constant":true,"id":2535,"mutability":"constant","name":"MAJOR_TYPE_MAP","nameLocation":"458:14:14","nodeType":"VariableDeclaration","scope":2956,"src":"435:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2533,"name":"uint8","nodeType":"ElementaryTypeName","src":"435:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"35","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"475:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"private"},{"constant":true,"id":2538,"mutability":"constant","name":"MAJOR_TYPE_TAG","nameLocation":"503:14:14","nodeType":"VariableDeclaration","scope":2956,"src":"480:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2536,"name":"uint8","nodeType":"ElementaryTypeName","src":"480:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"520:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"private"},{"constant":true,"id":2541,"mutability":"constant","name":"MAJOR_TYPE_CONTENT_FREE","nameLocation":"548:23:14","nodeType":"VariableDeclaration","scope":2956,"src":"525:50:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2539,"name":"uint8","nodeType":"ElementaryTypeName","src":"525:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"37","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"574:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"private"},{"constant":true,"id":2544,"mutability":"constant","name":"TAG_TYPE_BIGNUM","nameLocation":"603:15:14","nodeType":"VariableDeclaration","scope":2956,"src":"580:42:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2542,"name":"uint8","nodeType":"ElementaryTypeName","src":"580:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"621:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":2547,"mutability":"constant","name":"TAG_TYPE_NEGATIVE_BIGNUM","nameLocation":"649:24:14","nodeType":"VariableDeclaration","scope":2956,"src":"626:51:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2545,"name":"uint8","nodeType":"ElementaryTypeName","src":"626:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"676:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"body":{"id":2676,"nodeType":"Block","src":"785:522:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"794:5:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3233","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"803:2:14","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"src":"794:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"876:5:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"885:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"876:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"988:5:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307846464646","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"997:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xFFFF"},"src":"988:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"1102:5:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646464646464646","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xFFFFFFFF"},"src":"1102:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2671,"nodeType":"Block","src":"1216:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2655,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"1247:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1256:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1247:10:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1246:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3237","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1261:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"1246:17:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1240:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2653,"name":"uint8","nodeType":"ElementaryTypeName","src":"1240:5:14","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2650,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"1224:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"1224:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1224:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2663,"nodeType":"ExpressionStatement","src":"1224:41:14"},{"expression":{"arguments":[{"id":2667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"1287:5:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"38","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1294:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"expression":{"id":2664,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"1273:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":2508,"src":"1273:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1273:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2670,"nodeType":"ExpressionStatement","src":"1273:23:14"}]},"id":2672,"nodeType":"IfStatement","src":"1098:205:14","trueBody":{"id":2649,"nodeType":"Block","src":"1123:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2633,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"1154:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1163:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1154:10:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1153:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3236","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1168:2:14","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"26"},"src":"1153:17:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1147:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2631,"name":"uint8","nodeType":"ElementaryTypeName","src":"1147:5:14","typeDescriptions":{}}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1147:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2628,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"1131:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"1131:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2641,"nodeType":"ExpressionStatement","src":"1131:41:14"},{"expression":{"arguments":[{"id":2645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"1194:5:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"34","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1201:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"expression":{"id":2642,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"1180:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":2508,"src":"1180:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1180:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2648,"nodeType":"ExpressionStatement","src":"1180:23:14"}]}},"id":2673,"nodeType":"IfStatement","src":"984:319:14","trueBody":{"id":2624,"nodeType":"Block","src":"1005:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2608,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"1036:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1036:10:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1035:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3235","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:2:14","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"1035:17:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1029:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2606,"name":"uint8","nodeType":"ElementaryTypeName","src":"1029:5:14","typeDescriptions":{}}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1029:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2603,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"1013:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"1013:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1013:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2616,"nodeType":"ExpressionStatement","src":"1013:41:14"},{"expression":{"arguments":[{"id":2620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"1076:5:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"32","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1083:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"id":2617,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"1062:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":2508,"src":"1062:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1062:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2623,"nodeType":"ExpressionStatement","src":"1062:23:14"}]}},"id":2674,"nodeType":"IfStatement","src":"872:431:14","trueBody":{"id":2599,"nodeType":"Block","src":"891:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"922:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"922:10:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"921:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3234","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"921:17:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2581,"name":"uint8","nodeType":"ElementaryTypeName","src":"915:5:14","typeDescriptions":{}}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2578,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"899:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"899:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"899:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2591,"nodeType":"ExpressionStatement","src":"899:41:14"},{"expression":{"arguments":[{"id":2595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"962:5:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"31","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2592,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"948:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":2508,"src":"948:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"948:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2598,"nodeType":"ExpressionStatement","src":"948:23:14"}]}},"id":2675,"nodeType":"IfStatement","src":"791:512:14","trueBody":{"id":2574,"nodeType":"Block","src":"807:59:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"838:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"847:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"838:10:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"837:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"852:5:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"837:20:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"831:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2563,"name":"uint8","nodeType":"ElementaryTypeName","src":"831:5:14","typeDescriptions":{}}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"831:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2560,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"815:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"815:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"815:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2573,"nodeType":"ExpressionStatement","src":"815:44:14"}]}}]},"id":2677,"implemented":true,"kind":"function","modifiers":[],"name":"encodeFixedNumeric","nameLocation":"691:18:14","nodeType":"FunctionDefinition","parameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"buf","nameLocation":"740:3:14","nodeType":"VariableDeclaration","scope":2677,"src":"710:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2549,"nodeType":"UserDefinedTypeName","pathNode":{"id":2548,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"710:22:14"},"referencedDeclaration":1995,"src":"710:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"major","nameLocation":"751:5:14","nodeType":"VariableDeclaration","scope":2677,"src":"745:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2551,"name":"uint8","nodeType":"ElementaryTypeName","src":"745:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2554,"mutability":"mutable","name":"value","nameLocation":"765:5:14","nodeType":"VariableDeclaration","scope":2677,"src":"758:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2553,"name":"uint64","nodeType":"ElementaryTypeName","src":"758:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"709:62:14"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[],"src":"785:0:14"},"scope":2956,"src":"682:625:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2699,"nodeType":"Block","src":"1408:52:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"1437:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1446:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1437:10:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1436:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3331","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1451:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1436:17:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1430:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2688,"name":"uint8","nodeType":"ElementaryTypeName","src":"1430:5:14","typeDescriptions":{}}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1430:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2685,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1414:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"1414:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2698,"nodeType":"ExpressionStatement","src":"1414:41:14"}]},"id":2700,"implemented":true,"kind":"function","modifiers":[],"name":"encodeIndefiniteLengthType","nameLocation":"1320:26:14","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"buf","nameLocation":"1377:3:14","nodeType":"VariableDeclaration","scope":2700,"src":"1347:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2679,"nodeType":"UserDefinedTypeName","pathNode":{"id":2678,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"1347:22:14"},"referencedDeclaration":1995,"src":"1347:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"major","nameLocation":"1388:5:14","nodeType":"VariableDeclaration","scope":2700,"src":"1382:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2681,"name":"uint8","nodeType":"ElementaryTypeName","src":"1382:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1346:48:14"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[],"src":"1408:0:14"},"scope":2956,"src":"1311:149:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2728,"nodeType":"Block","src":"1545:155:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1554:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307846464646464646464646464646464646","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xFFFFFFFFFFFFFFFF"},"src":"1554:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2726,"nodeType":"Block","src":"1627:69:14","statements":[{"expression":{"arguments":[{"id":2718,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"1654:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2719,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"1659:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":2722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1682:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1675:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2720,"name":"uint64","nodeType":"ElementaryTypeName","src":"1675:6:14","typeDescriptions":{}}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1675:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2717,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"1635:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2725,"nodeType":"ExpressionStatement","src":"1635:54:14"}]},"id":2727,"nodeType":"IfStatement","src":"1551:145:14","trueBody":{"id":2716,"nodeType":"Block","src":"1582:39:14","statements":[{"expression":{"arguments":[{"id":2712,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"1603:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1608:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2711,"name":"encodeBigNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"1590:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1590:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2715,"nodeType":"ExpressionStatement","src":"1590:24:14"}]}}]},"id":2729,"implemented":true,"kind":"function","modifiers":[],"name":"encodeUInt","nameLocation":"1473:10:14","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"buf","nameLocation":"1514:3:14","nodeType":"VariableDeclaration","scope":2729,"src":"1484:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2702,"nodeType":"UserDefinedTypeName","pathNode":{"id":2701,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"1484:22:14"},"referencedDeclaration":1995,"src":"1484:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"value","nameLocation":"1524:5:14","nodeType":"VariableDeclaration","scope":2729,"src":"1519:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint","nodeType":"ElementaryTypeName","src":"1519:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1483:47:14"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[],"src":"1545:0:14"},"scope":2956,"src":"1464:236:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2794,"nodeType":"Block","src":"1783:367:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"1792:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1800:20:14","subExpression":{"hexValue":"30783130303030303030303030303030303030","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1801:19:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"value":"0x10000000000000000"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_18446744073709551616_by_1","typeString":"int_const -18446744073709551616"}},"src":"1792:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"1876:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307846464646464646464646464646464646","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xFFFFFFFFFFFFFFFF"},"src":"1876:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"1958:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1967:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1958:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2790,"nodeType":"Block","src":"2054:92:14","statements":[{"expression":{"arguments":[{"id":2776,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"2081:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2777,"name":"MAJOR_TYPE_NEGATIVE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"2086:23:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2126:2:14","subExpression":{"hexValue":"31","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2127:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"2131:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2126:10:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2118:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:14","typeDescriptions":{}}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2118:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2111:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2778,"name":"uint64","nodeType":"ElementaryTypeName","src":"2111:6:14","typeDescriptions":{}}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2111:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2775,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2062:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2062:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2789,"nodeType":"ExpressionStatement","src":"2062:77:14"}]},"id":2791,"nodeType":"IfStatement","src":"1955:191:14","trueBody":{"id":2774,"nodeType":"Block","src":"1970:78:14","statements":[{"expression":{"arguments":[{"id":2763,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"1997:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2764,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"2002:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"arguments":[{"id":2769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"2033:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2025:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2025:7:14","typeDescriptions":{}}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2025:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2765,"name":"uint64","nodeType":"ElementaryTypeName","src":"2018:6:14","typeDescriptions":{}}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2762,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"1978:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1978:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2773,"nodeType":"ExpressionStatement","src":"1978:63:14"}]}},"id":2792,"nodeType":"IfStatement","src":"1873:273:14","trueBody":{"id":2758,"nodeType":"Block","src":"1904:45:14","statements":[{"expression":{"arguments":[{"id":2751,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"1925:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"arguments":[{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"1935:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2752,"name":"uint","nodeType":"ElementaryTypeName","src":"1930:4:14","typeDescriptions":{}}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1930:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2750,"name":"encodeBigNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"1912:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1912:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"ExpressionStatement","src":"1912:30:14"}]}},"id":2793,"nodeType":"IfStatement","src":"1789:357:14","trueBody":{"id":2746,"nodeType":"Block","src":"1822:45:14","statements":[{"expression":{"arguments":[{"id":2742,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"1849:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"1854:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2741,"name":"encodeSignedBigNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1830:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_int256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,int256) pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1830:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2745,"nodeType":"ExpressionStatement","src":"1830:30:14"}]}}]},"id":2795,"implemented":true,"kind":"function","modifiers":[],"name":"encodeInt","nameLocation":"1713:9:14","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"buf","nameLocation":"1753:3:14","nodeType":"VariableDeclaration","scope":2795,"src":"1723:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2731,"nodeType":"UserDefinedTypeName","pathNode":{"id":2730,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"1723:22:14"},"referencedDeclaration":1995,"src":"1723:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"value","nameLocation":"1762:5:14","nodeType":"VariableDeclaration","scope":2795,"src":"1758:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2733,"name":"int","nodeType":"ElementaryTypeName","src":"1758:3:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1722:46:14"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[],"src":"1783:0:14"},"scope":2956,"src":"1704:446:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2819,"nodeType":"Block","src":"2244:97:14","statements":[{"expression":{"arguments":[{"id":2804,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2269:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2805,"name":"MAJOR_TYPE_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"2274:16:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"id":2808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"2299:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2299:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2292:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2806,"name":"uint64","nodeType":"ElementaryTypeName","src":"2292:6:14","typeDescriptions":{}}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2292:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2803,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2250:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2250:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2812,"nodeType":"ExpressionStatement","src":"2250:63:14"},{"expression":{"arguments":[{"id":2816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"2330:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2813,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2319:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"append","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"2319:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure returns (struct BufferChainlink.buffer memory)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2319:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2818,"nodeType":"ExpressionStatement","src":"2319:17:14"}]},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"encodeBytes","nameLocation":"2163:11:14","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"buf","nameLocation":"2205:3:14","nodeType":"VariableDeclaration","scope":2820,"src":"2175:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2797,"nodeType":"UserDefinedTypeName","pathNode":{"id":2796,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"2175:22:14"},"referencedDeclaration":1995,"src":"2175:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"value","nameLocation":"2223:5:14","nodeType":"VariableDeclaration","scope":2820,"src":"2210:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2799,"name":"bytes","nodeType":"ElementaryTypeName","src":"2210:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2174:55:14"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[],"src":"2244:0:14"},"scope":2956,"src":"2154:187:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2850,"nodeType":"Block","src":"2428:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2833,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"2457:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2475:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2457:19:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2456:21:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2837,"name":"TAG_TYPE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2480:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2456:39:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2450:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2831,"name":"uint8","nodeType":"ElementaryTypeName","src":"2450:5:14","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2450:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2828,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"2434:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"2434:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2434:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2841,"nodeType":"ExpressionStatement","src":"2434:63:14"},{"expression":{"arguments":[{"id":2843,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"2515:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"arguments":[{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"2531:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2844,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2520:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2520:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2520:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2842,"name":"encodeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"2503:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2503:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2849,"nodeType":"ExpressionStatement","src":"2503:35:14"}]},"id":2851,"implemented":true,"kind":"function","modifiers":[],"name":"encodeBigNum","nameLocation":"2354:12:14","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"buf","nameLocation":"2397:3:14","nodeType":"VariableDeclaration","scope":2851,"src":"2367:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2822,"nodeType":"UserDefinedTypeName","pathNode":{"id":2821,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"2367:22:14"},"referencedDeclaration":1995,"src":"2367:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"value","nameLocation":"2407:5:14","nodeType":"VariableDeclaration","scope":2851,"src":"2402:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint","nodeType":"ElementaryTypeName","src":"2402:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2366:47:14"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[],"src":"2428:0:14"},"scope":2956,"src":"2345:198:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2887,"nodeType":"Block","src":"2635:138:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2864,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"2664:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2682:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2664:19:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2663:21:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2868,"name":"TAG_TYPE_NEGATIVE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2687:24:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2663:48:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2657:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2862,"name":"uint8","nodeType":"ElementaryTypeName","src":"2657:5:14","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2657:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2859,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"2641:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"2641:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2641:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2872,"nodeType":"ExpressionStatement","src":"2641:72:14"},{"expression":{"arguments":[{"id":2874,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"2731:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2755:2:14","subExpression":{"hexValue":"31","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2756:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2881,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2760:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2755:10:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"2747:7:14","typeDescriptions":{}}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2747:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2875,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2736:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2736:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2873,"name":"encodeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"2719:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2719:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2886,"nodeType":"ExpressionStatement","src":"2719:49:14"}]},"id":2888,"implemented":true,"kind":"function","modifiers":[],"name":"encodeSignedBigNum","nameLocation":"2556:18:14","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"buf","nameLocation":"2605:3:14","nodeType":"VariableDeclaration","scope":2888,"src":"2575:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2853,"nodeType":"UserDefinedTypeName","pathNode":{"id":2852,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"2575:22:14"},"referencedDeclaration":1995,"src":"2575:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"input","nameLocation":"2614:5:14","nodeType":"VariableDeclaration","scope":2888,"src":"2610:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2855,"name":"int","nodeType":"ElementaryTypeName","src":"2610:3:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2574:46:14"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[],"src":"2635:0:14"},"scope":2956,"src":"2547:226:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2918,"nodeType":"Block","src":"2869:112:14","statements":[{"expression":{"arguments":[{"id":2897,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2894:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2898,"name":"MAJOR_TYPE_STRING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"2899:17:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"arguments":[{"id":2903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2931:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2925:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2901,"name":"bytes","nodeType":"ElementaryTypeName","src":"2925:5:14","typeDescriptions":{}}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2925:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2925:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2918:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2899,"name":"uint64","nodeType":"ElementaryTypeName","src":"2918:6:14","typeDescriptions":{}}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2918:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2896,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2875:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2875:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2908,"nodeType":"ExpressionStatement","src":"2875:71:14"},{"expression":{"arguments":[{"arguments":[{"id":2914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2969:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2963:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2912,"name":"bytes","nodeType":"ElementaryTypeName","src":"2963:5:14","typeDescriptions":{}}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2963:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2909,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2952:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"append","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"2952:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1995_memory_ptr_$bound_to$_t_struct$_buffer_$1995_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure returns (struct BufferChainlink.buffer memory)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2917,"nodeType":"ExpressionStatement","src":"2952:24:14"}]},"id":2919,"implemented":true,"kind":"function","modifiers":[],"name":"encodeString","nameLocation":"2786:12:14","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"buf","nameLocation":"2829:3:14","nodeType":"VariableDeclaration","scope":2919,"src":"2799:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2890,"nodeType":"UserDefinedTypeName","pathNode":{"id":2889,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"2799:22:14"},"referencedDeclaration":1995,"src":"2799:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"value","nameLocation":"2848:5:14","nodeType":"VariableDeclaration","scope":2919,"src":"2834:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2892,"name":"string","nodeType":"ElementaryTypeName","src":"2834:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2798:56:14"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[],"src":"2869:0:14"},"scope":2956,"src":"2777:204:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2930,"nodeType":"Block","src":"3054:60:14","statements":[{"expression":{"arguments":[{"id":2926,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"3087:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2927,"name":"MAJOR_TYPE_ARRAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"3092:16:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2925,"name":"encodeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3060:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3060:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"ExpressionStatement","src":"3060:49:14"}]},"id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"startArray","nameLocation":"2994:10:14","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"buf","nameLocation":"3035:3:14","nodeType":"VariableDeclaration","scope":2931,"src":"3005:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2921,"nodeType":"UserDefinedTypeName","pathNode":{"id":2920,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"3005:22:14"},"referencedDeclaration":1995,"src":"3005:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"3004:35:14"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[],"src":"3054:0:14"},"scope":2956,"src":"2985:129:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2942,"nodeType":"Block","src":"3185:58:14","statements":[{"expression":{"arguments":[{"id":2938,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"3218:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2939,"name":"MAJOR_TYPE_MAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"3223:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2937,"name":"encodeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3191:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3191:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2941,"nodeType":"ExpressionStatement","src":"3191:47:14"}]},"id":2943,"implemented":true,"kind":"function","modifiers":[],"name":"startMap","nameLocation":"3127:8:14","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"buf","nameLocation":"3166:3:14","nodeType":"VariableDeclaration","scope":2943,"src":"3136:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2933,"nodeType":"UserDefinedTypeName","pathNode":{"id":2932,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"3136:22:14"},"referencedDeclaration":1995,"src":"3136:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"3135:35:14"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[],"src":"3185:0:14"},"scope":2956,"src":"3118:125:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"3317:67:14","statements":[{"expression":{"arguments":[{"id":2950,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"3350:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2951,"name":"MAJOR_TYPE_CONTENT_FREE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"3355:23:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2949,"name":"encodeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3323:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1995_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3323:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2953,"nodeType":"ExpressionStatement","src":"3323:56:14"}]},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"endSequence","nameLocation":"3256:11:14","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"buf","nameLocation":"3298:3:14","nodeType":"VariableDeclaration","scope":2955,"src":"3268:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2945,"nodeType":"UserDefinedTypeName","pathNode":{"id":2944,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1995,"src":"3268:22:14"},"referencedDeclaration":1995,"src":"3268:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1995_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"3267:35:14"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[],"src":"3317:0:14"},"scope":2956,"src":"3247:137:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2957,"src":"115:3271:14","usedErrors":[]}],"src":"32:3355:14"},"id":14},"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol","exportedSymbols":{"ENSResolver":[2966]},"id":2967,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2958,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:15"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":2966,"linearizedBaseContracts":[2966],"name":"ENSResolver","nameLocation":"75:11:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3b3b57de","id":2965,"implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"100:4:15","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"node","nameLocation":"113:4:15","nodeType":"VariableDeclaration","scope":2965,"src":"105:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"105:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104:14:15"},"returnParameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2965,"src":"148:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"148:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"147:9:15"},"scope":2966,"src":"91:66:15","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2967,"src":"57:102:15","usedErrors":[]}],"src":"32:128:15"},"id":15},"contracts/APIConsumer.sol":{"ast":{"absolutePath":"contracts/APIConsumer.sol","exportedSymbols":{"APIConsumer":[3111],"BufferChainlink":[2509],"CBORChainlink":[2956],"Chainlink":[268],"ChainlinkClient":[861],"ChainlinkRequestInterface":[998],"ENSInterface":[1078],"ENSResolver_Chainlink":[2966],"LinkTokenInterface":[1192],"OperatorInterface":[1272],"OracleInterface":[1311],"PointerInterface":[1319]},"id":3112,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2968,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:16"},{"absolutePath":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol","file":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol","id":2969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3112,"sourceUnit":862,"src":"57:59:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2971,"name":"ChainlinkClient","nodeType":"IdentifierPath","referencedDeclaration":861,"src":"288:15:16"},"id":2972,"nodeType":"InheritanceSpecifier","src":"288:15:16"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2970,"nodeType":"StructuredDocumentation","src":"118:145:16","text":" @title The APIConsumer contract\n @notice An API Consumer contract that makes GET requests to obtain 24h trading volume of ETH in USD"},"fullyImplemented":true,"id":3111,"linearizedBaseContracts":[3111,861],"name":"APIConsumer","nameLocation":"273:11:16","nodeType":"ContractDefinition","nodes":[{"id":2976,"libraryName":{"id":2973,"name":"Chainlink","nodeType":"IdentifierPath","referencedDeclaration":268,"src":"316:9:16"},"nodeType":"UsingForDirective","src":"310:38:16","typeName":{"id":2975,"nodeType":"UserDefinedTypeName","pathNode":{"id":2974,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"330:17:16"},"referencedDeclaration":25,"src":"330:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}}},{"constant":false,"functionSelector":"c618a1e4","id":2978,"mutability":"mutable","name":"volume","nameLocation":"369:6:16","nodeType":"VariableDeclaration","scope":3111,"src":"354:21:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":2980,"mutability":"immutable","name":"oracle","nameLocation":"407:6:16","nodeType":"VariableDeclaration","scope":3111,"src":"381:32:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2979,"name":"address","nodeType":"ElementaryTypeName","src":"381:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2982,"mutability":"immutable","name":"jobId","nameLocation":"445:5:16","nodeType":"VariableDeclaration","scope":3111,"src":"419:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"419:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2984,"mutability":"immutable","name":"fee","nameLocation":"482:3:16","nodeType":"VariableDeclaration","scope":3111,"src":"456:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"id":2988,"name":"DataFullfilled","nameLocation":"498:14:16","nodeType":"EventDefinition","parameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2986,"indexed":false,"mutability":"mutable","name":"volume","nameLocation":"521:6:16","nodeType":"VariableDeclaration","scope":2988,"src":"513:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"512:16:16"},"src":"492:37:16"},{"body":{"id":3028,"nodeType":"Block","src":"1267:216:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3000,"name":"_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1281:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1298:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1290:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3001,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:16","typeDescriptions":{}}},"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1290:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1281:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3014,"nodeType":"Block","src":"1358:49:16","statements":[{"expression":{"arguments":[{"id":3011,"name":"_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1390:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3010,"name":"setChainlinkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"1372:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1372:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3013,"nodeType":"ExpressionStatement","src":"1372:24:16"}]},"id":3015,"nodeType":"IfStatement","src":"1277:130:16","trueBody":{"id":3009,"nodeType":"Block","src":"1302:50:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3006,"name":"setPublicChainlinkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"1316:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1316:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3008,"nodeType":"ExpressionStatement","src":"1316:25:16"}]}},{"expression":{"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3016,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"1416:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3017,"name":"_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"1425:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1416:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3019,"nodeType":"ExpressionStatement","src":"1416:16:16"},{"expression":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3020,"name":"jobId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"1442:5:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3021,"name":"_jobId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"1450:6:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1442:14:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3023,"nodeType":"ExpressionStatement","src":"1442:14:16"},{"expression":{"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3024,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"1466:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3025,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"1472:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1466:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3027,"nodeType":"ExpressionStatement","src":"1466:10:16"}]},"documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"535:615:16","text":" @notice Executes once when a contract is created to initialize state variables\n @param _oracle - address of the specific Chainlink node that a contract makes an API call from\n @param _jobId - specific job for :_oracle: to run; each job is unique and returns different types of data\n @param _fee - node operator price per API call / data request\n @param _link - LINK token address on the corresponding network\n Network: Goerli\n Oracle: 0xCC79157eb46F5624204f47AB42b3906cAA40eaB7\n Job ID: ca98366cc7314957b8c012c72f05aeeb\n Fee: 0.1 LINK"},"id":3029,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"_oracle","nameLocation":"1184:7:16","nodeType":"VariableDeclaration","scope":3029,"src":"1176:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"_jobId","nameLocation":"1209:6:16","nodeType":"VariableDeclaration","scope":3029,"src":"1201:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1201:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"_fee","nameLocation":"1233:4:16","nodeType":"VariableDeclaration","scope":3029,"src":"1225:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1225:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"_link","nameLocation":"1255:5:16","nodeType":"VariableDeclaration","scope":3029,"src":"1247:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2996,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1166:100:16"},"returnParameters":{"id":2999,"nodeType":"ParameterList","parameters":[],"src":"1267:0:16"},"scope":3111,"src":"1155:328:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3084,"nodeType":"Block","src":"1794:1114:16","statements":[{"assignments":[3039],"declarations":[{"constant":false,"id":3039,"mutability":"mutable","name":"request","nameLocation":"1829:7:16","nodeType":"VariableDeclaration","scope":3084,"src":"1804:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":3038,"nodeType":"UserDefinedTypeName","pathNode":{"id":3037,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1804:17:16"},"referencedDeclaration":25,"src":"1804:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"id":3050,"initialValue":{"arguments":[{"id":3041,"name":"jobId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"1874:5:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3044,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1901:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_APIConsumer_$3111","typeString":"contract APIConsumer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_APIConsumer_$3111","typeString":"contract APIConsumer"}],"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1893:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3042,"name":"address","nodeType":"ElementaryTypeName","src":"1893:7:16","typeDescriptions":{}}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1893:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":3046,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1920:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_APIConsumer_$3111","typeString":"contract APIConsumer"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fulfill","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"1920:12:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256) external"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1920:21:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3040,"name":"buildChainlinkRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"1839:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1839:112:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"nodeType":"VariableDeclarationStatement","src":"1804:147:16"},{"expression":{"arguments":[{"hexValue":"676574","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2040:5:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27","typeString":"literal_string \"get\""},"value":"get"},{"hexValue":"68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2059:75:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3fa6b402eb4c49347f9ac6c8c8e0baf0eacaf39bcd59583feb12d9b90720124","typeString":"literal_string \"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD\""},"value":"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27","typeString":"literal_string \"get\""},{"typeIdentifier":"t_stringliteral_f3fa6b402eb4c49347f9ac6c8c8e0baf0eacaf39bcd59583feb12d9b90720124","typeString":"literal_string \"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD\""}],"expression":{"id":3051,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"2015:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":3053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":125,"src":"2015:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (struct Chainlink.Request memory,string memory,string memory) pure"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2015:129:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3057,"nodeType":"ExpressionStatement","src":"2015:129:16"},{"expression":{"arguments":[{"hexValue":"70617468","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2563:6:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd","typeString":"literal_string \"path\""},"value":"path"},{"hexValue":"5241572c4554482c5553442c564f4c554d453234484f5552","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2571:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_891202268f319b45c61f46765366374ac39ed448a294722b9dd84ce217a38e1c","typeString":"literal_string \"RAW,ETH,USD,VOLUME24HOUR\""},"value":"RAW,ETH,USD,VOLUME24HOUR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd","typeString":"literal_string \"path\""},{"typeIdentifier":"t_stringliteral_891202268f319b45c61f46765366374ac39ed448a294722b9dd84ce217a38e1c","typeString":"literal_string \"RAW,ETH,USD,VOLUME24HOUR\""}],"expression":{"id":3058,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"2551:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":3060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":125,"src":"2551:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (struct Chainlink.Request memory,string memory,string memory) pure"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2551:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3064,"nodeType":"ExpressionStatement","src":"2551:47:16"},{"assignments":[3066],"declarations":[{"constant":false,"id":3066,"mutability":"mutable","name":"timesAmount","nameLocation":"2744:11:16","nodeType":"VariableDeclaration","scope":3084,"src":"2737:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3065,"name":"int256","nodeType":"ElementaryTypeName","src":"2737:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3070,"initialValue":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2758:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:2:16","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2758:6:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"nodeType":"VariableDeclarationStatement","src":"2737:27:16"},{"expression":{"arguments":[{"hexValue":"74696d6573","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2789:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b","typeString":"literal_string \"times\""},"value":"times"},{"id":3075,"name":"timesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2798:11:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b","typeString":"literal_string \"times\""},{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3071,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"2774:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":3073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"addInt","nodeType":"MemberAccess","referencedDeclaration":181,"src":"2774:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_string_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (struct Chainlink.Request memory,string memory,int256) pure"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2774:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3077,"nodeType":"ExpressionStatement","src":"2774:36:16"},{"expression":{"arguments":[{"id":3079,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2880:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3080,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"2888:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},{"id":3081,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"2897:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3078,"name":"sendChainlinkRequestTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"2857:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2857:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3034,"id":3083,"nodeType":"Return","src":"2850:51:16"}]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"1489:236:16","text":" @notice Creates a Chainlink request to retrieve API response, find the target\n data, then multiply by 1000000000000000000 (to remove decimal places from data).\n @return requestId - id of the request"},"functionSelector":"6021abac","id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"requestVolumeData","nameLocation":"1739:17:16","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[],"src":"1756:2:16"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"requestId","nameLocation":"1783:9:16","nodeType":"VariableDeclaration","scope":3085,"src":"1775:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:19:16"},"scope":3111,"src":"1730:1178:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3104,"nodeType":"Block","src":"3239:70:16","statements":[{"expression":{"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3096,"name":"volume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"3249:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3097,"name":"_volume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"3258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3249:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3099,"nodeType":"ExpressionStatement","src":"3249:16:16"},{"eventCall":{"arguments":[{"id":3101,"name":"volume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"3295:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3100,"name":"DataFullfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"3280:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3280:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3103,"nodeType":"EmitStatement","src":"3275:27:16"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"2914:200:16","text":" @notice Receives the response in the form of uint256\n @param _requestId - id of the request\n @param _volume - response; requested 24h trading volume of ETH in USD"},"functionSelector":"4357855e","id":3105,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3093,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3223:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3094,"kind":"modifierInvocation","modifierName":{"id":3092,"name":"recordChainlinkFulfillment","nodeType":"IdentifierPath","referencedDeclaration":841,"src":"3196:26:16"},"nodeType":"ModifierInvocation","src":"3196:38:16"}],"name":"fulfill","nameLocation":"3128:7:16","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"_requestId","nameLocation":"3144:10:16","nodeType":"VariableDeclaration","scope":3105,"src":"3136:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"_volume","nameLocation":"3164:7:16","nodeType":"VariableDeclaration","scope":3105,"src":"3156:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"3156:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3135:37:16"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[],"src":"3239:0:16"},"scope":3111,"src":"3119:190:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3109,"nodeType":"Block","src":"3496:2:16","statements":[]},"documentation":{"id":3106,"nodeType":"StructuredDocumentation","src":"3315:143:16","text":" @notice Witdraws LINK from the contract\n @dev Implement a withdraw function to avoid locking your LINK in the contract"},"functionSelector":"8dc654a2","id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawLink","nameLocation":"3472:12:16","nodeType":"FunctionDefinition","parameters":{"id":3107,"nodeType":"ParameterList","parameters":[],"src":"3484:2:16"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[],"src":"3496:0:16"},"scope":3111,"src":"3463:35:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3112,"src":"264:3236:16","usedErrors":[]}],"src":"32:3469:16"},"id":16},"contracts/KeepersCounter.sol":{"ast":{"absolutePath":"contracts/KeepersCounter.sol","exportedSymbols":{"KeeperCompatibleInterface":[1097],"KeepersCounter":[3198]},"id":3199,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3113,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","id":3114,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3199,"sourceUnit":1098,"src":"57:80:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3116,"name":"KeeperCompatibleInterface","nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"303:25:17"},"id":3117,"nodeType":"InheritanceSpecifier","src":"303:25:17"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"139:136:17","text":" @title The Counter contract\n @notice  A keeper-compatible contract that increments counter variable at fixed time intervals"},"fullyImplemented":true,"id":3198,"linearizedBaseContracts":[3198,1097],"name":"KeepersCounter","nameLocation":"285:14:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"335:42:17","text":" Public counter variable"},"functionSelector":"61bc221a","id":3120,"mutability":"mutable","name":"counter","nameLocation":"397:7:17","nodeType":"VariableDeclaration","scope":3198,"src":"382:22:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"411:89:17","text":" Use an interval in seconds and a timestamp to slow execution of Upkeep"},"functionSelector":"947a36fb","id":3123,"mutability":"immutable","name":"interval","nameLocation":"530:8:17","nodeType":"VariableDeclaration","scope":3198,"src":"505:33:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"3f3b3b27","id":3125,"mutability":"mutable","name":"lastTimeStamp","nameLocation":"559:13:17","nodeType":"VariableDeclaration","scope":3198,"src":"544:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":3144,"nodeType":"Block","src":"835:105:17","statements":[{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3131,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"845:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3132,"name":"updateInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"856:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"845:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3134,"nodeType":"ExpressionStatement","src":"845:25:17"},{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"880:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3136,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"896:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"896:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"880:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3139,"nodeType":"ExpressionStatement","src":"880:31:17"},{"expression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3140,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"922:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"922:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3143,"nodeType":"ExpressionStatement","src":"922:11:17"}]},"documentation":{"id":3126,"nodeType":"StructuredDocumentation","src":"579:215:17","text":" @notice Executes once when a contract is created to initialize state variables\n @param updateInterval - Period of time between two counter increments expressed as UNIX timestamp value"},"id":3145,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"updateInterval","nameLocation":"819:14:17","nodeType":"VariableDeclaration","scope":3145,"src":"811:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3127,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"810:24:17"},"returnParameters":{"id":3130,"nodeType":"ParameterList","parameters":[],"src":"835:0:17"},"scope":3198,"src":"799:141:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1090],"body":{"id":3166,"nodeType":"Block","src":"1241:188:17","statements":[{"expression":{"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3156,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1251:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3157,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1267:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1267:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3159,"name":"lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"1285:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1267:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1266:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3162,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"1302:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1266:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1251:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3165,"nodeType":"ExpressionStatement","src":"1251:59:17"}]},"documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"946:74:17","text":" @notice Checks if the contract requires work to be done"},"functionSelector":"6e04ff0d","id":3167,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1034:11:17","nodeType":"FunctionDefinition","overrides":{"id":3150,"nodeType":"OverrideSpecifier","overrides":[],"src":"1126:8:17"},"parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3167,"src":"1055:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3147,"name":"bytes","nodeType":"ElementaryTypeName","src":"1055:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1045:44:17"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1170:12:17","nodeType":"VariableDeclaration","scope":3167,"src":"1165:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3151,"name":"bool","nodeType":"ElementaryTypeName","src":"1165:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3167,"src":"1196:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3153,"name":"bytes","nodeType":"ElementaryTypeName","src":"1196:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1151:85:17"},"scope":3198,"src":"1025:404:17","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1096],"body":{"id":3196,"nodeType":"Block","src":"1623:354:17","statements":[{"assignments":[3175,null],"declarations":[{"constant":false,"id":3175,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1672:12:17","nodeType":"VariableDeclaration","scope":3196,"src":"1667:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3174,"name":"bool","nodeType":"ElementaryTypeName","src":"1667:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3179,"initialValue":{"arguments":[{"hexValue":"","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1702:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3176,"name":"checkUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"1690:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1690:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1666:39:17"},{"expression":{"arguments":[{"id":3181,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"1723:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d6520696e74657276616c206e6f74206d6574","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1737:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4","typeString":"literal_string \"Time interval not met\""},"value":"Time interval not met"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4","typeString":"literal_string \"Time interval not met\""}],"id":3180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1715:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1715:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3184,"nodeType":"ExpressionStatement","src":"1715:46:17"},{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3185,"name":"lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"1772:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3186,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1788:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1788:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1772:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3189,"nodeType":"ExpressionStatement","src":"1772:31:17"},{"expression":{"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3190,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1813:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3191,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1823:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1833:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1823:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1813:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3195,"nodeType":"ExpressionStatement","src":"1813:21:17"}]},"documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"1435:94:17","text":" @notice Performs the work on the contract, if instructed by :checkUpkeep():"},"functionSelector":"4585e33b","id":3197,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"1543:13:17","nodeType":"FunctionDefinition","overrides":{"id":3172,"nodeType":"OverrideSpecifier","overrides":[],"src":"1614:8:17"},"parameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3197,"src":"1566:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3169,"name":"bytes","nodeType":"ElementaryTypeName","src":"1566:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1556:48:17"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[],"src":"1623:0:17"},"scope":3198,"src":"1534:443:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3199,"src":"276:1703:17","usedErrors":[]}],"src":"32:1948:17"},"id":17},"contracts/PriceConsumerV3.sol":{"ast":{"absolutePath":"contracts/PriceConsumerV3.sol","exportedSymbols":{"AggregatorV3Interface":[965],"PriceConsumerV3":[3252]},"id":3253,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3200,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":3201,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3253,"sourceUnit":966,"src":"57:76:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3202,"nodeType":"StructuredDocumentation","src":"135:120:18","text":" @title The PriceConsumerV3 contract\n @notice Acontract that returns latest price from Chainlink Price Feeds"},"fullyImplemented":true,"id":3252,"linearizedBaseContracts":[3252],"name":"PriceConsumerV3","nameLocation":"265:15:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3205,"mutability":"immutable","name":"priceFeed","nameLocation":"328:9:18","nodeType":"VariableDeclaration","scope":3252,"src":"287:50:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$965","typeString":"contract AggregatorV3Interface"},"typeName":{"id":3204,"nodeType":"UserDefinedTypeName","pathNode":{"id":3203,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"287:21:18"},"referencedDeclaration":965,"src":"287:21:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$965","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"body":{"id":3217,"nodeType":"Block","src":"647:62:18","statements":[{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3211,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"657:9:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$965","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3213,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"691:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3212,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"669:21:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$965_$","typeString":"type(contract AggregatorV3Interface)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"669:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$965","typeString":"contract AggregatorV3Interface"}},"src":"657:45:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$965","typeString":"contract AggregatorV3Interface"}},"id":3216,"nodeType":"ExpressionStatement","src":"657:45:18"}]},"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"344:266:18","text":" @notice Executes once when a contract is created to initialize state variables\n @param _priceFeed - Price Feed Address\n Network: Goerli\n Aggregator: ETH/USD\n Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"},"id":3218,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"_priceFeed","nameLocation":"635:10:18","nodeType":"VariableDeclaration","scope":3218,"src":"627:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"627:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"626:20:18"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[],"src":"647:0:18"},"scope":3252,"src":"615:94:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3240,"nodeType":"Block","src":"861:231:18","statements":[{"assignments":[3225,3227,3229,3231,3233],"declarations":[{"constant":false,"id":3225,"mutability":"mutable","name":"roundID","nameLocation":"892:7:18","nodeType":"VariableDeclaration","scope":3240,"src":"885:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3224,"name":"uint80","nodeType":"ElementaryTypeName","src":"885:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"price","nameLocation":"920:5:18","nodeType":"VariableDeclaration","scope":3240,"src":"913:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3226,"name":"int256","nodeType":"ElementaryTypeName","src":"913:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"startedAt","nameLocation":"947:9:18","nodeType":"VariableDeclaration","scope":3240,"src":"939:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"timeStamp","nameLocation":"978:9:18","nodeType":"VariableDeclaration","scope":3240,"src":"970:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"answeredInRound","nameLocation":"1008:15:18","nodeType":"VariableDeclaration","scope":3240,"src":"1001:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3232,"name":"uint80","nodeType":"ElementaryTypeName","src":"1001:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"id":3237,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3234,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"1036:9:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$965","typeString":"contract AggregatorV3Interface"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":964,"src":"1036:25:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1036:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"871:192:18"},{"expression":{"id":3238,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"1080:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3223,"id":3239,"nodeType":"Return","src":"1073:12:18"}]},"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"715:86:18","text":" @notice Returns the latest price\n @return latest price"},"functionSelector":"8e15f473","id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestPrice","nameLocation":"815:14:18","nodeType":"FunctionDefinition","parameters":{"id":3220,"nodeType":"ParameterList","parameters":[],"src":"829:2:18"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"853:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3221,"name":"int256","nodeType":"ElementaryTypeName","src":"853:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"852:8:18"},"scope":3252,"src":"806:286:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3250,"nodeType":"Block","src":"1269:33:18","statements":[{"expression":{"id":3248,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"1286:9:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$965","typeString":"contract AggregatorV3Interface"}},"functionReturnParameters":3247,"id":3249,"nodeType":"Return","src":"1279:16:18"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"1098:98:18","text":" @notice Returns the Price Feed address\n @return Price Feed address"},"functionSelector":"9e87a5cd","id":3251,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceFeed","nameLocation":"1210:12:18","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[],"src":"1222:2:18"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3251,"src":"1246:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$965","typeString":"contract AggregatorV3Interface"},"typeName":{"id":3245,"nodeType":"UserDefinedTypeName","pathNode":{"id":3244,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"1246:21:18"},"referencedDeclaration":965,"src":"1246:21:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$965","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"1245:23:18"},"scope":3252,"src":"1201:101:18","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3253,"src":"256:1048:18","usedErrors":[]}],"src":"32:1273:18"},"id":18},"contracts/RandomNumberConsumerV2.sol":{"ast":{"absolutePath":"contracts/RandomNumberConsumerV2.sol","exportedSymbols":{"RandomNumberConsumerV2":[3369],"VRFConsumerBaseV2":[919],"VRFCoordinatorV2Interface":[1408]},"id":3370,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3254,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"112:23:19"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":3255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3370,"sourceUnit":1409,"src":"137:80:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":3256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3370,"sourceUnit":920,"src":"218:61:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3258,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"438:17:19"},"id":3259,"nodeType":"InheritanceSpecifier","src":"438:17:19"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3257,"nodeType":"StructuredDocumentation","src":"281:121:19","text":" @title The RandomNumberConsumerV2 contract\n @notice A contract that gets random values from Chainlink VRF V2"},"fullyImplemented":true,"id":3369,"linearizedBaseContracts":[3369,919],"name":"RandomNumberConsumerV2","nameLocation":"412:22:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3262,"mutability":"immutable","name":"COORDINATOR","nameLocation":"498:11:19","nodeType":"VariableDeclaration","scope":3369,"src":"462:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$1408","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":3261,"nodeType":"UserDefinedTypeName","pathNode":{"id":3260,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":1408,"src":"462:25:19"},"referencedDeclaration":1408,"src":"462:25:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$1408","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"immutable","name":"s_subscriptionId","nameLocation":"562:16:19","nodeType":"VariableDeclaration","scope":3369,"src":"545:33:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3263,"name":"uint64","nodeType":"ElementaryTypeName","src":"545:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"immutable","name":"s_keyHash","nameLocation":"809:9:19","nodeType":"VariableDeclaration","scope":3369,"src":"791:27:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"791:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"id":3269,"mutability":"constant","name":"CALLBACK_GAS_LIMIT","nameLocation":"1251:18:19","nodeType":"VariableDeclaration","scope":3369,"src":"1235:43:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3267,"name":"uint32","nodeType":"ElementaryTypeName","src":"1235:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"313030303030","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1272:6:19","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"visibility":"internal"},{"constant":true,"id":3272,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"1355:21:19","nodeType":"VariableDeclaration","scope":3369,"src":"1339:41:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3270,"name":"uint16","nodeType":"ElementaryTypeName","src":"1339:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1379:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":3275,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1522:9:19","nodeType":"VariableDeclaration","scope":3369,"src":"1506:29:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3273,"name":"uint32","nodeType":"ElementaryTypeName","src":"1506:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"32","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1534:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":false,"functionSelector":"f6eaffc8","id":3278,"mutability":"mutable","name":"s_randomWords","nameLocation":"1559:13:19","nodeType":"VariableDeclaration","scope":3369,"src":"1542:30:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3277,"nodeType":"ArrayTypeName","src":"1542:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"e89e106a","id":3280,"mutability":"mutable","name":"s_requestId","nameLocation":"1593:11:19","nodeType":"VariableDeclaration","scope":3369,"src":"1578:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1578:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":3282,"mutability":"mutable","name":"s_owner","nameLocation":"1618:7:19","nodeType":"VariableDeclaration","scope":3369,"src":"1610:15:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3281,"name":"address","nodeType":"ElementaryTypeName","src":"1610:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"anonymous":false,"id":3287,"name":"ReturnedRandomness","nameLocation":"1638:18:19","nodeType":"EventDefinition","parameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"indexed":false,"mutability":"mutable","name":"randomWords","nameLocation":"1667:11:19","nodeType":"VariableDeclaration","scope":3287,"src":"1657:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1657:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3284,"nodeType":"ArrayTypeName","src":"1657:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1656:23:19"},"src":"1632:48:19"},{"body":{"id":3319,"nodeType":"Block","src":"2202:174:19","statements":[{"expression":{"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"2212:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$1408","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3302,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"2252:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3301,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"2226:25:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$1408_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2226:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$1408","typeString":"contract VRFCoordinatorV2Interface"}},"src":"2212:55:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$1408","typeString":"contract VRFCoordinatorV2Interface"}},"id":3305,"nodeType":"ExpressionStatement","src":"2212:55:19"},{"expression":{"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3306,"name":"s_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2277:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3307,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"2289:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2277:19:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3309,"nodeType":"ExpressionStatement","src":"2277:19:19"},{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3310,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"2306:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3311,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2316:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2316:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2306:20:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3314,"nodeType":"ExpressionStatement","src":"2306:20:19"},{"expression":{"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3315,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"2336:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3316,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"2355:14:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2336:33:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3318,"nodeType":"ExpressionStatement","src":"2336:33:19"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"1686:371:19","text":" @notice Constructor inherits VRFConsumerBaseV2\n @param subscriptionId - the subscription ID that this contract uses for funding requests\n @param vrfCoordinator - coordinator, check https://docs.chain.link/docs/vrf-contracts/#configurations\n @param keyHash - the gas lane to use, which specifies the maximum gas price to bump to"},"id":3320,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3297,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"2186:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3298,"kind":"baseConstructorSpecifier","modifierName":{"id":3296,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"2168:17:19"},"nodeType":"ModifierInvocation","src":"2168:33:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"subscriptionId","nameLocation":"2090:14:19","nodeType":"VariableDeclaration","scope":3320,"src":"2083:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3289,"name":"uint64","nodeType":"ElementaryTypeName","src":"2083:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"2122:14:19","nodeType":"VariableDeclaration","scope":3320,"src":"2114:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"2114:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"keyHash","nameLocation":"2154:7:19","nodeType":"VariableDeclaration","scope":3320,"src":"2146:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2146:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2073:94:19"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[],"src":"2202:0:19"},"scope":3369,"src":"2062:314:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3337,"nodeType":"Block","src":"2589:276:19","statements":[{"expression":{"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3326,"name":"s_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"2661:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3329,"name":"s_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2719:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3330,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"2742:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3331,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2772:21:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3332,"name":"CALLBACK_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"2807:18:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3333,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"2839:9:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3327,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"2675:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$1408","typeString":"contract VRFCoordinatorV2Interface"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"2675:30:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2675:183:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2661:197:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3336,"nodeType":"ExpressionStatement","src":"2661:197:19"}]},"documentation":{"id":3321,"nodeType":"StructuredDocumentation","src":"2382:153:19","text":" @notice Requests randomness\n Assumes the subscription is funded sufficiently; \"Words\" refers to unit of data in Computer Science"},"functionSelector":"e0c86289","id":3338,"implemented":true,"kind":"function","modifiers":[{"id":3324,"kind":"modifierInvocation","modifierName":{"id":3323,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":3368,"src":"2579:9:19"},"nodeType":"ModifierInvocation","src":"2579:9:19"}],"name":"requestRandomWords","nameLocation":"2549:18:19","nodeType":"FunctionDefinition","parameters":{"id":3322,"nodeType":"ParameterList","parameters":[],"src":"2567:2:19"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[],"src":"2589:0:19"},"scope":3369,"src":"2540:325:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[892],"body":{"id":3356,"nodeType":"Block","src":"3163:90:19","statements":[{"expression":{"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3348,"name":"s_randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"3173:13:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3349,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"3189:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3173:27:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3351,"nodeType":"ExpressionStatement","src":"3173:27:19"},{"eventCall":{"arguments":[{"id":3353,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"3234:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3352,"name":"ReturnedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"3215:18:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3215:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3355,"nodeType":"EmitStatement","src":"3210:36:19"}]},"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"2871:192:19","text":" @notice Callback function used by VRF Coordinator\n @param requestId - id of the request\n @param randomWords - array of random results from VRF Coordinator"},"id":3357,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"3077:18:19","nodeType":"FunctionDefinition","overrides":{"id":3346,"nodeType":"OverrideSpecifier","overrides":[],"src":"3154:8:19"},"parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"requestId","nameLocation":"3104:9:19","nodeType":"VariableDeclaration","scope":3357,"src":"3096:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"randomWords","nameLocation":"3132:11:19","nodeType":"VariableDeclaration","scope":3357,"src":"3115:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ArrayTypeName","src":"3115:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3095:49:19"},"returnParameters":{"id":3347,"nodeType":"ParameterList","parameters":[],"src":"3163:0:19"},"scope":3369,"src":"3068:185:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3367,"nodeType":"Block","src":"3280:58:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3298:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3298:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3362,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"3312:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3298:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3290:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3290:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3365,"nodeType":"ExpressionStatement","src":"3290:30:19"},{"id":3366,"nodeType":"PlaceholderStatement","src":"3330:1:19"}]},"id":3368,"name":"onlyOwner","nameLocation":"3268:9:19","nodeType":"ModifierDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[],"src":"3277:2:19"},"src":"3259:79:19","virtual":false,"visibility":"internal"}],"scope":3370,"src":"403:2937:19","usedErrors":[870]}],"src":"112:3229:19"},"id":19},"contracts/test/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"contracts/test/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[1192],"VRFConsumerBaseV2":[919],"VRFCoordinatorV2Interface":[1408],"VRFCoordinatorV2Mock":[1987]},"id":3373,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3371,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"31:23:20"},{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","id":3372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3373,"sourceUnit":1988,"src":"56:70:20","symbolAliases":[],"unitAlias":""}],"src":"31:96:20"},"id":20},"contracts/test/fuzzing/KeepersCounterEchidnaTest.sol":{"ast":{"absolutePath":"contracts/test/fuzzing/KeepersCounterEchidnaTest.sol","exportedSymbols":{"KeeperCompatibleInterface":[1097],"KeepersCounter":[3198],"KeepersCounterEchidnaTest":[3395]},"id":3396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3374,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"contracts/KeepersCounter.sol","file":"../../KeepersCounter.sol","id":3375,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3396,"sourceUnit":3199,"src":"57:34:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3376,"name":"KeepersCounter","nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"131:14:21"},"id":3377,"nodeType":"InheritanceSpecifier","src":"131:14:21"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3395,"linearizedBaseContracts":[3395,3198,1097],"name":"KeepersCounterEchidnaTest","nameLocation":"102:25:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":3383,"nodeType":"Block","src":"189:2:21","statements":[]},"id":3384,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"38","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"181:6:21","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_691200_by_1","typeString":"int_const 691200"},"value":"8"}],"id":3381,"kind":"baseConstructorSpecifier","modifierName":{"id":3379,"name":"KeepersCounter","nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"166:14:21"},"nodeType":"ModifierInvocation","src":"166:22:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[],"src":"163:2:21"},"returnParameters":{"id":3382,"nodeType":"ParameterList","parameters":[],"src":"189:0:21"},"scope":3395,"src":"152:39:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3393,"nodeType":"Block","src":"268:36:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"285:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"296:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"285:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3388,"id":3392,"nodeType":"Return","src":"278:19:21"}]},"functionSelector":"7d1b7ebd","id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"echidna_test_perform_upkeep_gate","nameLocation":"206:32:21","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[],"src":"238:2:21"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3394,"src":"262:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3386,"name":"bool","nodeType":"ElementaryTypeName","src":"262:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"261:6:21"},"scope":3395,"src":"197:107:21","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3396,"src":"93:213:21","usedErrors":[]}],"src":"32:275:21"},"id":21}},"contracts":{"@chainlink/contracts/src/v0.8/Chainlink.sol":{"Chainlink":{"abi":[],"devdoc":{"details":"Uses imported CBOR library for encoding to buffer","kind":"dev","methods":{},"title":"Library for common Chainlink functions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220827d66598c40becb91ef407c7da4e4eeb2e6f92693b00d028b3281379a877dd964736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH30 0x66598C40BECB91EF407C7DA4E4EEB2E6F92693B00D028B3281379A877DD9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"293:3494:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220827d66598c40becb91ef407c7da4e4eeb2e6f92693b00d028b3281379a877dd964736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH30 0x66598C40BECB91EF407C7DA4E4EEB2E6F92693B00D028B3281379A877DD9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"293:3494:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(struct Chainlink.Request memory,string memory,string memory)":"infinite","addBytes(struct Chainlink.Request memory,string memory,bytes memory)":"infinite","addInt(struct Chainlink.Request memory,string memory,int256)":"infinite","addStringArray(struct Chainlink.Request memory,string memory,string memory[] memory)":"infinite","addUint(struct Chainlink.Request memory,string memory,uint256)":"infinite","initialize(struct Chainlink.Request memory,bytes32,address,bytes4)":"infinite","setBuffer(struct Chainlink.Request memory,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Uses imported CBOR library for encoding to buffer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for common Chainlink functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/Chainlink.sol\":\"Chainlink\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {CBORChainlink} from \\\"./vendor/CBORChainlink.sol\\\";\\nimport {BufferChainlink} from \\\"./vendor/BufferChainlink.sol\\\";\\n\\n/**\\n * @title Library for common Chainlink functions\\n * @dev Uses imported CBOR library for encoding to buffer\\n */\\nlibrary Chainlink {\\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\\n\\n  using CBORChainlink for BufferChainlink.buffer;\\n\\n  struct Request {\\n    bytes32 id;\\n    address callbackAddress;\\n    bytes4 callbackFunctionId;\\n    uint256 nonce;\\n    BufferChainlink.buffer buf;\\n  }\\n\\n  /**\\n   * @notice Initializes a Chainlink request\\n   * @dev Sets the ID, callback address, and callback function signature on the request\\n   * @param self The uninitialized request\\n   * @param jobId The Job Specification ID\\n   * @param callbackAddr The callback address\\n   * @param callbackFunc The callback function signature\\n   * @return The initialized request\\n   */\\n  function initialize(\\n    Request memory self,\\n    bytes32 jobId,\\n    address callbackAddr,\\n    bytes4 callbackFunc\\n  ) internal pure returns (Chainlink.Request memory) {\\n    BufferChainlink.init(self.buf, defaultBufferSize);\\n    self.id = jobId;\\n    self.callbackAddress = callbackAddr;\\n    self.callbackFunctionId = callbackFunc;\\n    return self;\\n  }\\n\\n  /**\\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\\n   * @param self The initialized request\\n   * @param data The CBOR data\\n   */\\n  function setBuffer(Request memory self, bytes memory data) internal pure {\\n    BufferChainlink.init(self.buf, data.length);\\n    BufferChainlink.append(self.buf, data);\\n  }\\n\\n  /**\\n   * @notice Adds a string value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The string value to add\\n   */\\n  function add(\\n    Request memory self,\\n    string memory key,\\n    string memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeString(value);\\n  }\\n\\n  /**\\n   * @notice Adds a bytes value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The bytes value to add\\n   */\\n  function addBytes(\\n    Request memory self,\\n    string memory key,\\n    bytes memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeBytes(value);\\n  }\\n\\n  /**\\n   * @notice Adds a int256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The int256 value to add\\n   */\\n  function addInt(\\n    Request memory self,\\n    string memory key,\\n    int256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds a uint256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The uint256 value to add\\n   */\\n  function addUint(\\n    Request memory self,\\n    string memory key,\\n    uint256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeUInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds an array of strings to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param values The array of string values to add\\n   */\\n  function addStringArray(\\n    Request memory self,\\n    string memory key,\\n    string[] memory values\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.startArray();\\n    for (uint256 i = 0; i < values.length; i++) {\\n      self.buf.encodeString(values[i]);\\n    }\\n    self.buf.endSequence();\\n  }\\n}\\n\",\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.19;\\n\\nimport {BufferChainlink} from \\\"./BufferChainlink.sol\\\";\\n\\nlibrary CBORChainlink {\\n  using BufferChainlink for BufferChainlink.buffer;\\n\\n  uint8 private constant MAJOR_TYPE_INT = 0;\\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\\n  uint8 private constant MAJOR_TYPE_STRING = 3;\\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n  uint8 private constant MAJOR_TYPE_MAP = 5;\\n  uint8 private constant MAJOR_TYPE_TAG = 6;\\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\\n    if(value <= 23) {\\n      buf.appendUint8(uint8((major << 5) | value));\\n    } else if (value <= 0xFF) {\\n      buf.appendUint8(uint8((major << 5) | 24));\\n      buf.appendInt(value, 1);\\n    } else if (value <= 0xFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 25));\\n      buf.appendInt(value, 2);\\n    } else if (value <= 0xFFFFFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 26));\\n      buf.appendInt(value, 4);\\n    } else {\\n      buf.appendUint8(uint8((major << 5) | 27));\\n      buf.appendInt(value, 8);\\n    }\\n  }\\n\\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\\n    buf.appendUint8(uint8((major << 5) | 31));\\n  }\\n\\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, value);\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n    }\\n  }\\n\\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\\n    if(value < -0x10000000000000000) {\\n      encodeSignedBigNum(buf, value);\\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, uint(value));\\n    } else if(value >= 0) {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\\n    }\\n  }\\n\\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n    buf.append(value);\\n  }\\n\\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n    encodeBytes(buf, abi.encode(value));\\n  }\\n\\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\\n  }\\n\\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n    buf.append(bytes(value));\\n  }\\n\\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n  }\\n\\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n  }\\n\\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n  }\\n}\\n\",\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/ChainlinkClient.sol":{"ChainlinkClient":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkRequested","type":"event"}],"devdoc":{"kind":"dev","methods":{},"title":"The ChainlinkClient contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkRequested\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ChainlinkClient contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract writers can inherit this contract in order to create requests for the Chainlink network\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\":\"ChainlinkClient\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {CBORChainlink} from \\\"./vendor/CBORChainlink.sol\\\";\\nimport {BufferChainlink} from \\\"./vendor/BufferChainlink.sol\\\";\\n\\n/**\\n * @title Library for common Chainlink functions\\n * @dev Uses imported CBOR library for encoding to buffer\\n */\\nlibrary Chainlink {\\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\\n\\n  using CBORChainlink for BufferChainlink.buffer;\\n\\n  struct Request {\\n    bytes32 id;\\n    address callbackAddress;\\n    bytes4 callbackFunctionId;\\n    uint256 nonce;\\n    BufferChainlink.buffer buf;\\n  }\\n\\n  /**\\n   * @notice Initializes a Chainlink request\\n   * @dev Sets the ID, callback address, and callback function signature on the request\\n   * @param self The uninitialized request\\n   * @param jobId The Job Specification ID\\n   * @param callbackAddr The callback address\\n   * @param callbackFunc The callback function signature\\n   * @return The initialized request\\n   */\\n  function initialize(\\n    Request memory self,\\n    bytes32 jobId,\\n    address callbackAddr,\\n    bytes4 callbackFunc\\n  ) internal pure returns (Chainlink.Request memory) {\\n    BufferChainlink.init(self.buf, defaultBufferSize);\\n    self.id = jobId;\\n    self.callbackAddress = callbackAddr;\\n    self.callbackFunctionId = callbackFunc;\\n    return self;\\n  }\\n\\n  /**\\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\\n   * @param self The initialized request\\n   * @param data The CBOR data\\n   */\\n  function setBuffer(Request memory self, bytes memory data) internal pure {\\n    BufferChainlink.init(self.buf, data.length);\\n    BufferChainlink.append(self.buf, data);\\n  }\\n\\n  /**\\n   * @notice Adds a string value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The string value to add\\n   */\\n  function add(\\n    Request memory self,\\n    string memory key,\\n    string memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeString(value);\\n  }\\n\\n  /**\\n   * @notice Adds a bytes value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The bytes value to add\\n   */\\n  function addBytes(\\n    Request memory self,\\n    string memory key,\\n    bytes memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeBytes(value);\\n  }\\n\\n  /**\\n   * @notice Adds a int256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The int256 value to add\\n   */\\n  function addInt(\\n    Request memory self,\\n    string memory key,\\n    int256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds a uint256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The uint256 value to add\\n   */\\n  function addUint(\\n    Request memory self,\\n    string memory key,\\n    uint256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeUInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds an array of strings to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param values The array of string values to add\\n   */\\n  function addStringArray(\\n    Request memory self,\\n    string memory key,\\n    string[] memory values\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.startArray();\\n    for (uint256 i = 0; i < values.length; i++) {\\n      self.buf.encodeString(values[i]);\\n    }\\n    self.buf.endSequence();\\n  }\\n}\\n\",\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Chainlink.sol\\\";\\nimport \\\"./interfaces/ENSInterface.sol\\\";\\nimport \\\"./interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"./interfaces/ChainlinkRequestInterface.sol\\\";\\nimport \\\"./interfaces/OperatorInterface.sol\\\";\\nimport \\\"./interfaces/PointerInterface.sol\\\";\\nimport {ENSResolver as ENSResolver_Chainlink} from \\\"./vendor/ENSResolver.sol\\\";\\n\\n/**\\n * @title The ChainlinkClient contract\\n * @notice Contract writers can inherit this contract in order to create requests for the\\n * Chainlink network\\n */\\nabstract contract ChainlinkClient {\\n  using Chainlink for Chainlink.Request;\\n\\n  uint256 internal constant LINK_DIVISIBILITY = 10**18;\\n  uint256 private constant AMOUNT_OVERRIDE = 0;\\n  address private constant SENDER_OVERRIDE = address(0);\\n  uint256 private constant ORACLE_ARGS_VERSION = 1;\\n  uint256 private constant OPERATOR_ARGS_VERSION = 2;\\n  bytes32 private constant ENS_TOKEN_SUBNAME = keccak256(\\\"link\\\");\\n  bytes32 private constant ENS_ORACLE_SUBNAME = keccak256(\\\"oracle\\\");\\n  address private constant LINK_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\\n\\n  ENSInterface private s_ens;\\n  bytes32 private s_ensNode;\\n  LinkTokenInterface private s_link;\\n  OperatorInterface private s_oracle;\\n  uint256 private s_requestCount = 1;\\n  mapping(bytes32 => address) private s_pendingRequests;\\n\\n  event ChainlinkRequested(bytes32 indexed id);\\n  event ChainlinkFulfilled(bytes32 indexed id);\\n  event ChainlinkCancelled(bytes32 indexed id);\\n\\n  /**\\n   * @notice Creates a request that can hold additional parameters\\n   * @param specId The Job Specification ID that the request will be created for\\n   * @param callbackAddr address to operate the callback on\\n   * @param callbackFunctionSignature function signature to use for the callback\\n   * @return A Chainlink Request struct in memory\\n   */\\n  function buildChainlinkRequest(\\n    bytes32 specId,\\n    address callbackAddr,\\n    bytes4 callbackFunctionSignature\\n  ) internal pure returns (Chainlink.Request memory) {\\n    Chainlink.Request memory req;\\n    return req.initialize(specId, callbackAddr, callbackFunctionSignature);\\n  }\\n\\n  /**\\n   * @notice Creates a request that can hold additional parameters\\n   * @param specId The Job Specification ID that the request will be created for\\n   * @param callbackFunctionSignature function signature to use for the callback\\n   * @return A Chainlink Request struct in memory\\n   */\\n  function buildOperatorRequest(bytes32 specId, bytes4 callbackFunctionSignature)\\n    internal\\n    view\\n    returns (Chainlink.Request memory)\\n  {\\n    Chainlink.Request memory req;\\n    return req.initialize(specId, address(this), callbackFunctionSignature);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the stored oracle address\\n   * @dev Calls `chainlinkRequestTo` with the stored oracle address\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendChainlinkRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\\n    return sendChainlinkRequestTo(address(s_oracle), req, payment);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the specified oracle address\\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\\n   * send LINK which creates a request on the target oracle contract.\\n   * Emits ChainlinkRequested event.\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendChainlinkRequestTo(\\n    address oracleAddress,\\n    Chainlink.Request memory req,\\n    uint256 payment\\n  ) internal returns (bytes32 requestId) {\\n    uint256 nonce = s_requestCount;\\n    s_requestCount = nonce + 1;\\n    bytes memory encodedRequest = abi.encodeWithSelector(\\n      ChainlinkRequestInterface.oracleRequest.selector,\\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\\n      req.id,\\n      address(this),\\n      req.callbackFunctionId,\\n      nonce,\\n      ORACLE_ARGS_VERSION,\\n      req.buf.buf\\n    );\\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the stored oracle address\\n   * @dev This function supports multi-word response\\n   * @dev Calls `sendOperatorRequestTo` with the stored oracle address\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendOperatorRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\\n    return sendOperatorRequestTo(address(s_oracle), req, payment);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the specified oracle address\\n   * @dev This function supports multi-word response\\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\\n   * send LINK which creates a request on the target oracle contract.\\n   * Emits ChainlinkRequested event.\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendOperatorRequestTo(\\n    address oracleAddress,\\n    Chainlink.Request memory req,\\n    uint256 payment\\n  ) internal returns (bytes32 requestId) {\\n    uint256 nonce = s_requestCount;\\n    s_requestCount = nonce + 1;\\n    bytes memory encodedRequest = abi.encodeWithSelector(\\n      OperatorInterface.operatorRequest.selector,\\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\\n      req.id,\\n      req.callbackFunctionId,\\n      nonce,\\n      OPERATOR_ARGS_VERSION,\\n      req.buf.buf\\n    );\\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\\n  }\\n\\n  /**\\n   * @notice Make a request to an oracle\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param nonce used to generate the request ID\\n   * @param payment The amount of LINK to send for the request\\n   * @param encodedRequest data encoded for request type specific format\\n   * @return requestId The request ID\\n   */\\n  function _rawRequest(\\n    address oracleAddress,\\n    uint256 nonce,\\n    uint256 payment,\\n    bytes memory encodedRequest\\n  ) private returns (bytes32 requestId) {\\n    requestId = keccak256(abi.encodePacked(this, nonce));\\n    s_pendingRequests[requestId] = oracleAddress;\\n    emit ChainlinkRequested(requestId);\\n    require(s_link.transferAndCall(oracleAddress, payment, encodedRequest), \\\"unable to transferAndCall to oracle\\\");\\n  }\\n\\n  /**\\n   * @notice Allows a request to be cancelled if it has not been fulfilled\\n   * @dev Requires keeping track of the expiration value emitted from the oracle contract.\\n   * Deletes the request from the `pendingRequests` mapping.\\n   * Emits ChainlinkCancelled event.\\n   * @param requestId The request ID\\n   * @param payment The amount of LINK sent for the request\\n   * @param callbackFunc The callback function specified for the request\\n   * @param expiration The time of the expiration for the request\\n   */\\n  function cancelChainlinkRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunc,\\n    uint256 expiration\\n  ) internal {\\n    OperatorInterface requested = OperatorInterface(s_pendingRequests[requestId]);\\n    delete s_pendingRequests[requestId];\\n    emit ChainlinkCancelled(requestId);\\n    requested.cancelOracleRequest(requestId, payment, callbackFunc, expiration);\\n  }\\n\\n  /**\\n   * @notice the next request count to be used in generating a nonce\\n   * @dev starts at 1 in order to ensure consistent gas cost\\n   * @return returns the next request count to be used in a nonce\\n   */\\n  function getNextRequestCount() internal view returns (uint256) {\\n    return s_requestCount;\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle address\\n   * @param oracleAddress The address of the oracle contract\\n   */\\n  function setChainlinkOracle(address oracleAddress) internal {\\n    s_oracle = OperatorInterface(oracleAddress);\\n  }\\n\\n  /**\\n   * @notice Sets the LINK token address\\n   * @param linkAddress The address of the LINK token contract\\n   */\\n  function setChainlinkToken(address linkAddress) internal {\\n    s_link = LinkTokenInterface(linkAddress);\\n  }\\n\\n  /**\\n   * @notice Sets the Chainlink token address for the public\\n   * network as given by the Pointer contract\\n   */\\n  function setPublicChainlinkToken() internal {\\n    setChainlinkToken(PointerInterface(LINK_TOKEN_POINTER).getAddress());\\n  }\\n\\n  /**\\n   * @notice Retrieves the stored address of the LINK token\\n   * @return The address of the LINK token\\n   */\\n  function chainlinkTokenAddress() internal view returns (address) {\\n    return address(s_link);\\n  }\\n\\n  /**\\n   * @notice Retrieves the stored address of the oracle contract\\n   * @return The address of the oracle contract\\n   */\\n  function chainlinkOracleAddress() internal view returns (address) {\\n    return address(s_oracle);\\n  }\\n\\n  /**\\n   * @notice Allows for a request which was created on another contract to be fulfilled\\n   * on this contract\\n   * @param oracleAddress The address of the oracle contract that will fulfill the request\\n   * @param requestId The request ID used for the response\\n   */\\n  function addChainlinkExternalRequest(address oracleAddress, bytes32 requestId) internal notPendingRequest(requestId) {\\n    s_pendingRequests[requestId] = oracleAddress;\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\\n   * @dev Accounts for subnodes having different resolvers\\n   * @param ensAddress The address of the ENS contract\\n   * @param node The ENS node hash\\n   */\\n  function useChainlinkWithENS(address ensAddress, bytes32 node) internal {\\n    s_ens = ENSInterface(ensAddress);\\n    s_ensNode = node;\\n    bytes32 linkSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_TOKEN_SUBNAME));\\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(linkSubnode));\\n    setChainlinkToken(resolver.addr(linkSubnode));\\n    updateChainlinkOracleWithENS();\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle contract with the address resolved by ENS\\n   * @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously\\n   */\\n  function updateChainlinkOracleWithENS() internal {\\n    bytes32 oracleSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_ORACLE_SUBNAME));\\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(oracleSubnode));\\n    setChainlinkOracle(resolver.addr(oracleSubnode));\\n  }\\n\\n  /**\\n   * @notice Ensures that the fulfillment is valid for this contract\\n   * @dev Use if the contract developer prefers methods instead of modifiers for validation\\n   * @param requestId The request ID for fulfillment\\n   */\\n  function validateChainlinkCallback(bytes32 requestId)\\n    internal\\n    recordChainlinkFulfillment(requestId)\\n  // solhint-disable-next-line no-empty-blocks\\n  {\\n\\n  }\\n\\n  /**\\n   * @dev Reverts if the sender is not the oracle of the request.\\n   * Emits ChainlinkFulfilled event.\\n   * @param requestId The request ID for fulfillment\\n   */\\n  modifier recordChainlinkFulfillment(bytes32 requestId) {\\n    require(msg.sender == s_pendingRequests[requestId], \\\"Source must be the oracle of the request\\\");\\n    delete s_pendingRequests[requestId];\\n    emit ChainlinkFulfilled(requestId);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Reverts if the request is already pending\\n   * @param requestId The request ID for fulfillment\\n   */\\n  modifier notPendingRequest(bytes32 requestId) {\\n    require(s_pendingRequests[requestId] == address(0), \\\"Request is already pending\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa221ccfa4763977cc78c57e3a83d47f5aaf7c15535a2c20dba5f46af80fb3bd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ChainlinkRequestInterface {\\n  function oracleRequest(\\n    address sender,\\n    uint256 requestPrice,\\n    bytes32 serviceAgreementID,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function cancelOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration\\n  ) external;\\n}\\n\",\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ENSInterface {\\n  // Logged when the owner of a node assigns a new owner to a subnode.\\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n  // Logged when the owner of a node transfers ownership to a new account.\\n  event Transfer(bytes32 indexed node, address owner);\\n\\n  // Logged when the resolver for a node changes.\\n  event NewResolver(bytes32 indexed node, address resolver);\\n\\n  // Logged when the TTL of a node changes\\n  event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n  function setSubnodeOwner(\\n    bytes32 node,\\n    bytes32 label,\\n    address owner\\n  ) external;\\n\\n  function setResolver(bytes32 node, address resolver) external;\\n\\n  function setOwner(bytes32 node, address owner) external;\\n\\n  function setTTL(bytes32 node, uint64 ttl) external;\\n\\n  function owner(bytes32 node) external view returns (address);\\n\\n  function resolver(bytes32 node) external view returns (address);\\n\\n  function ttl(bytes32 node) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OracleInterface.sol\\\";\\nimport \\\"./ChainlinkRequestInterface.sol\\\";\\n\\ninterface OperatorInterface is OracleInterface, ChainlinkRequestInterface {\\n  function operatorRequest(\\n    address sender,\\n    uint256 payment,\\n    bytes32 specId,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function fulfillOracleRequest2(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes calldata data\\n  ) external returns (bool);\\n\\n  function ownerTransferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function distributeFunds(address payable[] calldata receivers, uint256[] calldata amounts) external payable;\\n\\n  function getAuthorizedSenders() external returns (address[] memory);\\n\\n  function setAuthorizedSenders(address[] calldata senders) external;\\n\\n  function getForwarder() external returns (address);\\n}\\n\",\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OracleInterface {\\n  function fulfillOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes32 data\\n  ) external returns (bool);\\n\\n  function isAuthorizedSender(address node) external view returns (bool);\\n\\n  function withdraw(address recipient, uint256 amount) external;\\n\\n  function withdrawable() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface PointerInterface {\\n  function getAddress() external view returns (address);\\n}\\n\",\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.19;\\n\\nimport {BufferChainlink} from \\\"./BufferChainlink.sol\\\";\\n\\nlibrary CBORChainlink {\\n  using BufferChainlink for BufferChainlink.buffer;\\n\\n  uint8 private constant MAJOR_TYPE_INT = 0;\\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\\n  uint8 private constant MAJOR_TYPE_STRING = 3;\\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n  uint8 private constant MAJOR_TYPE_MAP = 5;\\n  uint8 private constant MAJOR_TYPE_TAG = 6;\\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\\n    if(value <= 23) {\\n      buf.appendUint8(uint8((major << 5) | value));\\n    } else if (value <= 0xFF) {\\n      buf.appendUint8(uint8((major << 5) | 24));\\n      buf.appendInt(value, 1);\\n    } else if (value <= 0xFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 25));\\n      buf.appendInt(value, 2);\\n    } else if (value <= 0xFFFFFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 26));\\n      buf.appendInt(value, 4);\\n    } else {\\n      buf.appendUint8(uint8((major << 5) | 27));\\n      buf.appendInt(value, 8);\\n    }\\n  }\\n\\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\\n    buf.appendUint8(uint8((major << 5) | 31));\\n  }\\n\\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, value);\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n    }\\n  }\\n\\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\\n    if(value < -0x10000000000000000) {\\n      encodeSignedBigNum(buf, value);\\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, uint(value));\\n    } else if(value >= 0) {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\\n    }\\n  }\\n\\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n    buf.append(value);\\n  }\\n\\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n    encodeBytes(buf, abi.encode(value));\\n  }\\n\\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\\n  }\\n\\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n    buf.append(bytes(value));\\n  }\\n\\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n  }\\n\\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n  }\\n\\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n  }\\n}\\n\",\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract ENSResolver {\\n  function addr(bytes32 node) public view virtual returns (address);\\n}\\n\",\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":319,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_ens","offset":0,"slot":"0","type":"t_contract(ENSInterface)1078"},{"astId":321,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_ensNode","offset":0,"slot":"1","type":"t_bytes32"},{"astId":324,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_link","offset":0,"slot":"2","type":"t_contract(LinkTokenInterface)1192"},{"astId":327,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_oracle","offset":0,"slot":"3","type":"t_contract(OperatorInterface)1272"},{"astId":330,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_requestCount","offset":0,"slot":"4","type":"t_uint256"},{"astId":334,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_pendingRequests","offset":0,"slot":"5","type":"t_mapping(t_bytes32,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(ENSInterface)1078":{"encoding":"inplace","label":"contract ENSInterface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)1192":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_contract(OperatorInterface)1272":{"encoding":"inplace","label":"contract OperatorInterface","numberOfBytes":"20"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"notice":"Contract writers can inherit this contract in order to create requests for the Chainlink network","version":1}}},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol":{"ChainlinkRequestInterface":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"}],"name":"cancelOracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"requestPrice","type":"uint256"},{"internalType":"bytes32","name":"serviceAgreementID","type":"bytes32"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"dataVersion","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"oracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"cancelOracleRequest(bytes32,uint256,bytes4,uint256)":"6ee4d553","oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)":"40429946"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"cancelOracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"serviceAgreementID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"oracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":\"ChainlinkRequestInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ChainlinkRequestInterface {\\n  function oracleRequest(\\n    address sender,\\n    uint256 requestPrice,\\n    bytes32 serviceAgreementID,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function cancelOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration\\n  ) external;\\n}\\n\",\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol":{"ENSInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"label","type":"bytes32"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"NewOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"address","name":"resolver","type":"address"}],"name":"NewResolver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"NewTTL","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"resolver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"resolver","type":"address"}],"name":"setResolver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"bytes32","name":"label","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"}],"name":"setSubnodeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"setTTL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"ttl","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner(bytes32)":"02571be3","resolver(bytes32)":"0178b8bf","setOwner(bytes32,address)":"5b0fc9c3","setResolver(bytes32,address)":"1896f70a","setSubnodeOwner(bytes32,bytes32,address)":"06ab5923","setTTL(bytes32,uint64)":"14ab9038","ttl(bytes32)":"16a25cbd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"NewResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"NewTTL\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setTTL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"ttl\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":\"ENSInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ENSInterface {\\n  // Logged when the owner of a node assigns a new owner to a subnode.\\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n  // Logged when the owner of a node transfers ownership to a new account.\\n  event Transfer(bytes32 indexed node, address owner);\\n\\n  // Logged when the resolver for a node changes.\\n  event NewResolver(bytes32 indexed node, address resolver);\\n\\n  // Logged when the TTL of a node changes\\n  event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n  function setSubnodeOwner(\\n    bytes32 node,\\n    bytes32 label,\\n    address owner\\n  ) external;\\n\\n  function setResolver(bytes32 node, address resolver) external;\\n\\n  function setOwner(bytes32 node, address owner) external;\\n\\n  function setTTL(bytes32 node, uint64 ttl) external;\\n\\n  function owner(bytes32 node) external view returns (address);\\n\\n  function resolver(bytes32 node) external view returns (address);\\n\\n  function ttl(bytes32 node) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"KeeperCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":\"KeeperCompatibleInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol":{"OperatorInterface":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"}],"name":"cancelOracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable[]","name":"receivers","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"distributeFunds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"fulfillOracleRequest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"fulfillOracleRequest2","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAuthorizedSenders","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"node","type":"address"}],"name":"isAuthorizedSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"bytes32","name":"specId","type":"bytes32"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"dataVersion","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"operatorRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"requestPrice","type":"uint256"},{"internalType":"bytes32","name":"serviceAgreementID","type":"bytes32"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"dataVersion","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"oracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"ownerTransferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"senders","type":"address[]"}],"name":"setAuthorizedSenders","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"cancelOracleRequest(bytes32,uint256,bytes4,uint256)":"6ee4d553","distributeFunds(address[],uint256[])":"6bd59ec0","fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)":"4ab0d190","fulfillOracleRequest2(bytes32,uint256,address,bytes4,uint256,bytes)":"6ae0bc76","getAuthorizedSenders()":"2408afaa","getForwarder()":"a0042526","isAuthorizedSender(address)":"fa00763a","operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes)":"3c6d41b9","oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)":"40429946","ownerTransferAndCall(address,uint256,bytes)":"902fc370","setAuthorizedSenders(address[])":"ee56997b","withdraw(address,uint256)":"f3fef3a3","withdrawable()":"50188301"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"cancelOracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"fulfillOracleRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"fulfillOracleRequest2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizedSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"}],\"name\":\"isAuthorizedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"specId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"operatorRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"serviceAgreementID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"oracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ownerTransferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"senders\",\"type\":\"address[]\"}],\"name\":\"setAuthorizedSenders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":\"OperatorInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ChainlinkRequestInterface {\\n  function oracleRequest(\\n    address sender,\\n    uint256 requestPrice,\\n    bytes32 serviceAgreementID,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function cancelOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration\\n  ) external;\\n}\\n\",\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OracleInterface.sol\\\";\\nimport \\\"./ChainlinkRequestInterface.sol\\\";\\n\\ninterface OperatorInterface is OracleInterface, ChainlinkRequestInterface {\\n  function operatorRequest(\\n    address sender,\\n    uint256 payment,\\n    bytes32 specId,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function fulfillOracleRequest2(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes calldata data\\n  ) external returns (bool);\\n\\n  function ownerTransferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function distributeFunds(address payable[] calldata receivers, uint256[] calldata amounts) external payable;\\n\\n  function getAuthorizedSenders() external returns (address[] memory);\\n\\n  function setAuthorizedSenders(address[] calldata senders) external;\\n\\n  function getForwarder() external returns (address);\\n}\\n\",\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OracleInterface {\\n  function fulfillOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes32 data\\n  ) external returns (bool);\\n\\n  function isAuthorizedSender(address node) external view returns (bool);\\n\\n  function withdraw(address recipient, uint256 amount) external;\\n\\n  function withdrawable() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol":{"OracleInterface":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"fulfillOracleRequest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"node","type":"address"}],"name":"isAuthorizedSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)":"4ab0d190","isAuthorizedSender(address)":"fa00763a","withdraw(address,uint256)":"f3fef3a3","withdrawable()":"50188301"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"fulfillOracleRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"}],\"name\":\"isAuthorizedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":\"OracleInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OracleInterface {\\n  function fulfillOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes32 data\\n  ) external returns (bool);\\n\\n  function isAuthorizedSender(address node) external view returns (bool);\\n\\n  function withdraw(address recipient, uint256 amount) external;\\n\\n  function withdrawable() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol":{"PointerInterface":{"abi":[{"inputs":[],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAddress()":"38cc4831"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":\"PointerInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface PointerInterface {\\n  function getAddress() external view returns (address);\\n}\\n\",\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"VRFCoordinatorV2Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPriceLink","type":"uint96"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"inputs":[],"name":"BASE_FEE","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_PRICE_LINK","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint96","name":"_amount","type":"uint96"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint16","name":"_minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"_callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"_numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"_subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fundSubscription(uint64,uint96)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1523":{"entryPoint":null,"id":1523,"parameterSlots":2,"returnSlots":0},"abi_decode_t_uint96_fromMemory":{"entryPoint":150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint96t_uint96_fromMemory":{"entryPoint":173,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":244,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":268,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":273,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1228:22","statements":[{"body":{"nodeType":"YulBlock","src":"69:79:22","statements":[{"nodeType":"YulAssignment","src":"79:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"94:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:22"},"nodeType":"YulFunctionCall","src":"88:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"79:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"136:5:22"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"110:25:22"},"nodeType":"YulFunctionCall","src":"110:32:22"},"nodeType":"YulExpressionStatement","src":"110:32:22"}]},"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"47:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"55:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"63:5:22","type":""}],"src":"7:141:22"},{"body":{"nodeType":"YulBlock","src":"246:411:22","statements":[{"body":{"nodeType":"YulBlock","src":"292:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"294:77:22"},"nodeType":"YulFunctionCall","src":"294:79:22"},"nodeType":"YulExpressionStatement","src":"294:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"267:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"276:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"263:3:22"},"nodeType":"YulFunctionCall","src":"263:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"288:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"259:3:22"},"nodeType":"YulFunctionCall","src":"259:32:22"},"nodeType":"YulIf","src":"256:119:22"},{"nodeType":"YulBlock","src":"385:127:22","statements":[{"nodeType":"YulVariableDeclaration","src":"400:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"414:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"404:6:22","type":""}]},{"nodeType":"YulAssignment","src":"429:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"474:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"485:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"470:3:22"},"nodeType":"YulFunctionCall","src":"470:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"494:7:22"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"439:30:22"},"nodeType":"YulFunctionCall","src":"439:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"429:6:22"}]}]},{"nodeType":"YulBlock","src":"522:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"537:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"551:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"541:6:22","type":""}]},{"nodeType":"YulAssignment","src":"567:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"612:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"623:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"608:3:22"},"nodeType":"YulFunctionCall","src":"608:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"632:7:22"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"577:30:22"},"nodeType":"YulFunctionCall","src":"577:63:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"567:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint96t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"208:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"219:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"231:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"239:6:22","type":""}],"src":"154:503:22"},{"body":{"nodeType":"YulBlock","src":"703:35:22","statements":[{"nodeType":"YulAssignment","src":"713:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"729:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"723:5:22"},"nodeType":"YulFunctionCall","src":"723:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"713:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"696:6:22","type":""}],"src":"663:75:22"},{"body":{"nodeType":"YulBlock","src":"788:65:22","statements":[{"nodeType":"YulAssignment","src":"798:49:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"813:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"820:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"809:3:22"},"nodeType":"YulFunctionCall","src":"809:38:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"798:7:22"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"770:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"780:7:22","type":""}],"src":"744:109:22"},{"body":{"nodeType":"YulBlock","src":"948:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"965:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"968:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"958:6:22"},"nodeType":"YulFunctionCall","src":"958:12:22"},"nodeType":"YulExpressionStatement","src":"958:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"859:117:22"},{"body":{"nodeType":"YulBlock","src":"1071:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1088:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1091:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1081:6:22"},"nodeType":"YulFunctionCall","src":"1081:12:22"},"nodeType":"YulExpressionStatement","src":"1081:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"982:117:22"},{"body":{"nodeType":"YulBlock","src":"1147:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"1203:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1212:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1215:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1205:6:22"},"nodeType":"YulFunctionCall","src":"1205:12:22"},"nodeType":"YulExpressionStatement","src":"1205:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1170:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1194:5:22"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"1177:16:22"},"nodeType":"YulFunctionCall","src":"1177:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1167:2:22"},"nodeType":"YulFunctionCall","src":"1167:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1160:6:22"},"nodeType":"YulFunctionCall","src":"1160:42:22"},"nodeType":"YulIf","src":"1157:62:22"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1140:5:22","type":""}],"src":"1105:120:22"}]},"contents":"{\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040526001805560646002553480156200001a57600080fd5b506040516200202f3803806200202f8339818101604052810190620000409190620000ad565b816bffffffffffffffffffffffff166080816bffffffffffffffffffffffff1660a01b81525050806bffffffffffffffffffffffff1660a0816bffffffffffffffffffffffff1660a01b8152505050506200012b565b600081519050620000a78162000111565b92915050565b60008060408385031215620000c757620000c66200010c565b5b6000620000d78582860162000096565b9250506020620000ea8582860162000096565b9150509250929050565b60006bffffffffffffffffffffffff82169050919050565b600080fd5b6200011c81620000f4565b81146200012857600080fd5b50565b60805160a01c60a05160a01c611eca620001656000396000818161086c0152610cdc01526000818161031101526108b10152611eca6000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c8063823597401161008c578063a410347f11610066578063a410347f146101eb578063a47c769614610209578063afc69b531461023c578063d7ae1d3014610258576100ce565b806382359740146101955780639f87fad7146101b1578063a21a23e4146101cd576100ce565b8062012291146100d357806304c357cb146100f35780633d18651e1461010f5780635d3b1d301461012d5780637341c10c1461015d578063808974ff14610179575b600080fd5b6100db610274565b6040516100ea939291906117a1565b60405180910390f35b61010d60048036038101906101089190611408565b6102d4565b005b61011761030f565b60405161012491906118f8565b60405180910390f35b61014760048036038101906101429190611320565b610333565b60405161015491906117df565b60405180910390f35b61017760048036038101906101729190611408565b61054f565b005b610193600480360381019061018e919061139b565b61058a565b005b6101af60048036038101906101aa91906113db565b610aaf565b005b6101cb60048036038101906101c69190611408565b610aea565b005b6101d5610b25565b6040516101e291906118dd565b60405180910390f35b6101f3610cda565b60405161020091906118f8565b60405180910390f35b610223600480360381019061021e91906113db565b610cfe565b6040516102339493929190611913565b60405180910390f35b61025660048036038101906102519190611448565b610e9f565b005b610272600480360381019061026d9190611408565b61106a565b005b60008060606003621e8480600067ffffffffffffffff81111561029a57610299611d6d565b5b6040519080825280602002602001820160405280156102c85781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690611761565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60008073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103e5576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008154809291906103fa90611c95565b91905055905060006002600081548092919061041590611c95565b91905055905060405180606001604052808867ffffffffffffffff1681526020018663ffffffff1681526020018563ffffffff168152506004600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168767ffffffffffffffff16897f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858b8b8b604051610539959493929190611853565b60405180910390a4819250505095945050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190611761565b60405180910390fd5b60005a905060006004600085815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90611781565b60405180910390fd5b6000600460008581526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff168152505090506000816040015163ffffffff1667ffffffffffffffff8111156106cd576106cc611d6d565b5b6040519080825280602002602001820160405280156106fb5781602001602082028036833780820191505090505b50905060005b826040015163ffffffff1681101561077157858160405160200161072692919061182a565b6040516020818303038152906040528051906020012060001c82828151811061075257610751611d3e565b5b602002602001018181525050808061076990611c95565b915050610701565b50600080631fe543e360e01b87846040516024016107909291906117fa565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16856020015163ffffffff16836040516108219190611706565b60006040518083038160008787f1925050503d806000811461085f576040519150601f19603f3d011682016040523d82523d6000602084013e610864565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a886108a59190611b4c565b6108af9190611af2565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff166108e89190611a5a565b9050806bffffffffffffffffffffffff1660036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff161015610986576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166109db9190611b80565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600460008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a8385604051610a9c939291906118a6565b60405180910390a2505050505050505050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae190611761565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c90611761565b60405180910390fd5b600080600081819054906101000a900467ffffffffffffffff1680929190610b4c90611cde565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf33604051610cb8919061171d565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610db6576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600067ffffffffffffffff811115610e6157610e60611d6d565b5b604051908082528060200260200182016040528015610e8f5781602001602082028036833780820191505090505b5093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f50576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff16610fe89190611ab0565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f882848461104f9190611ab0565b60405161105d92919061195f565b60405180910390a2505050565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611121576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461119157806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611188919061171d565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff1660405161120f929190611738565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b60008135905061129c81611df3565b92915050565b6000813590506112b181611e0a565b92915050565b6000813590506112c681611e21565b92915050565b6000813590506112db81611e38565b92915050565b6000813590506112f081611e4f565b92915050565b60008135905061130581611e66565b92915050565b60008135905061131a81611e7d565b92915050565b600080600080600060a0868803121561133c5761133b611d9c565b5b600061134a888289016112a2565b955050602061135b888289016112f6565b945050604061136c888289016112b7565b935050606061137d888289016112e1565b925050608061138e888289016112e1565b9150509295509295909350565b600080604083850312156113b2576113b1611d9c565b5b60006113c0858286016112cc565b92505060206113d18582860161128d565b9150509250929050565b6000602082840312156113f1576113f0611d9c565b5b60006113ff848285016112f6565b91505092915050565b6000806040838503121561141f5761141e611d9c565b5b600061142d858286016112f6565b925050602061143e8582860161128d565b9150509250929050565b6000806040838503121561145f5761145e611d9c565b5b600061146d858286016112f6565b925050602061147e8582860161130b565b9150509250929050565b600061149483836114d0565b60208301905092915050565b60006114ac8383611617565b60208301905092915050565b60006114c483836116ac565b60208301905092915050565b6114d981611bb4565b82525050565b6114e881611bb4565b82525050565b60006114f9826119b8565b6115038185611a0b565b935061150e83611988565b8060005b8381101561153f5781516115268882611488565b9750611531836119e4565b925050600181019050611512565b5085935050505092915050565b6000611557826119c3565b6115618185611a1c565b935061156c83611998565b8060005b8381101561159d57815161158488826114a0565b975061158f836119f1565b925050600181019050611570565b5085935050505092915050565b60006115b5826119ce565b6115bf8185611a2d565b93506115ca836119a8565b8060005b838110156115fb5781516115e288826114b8565b97506115ed836119fe565b9250506001810190506115ce565b5085935050505092915050565b61161181611bc6565b82525050565b61162081611bd2565b82525050565b6000611631826119d9565b61163b8185611a3e565b935061164b818560208601611c62565b80840191505092915050565b6000611664600f83611a49565b915061166f82611da1565b602082019050919050565b6000611687601383611a49565b915061169282611dca565b602082019050919050565b6116a681611bdc565b82525050565b6116b581611c0a565b82525050565b6116c481611c0a565b82525050565b6116d381611c14565b82525050565b6116e281611c24565b82525050565b6116f181611c50565b82525050565b61170081611c38565b82525050565b60006117128284611626565b915081905092915050565b600060208201905061173260008301846114df565b92915050565b600060408201905061174d60008301856114df565b61175a60208301846116e8565b9392505050565b6000602082019050818103600083015261177a81611657565b9050919050565b6000602082019050818103600083015261179a8161167a565b9050919050565b60006060820190506117b6600083018661169d565b6117c360208301856116ca565b81810360408301526117d5818461154c565b9050949350505050565b60006020820190506117f460008301846116bb565b92915050565b600060408201905061180f60008301856116bb565b818103602083015261182181846115aa565b90509392505050565b600060408201905061183f60008301856116bb565b61184c60208301846116bb565b9392505050565b600060a08201905061186860008301886116bb565b61187560208301876116bb565b611882604083018661169d565b61188f60608301856116ca565b61189c60808301846116ca565b9695505050505050565b60006060820190506118bb60008301866116bb565b6118c860208301856116f7565b6118d56040830184611608565b949350505050565b60006020820190506118f260008301846116d9565b92915050565b600060208201905061190d60008301846116f7565b92915050565b600060808201905061192860008301876116f7565b61193560208301866116d9565b61194260408301856114df565b818103606083015261195481846114ee565b905095945050505050565b600060408201905061197460008301856116e8565b61198160208301846116e8565b9392505050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611a6582611c0a565b9150611a7083611c0a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611aa557611aa4611d0f565b5b828201905092915050565b6000611abb82611c38565b9150611ac683611c38565b9250826bffffffffffffffffffffffff03821115611ae757611ae6611d0f565b5b828201905092915050565b6000611afd82611c0a565b9150611b0883611c0a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b4157611b40611d0f565b5b828202905092915050565b6000611b5782611c0a565b9150611b6283611c0a565b925082821015611b7557611b74611d0f565b5b828203905092915050565b6000611b8b82611c38565b9150611b9683611c38565b925082821015611ba957611ba8611d0f565b5b828203905092915050565b6000611bbf82611bea565b9050919050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006bffffffffffffffffffffffff82169050919050565b6000611c5b82611c38565b9050919050565b60005b83811015611c80578082015181840152602081019050611c65565b83811115611c8f576000848401525b50505050565b6000611ca082611c0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cd357611cd2611d0f565b5b600182019050919050565b6000611ce982611c24565b915067ffffffffffffffff821415611d0457611d03611d0f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b611dfc81611bb4565b8114611e0757600080fd5b50565b611e1381611bd2565b8114611e1e57600080fd5b50565b611e2a81611bdc565b8114611e3557600080fd5b50565b611e4181611c0a565b8114611e4c57600080fd5b50565b611e5881611c14565b8114611e6357600080fd5b50565b611e6f81611c24565b8114611e7a57600080fd5b50565b611e8681611c38565b8114611e9157600080fd5b5056fea2646970667358221220e97e70024bd54661de69207be3ddaefdbd14d1846190fede500bd89c8bfe377a64736f6c63430008070033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x202F CODESIZE SUB DUP1 PUSH3 0x202F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x40 SWAP2 SWAP1 PUSH3 0xAD JUMP JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SHL DUP2 MSTORE POP POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SHL DUP2 MSTORE POP POP POP POP PUSH3 0x12B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xA7 DUP2 PUSH3 0x111 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xC7 JUMPI PUSH3 0xC6 PUSH3 0x10C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xD7 DUP6 DUP3 DUP7 ADD PUSH3 0x96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xEA DUP6 DUP3 DUP7 ADD PUSH3 0x96 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x11C DUP2 PUSH3 0xF4 JUMP JUMPDEST DUP2 EQ PUSH3 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 SHR PUSH1 0xA0 MLOAD PUSH1 0xA0 SHR PUSH2 0x1ECA PUSH3 0x165 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x86C ADD MSTORE PUSH2 0xCDC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x311 ADD MSTORE PUSH2 0x8B1 ADD MSTORE PUSH2 0x1ECA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA410347F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x258 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x1CD JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x415 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x771 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x726 SWAP3 SWAP2 SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1D3E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x769 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x701 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x864 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x1AF2 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB4C SWAP1 PUSH2 0x1CDE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1191 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129C DUP2 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B1 DUP2 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C6 DUP2 PUSH2 0x1E21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12DB DUP2 PUSH2 0x1E38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F0 DUP2 PUSH2 0x1E4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1305 DUP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x131A DUP2 PUSH2 0x1E7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x133C JUMPI PUSH2 0x133B PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP9 DUP3 DUP10 ADD PUSH2 0x12A2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x135B DUP9 DUP3 DUP10 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x136C DUP9 DUP3 DUP10 ADD PUSH2 0x12B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x137D DUP9 DUP3 DUP10 ADD PUSH2 0x12E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x138E DUP9 DUP3 DUP10 ADD PUSH2 0x12E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP6 DUP3 DUP7 ADD PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D1 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FF DUP5 DUP3 DUP6 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141F JUMPI PUSH2 0x141E PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142D DUP6 DUP3 DUP7 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143E DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145F JUMPI PUSH2 0x145E PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x146D DUP6 DUP3 DUP7 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x147E DUP6 DUP3 DUP7 ADD PUSH2 0x130B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1494 DUP4 DUP4 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AC DUP4 DUP4 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C4 DUP4 DUP4 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14E8 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP3 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1503 DUP2 DUP6 PUSH2 0x1A0B JUMP JUMPDEST SWAP4 POP PUSH2 0x150E DUP4 PUSH2 0x1988 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153F JUMPI DUP2 MLOAD PUSH2 0x1526 DUP9 DUP3 PUSH2 0x1488 JUMP JUMPDEST SWAP8 POP PUSH2 0x1531 DUP4 PUSH2 0x19E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1512 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1557 DUP3 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x1561 DUP2 DUP6 PUSH2 0x1A1C JUMP JUMPDEST SWAP4 POP PUSH2 0x156C DUP4 PUSH2 0x1998 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x159D JUMPI DUP2 MLOAD PUSH2 0x1584 DUP9 DUP3 PUSH2 0x14A0 JUMP JUMPDEST SWAP8 POP PUSH2 0x158F DUP4 PUSH2 0x19F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1570 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B5 DUP3 PUSH2 0x19CE JUMP JUMPDEST PUSH2 0x15BF DUP2 DUP6 PUSH2 0x1A2D JUMP JUMPDEST SWAP4 POP PUSH2 0x15CA DUP4 PUSH2 0x19A8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15FB JUMPI DUP2 MLOAD PUSH2 0x15E2 DUP9 DUP3 PUSH2 0x14B8 JUMP JUMPDEST SWAP8 POP PUSH2 0x15ED DUP4 PUSH2 0x19FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1611 DUP2 PUSH2 0x1BC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1620 DUP2 PUSH2 0x1BD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1631 DUP3 PUSH2 0x19D9 JUMP JUMPDEST PUSH2 0x163B DUP2 DUP6 PUSH2 0x1A3E JUMP JUMPDEST SWAP4 POP PUSH2 0x164B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C62 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1664 PUSH1 0xF DUP4 PUSH2 0x1A49 JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1687 PUSH1 0x13 DUP4 PUSH2 0x1A49 JUMP JUMPDEST SWAP2 POP PUSH2 0x1692 DUP3 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x1BDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16C4 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16E2 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16F1 DUP2 PUSH2 0x1C50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x1C38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 DUP3 DUP5 PUSH2 0x1626 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1732 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x174D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14DF JUMP JUMPDEST PUSH2 0x175A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177A DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179A DUP2 PUSH2 0x167A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17B6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x17C3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x17D5 DUP2 DUP5 PUSH2 0x154C JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1821 DUP2 DUP5 PUSH2 0x15AA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x183F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x184C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1868 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1875 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1882 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x188F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x189C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x16CA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18BB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x18C8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x18D5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1608 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1928 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1935 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x1942 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14DF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1954 DUP2 DUP5 PUSH2 0x14EE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1974 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x1981 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A65 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A70 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC6 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFD DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B08 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B74 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8B DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B96 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP3 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C80 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C65 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C8F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE9 DUP3 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D04 JUMPI PUSH2 0x1D03 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E13 DUP2 PUSH2 0x1BD2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E2A DUP2 PUSH2 0x1BDC JUMP JUMPDEST DUP2 EQ PUSH2 0x1E35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E41 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E58 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E6F DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1C38 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 PUSH31 0x70024BD54661DE69207BE3DDAEFDBD14D1846190FEDE500BD89C8BFE377A64 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"254:5984:12:-:0;;;1144:1;1118:27;;1173:3;1149:27;;1494:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1562:8;1551:19;;;;;;;;;;;;1593:13;1576:30;;;;;;;;;;;;1494:117;;254:5984;;7:141:22;63:5;94:6;88:13;79:22;;110:32;136:5;110:32;:::i;:::-;7:141;;;;:::o;154:503::-;231:6;239;288:2;276:9;267:7;263:23;259:32;256:119;;;294:79;;:::i;:::-;256:119;414:1;439:63;494:7;485:6;474:9;470:22;439:63;:::i;:::-;429:73;;385:127;551:2;577:63;632:7;623:6;612:9;608:22;577:63;:::i;:::-;567:73;;522:128;154:503;;;;;:::o;744:109::-;780:7;820:26;813:5;809:38;798:49;;744:109;;;:::o;982:117::-;1091:1;1088;1081:12;1105:120;1177:23;1194:5;1177:23;:::i;:::-;1170:5;1167:34;1157:62;;1215:1;1212;1205:12;1157:62;1105:120;:::o;254:5984:12:-;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BASE_FEE_1417":{"entryPoint":783,"id":1417,"parameterSlots":0,"returnSlots":0},"@GAS_PRICE_LINK_1419":{"entryPoint":3290,"id":1419,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_1986":{"entryPoint":2735,"id":1986,"parameterSlots":1,"returnSlots":0},"@addConsumer_1949":{"entryPoint":1359,"id":1949,"parameterSlots":2,"returnSlots":0},"@cancelSubscription_1881":{"entryPoint":4202,"id":1881,"parameterSlots":2,"returnSlots":0},"@createSubscription_1808":{"entryPoint":2853,"id":1808,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWords_1670":{"entryPoint":1418,"id":1670,"parameterSlots":2,"returnSlots":0},"@fundSubscription_1715":{"entryPoint":3743,"id":1715,"parameterSlots":2,"returnSlots":0},"@getRequestConfig_1936":{"entryPoint":628,"id":1936,"parameterSlots":0,"returnSlots":3},"@getSubscription_1854":{"entryPoint":3326,"id":1854,"parameterSlots":1,"returnSlots":4},"@removeConsumer_1962":{"entryPoint":2794,"id":1962,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_1780":{"entryPoint":819,"id":1780,"parameterSlots":5,"returnSlots":1},"@requestSubscriptionOwnerTransfer_1975":{"entryPoint":724,"id":1975,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":4749,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":4770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":4791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":4833,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":4854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":4875,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32":{"entryPoint":4896,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_address":{"entryPoint":5019,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64":{"entryPoint":5083,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_address":{"entryPoint":5128,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64t_uint96":{"entryPoint":5192,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":5256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":5280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":5304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":5328,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5343,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":5358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":5452,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":5546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5640,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":5655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack":{"entryPoint":5719,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack":{"entryPoint":5754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":5789,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":5804,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5819,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":5834,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":5849,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":5864,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":5879,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5894,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":5944,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6017,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6049,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6138,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6186,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":6227,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed":{"entryPoint":6310,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":6365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":6392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6419,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6495,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6536,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":6552,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6568,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6584,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":6595,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6606,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6617,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6628,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":6641,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6654,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6667,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":6684,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6701,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6718,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6729,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6746,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":6832,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6898,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6988,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":7040,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7092,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7110,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7122,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":7132,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7178,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":7188,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":7204,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":7224,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":7248,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":7266,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":7317,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":7390,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7439,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7486,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7533,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7580,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9":{"entryPoint":7585,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0":{"entryPoint":7626,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7667,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7690,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":7713,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7736,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":7759,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":7782,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":7805,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22250:22","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:22","statements":[{"nodeType":"YulAssignment","src":"69:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:22"},"nodeType":"YulFunctionCall","src":"78:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:22"},"nodeType":"YulFunctionCall","src":"107:33:22"},"nodeType":"YulExpressionStatement","src":"107:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:22","type":""}],"src":"7:139:22"},{"body":{"nodeType":"YulBlock","src":"204:87:22","statements":[{"nodeType":"YulAssignment","src":"214:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:22"},"nodeType":"YulFunctionCall","src":"223:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:22"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"252:26:22"},"nodeType":"YulFunctionCall","src":"252:33:22"},"nodeType":"YulExpressionStatement","src":"252:33:22"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:22","type":""}],"src":"152:139:22"},{"body":{"nodeType":"YulBlock","src":"348:86:22","statements":[{"nodeType":"YulAssignment","src":"358:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"380:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"367:12:22"},"nodeType":"YulFunctionCall","src":"367:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"358:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"422:5:22"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"396:25:22"},"nodeType":"YulFunctionCall","src":"396:32:22"},"nodeType":"YulExpressionStatement","src":"396:32:22"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"326:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"334:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"342:5:22","type":""}],"src":"297:137:22"},{"body":{"nodeType":"YulBlock","src":"492:87:22","statements":[{"nodeType":"YulAssignment","src":"502:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"524:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"511:12:22"},"nodeType":"YulFunctionCall","src":"511:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"502:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"567:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"540:26:22"},"nodeType":"YulFunctionCall","src":"540:33:22"},"nodeType":"YulExpressionStatement","src":"540:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"470:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"478:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"486:5:22","type":""}],"src":"440:139:22"},{"body":{"nodeType":"YulBlock","src":"636:86:22","statements":[{"nodeType":"YulAssignment","src":"646:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"668:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"655:12:22"},"nodeType":"YulFunctionCall","src":"655:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"646:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"710:5:22"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"684:25:22"},"nodeType":"YulFunctionCall","src":"684:32:22"},"nodeType":"YulExpressionStatement","src":"684:32:22"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"614:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"622:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"630:5:22","type":""}],"src":"585:137:22"},{"body":{"nodeType":"YulBlock","src":"779:86:22","statements":[{"nodeType":"YulAssignment","src":"789:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"811:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"798:12:22"},"nodeType":"YulFunctionCall","src":"798:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"789:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"853:5:22"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"827:25:22"},"nodeType":"YulFunctionCall","src":"827:32:22"},"nodeType":"YulExpressionStatement","src":"827:32:22"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"757:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"765:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"773:5:22","type":""}],"src":"728:137:22"},{"body":{"nodeType":"YulBlock","src":"922:86:22","statements":[{"nodeType":"YulAssignment","src":"932:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"954:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"941:12:22"},"nodeType":"YulFunctionCall","src":"941:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"932:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"996:5:22"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"970:25:22"},"nodeType":"YulFunctionCall","src":"970:32:22"},"nodeType":"YulExpressionStatement","src":"970:32:22"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"900:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"908:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"916:5:22","type":""}],"src":"871:137:22"},{"body":{"nodeType":"YulBlock","src":"1144:773:22","statements":[{"body":{"nodeType":"YulBlock","src":"1191:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1193:77:22"},"nodeType":"YulFunctionCall","src":"1193:79:22"},"nodeType":"YulExpressionStatement","src":"1193:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1165:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1161:3:22"},"nodeType":"YulFunctionCall","src":"1161:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1186:3:22","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1157:3:22"},"nodeType":"YulFunctionCall","src":"1157:33:22"},"nodeType":"YulIf","src":"1154:120:22"},{"nodeType":"YulBlock","src":"1284:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1299:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1313:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1303:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1328:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1363:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1374:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1359:3:22"},"nodeType":"YulFunctionCall","src":"1359:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1383:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1338:20:22"},"nodeType":"YulFunctionCall","src":"1338:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1328:6:22"}]}]},{"nodeType":"YulBlock","src":"1411:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1426:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1440:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1430:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1456:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1490:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1501:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1486:3:22"},"nodeType":"YulFunctionCall","src":"1486:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1510:7:22"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"1466:19:22"},"nodeType":"YulFunctionCall","src":"1466:52:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1456:6:22"}]}]},{"nodeType":"YulBlock","src":"1538:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1553:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1567:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1557:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1583:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:22"},"nodeType":"YulFunctionCall","src":"1613:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:22"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"1593:19:22"},"nodeType":"YulFunctionCall","src":"1593:52:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1583:6:22"}]}]},{"nodeType":"YulBlock","src":"1665:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1680:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1694:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1684:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1710:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1744:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1755:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1740:3:22"},"nodeType":"YulFunctionCall","src":"1740:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1764:7:22"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1720:19:22"},"nodeType":"YulFunctionCall","src":"1720:52:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1710:6:22"}]}]},{"nodeType":"YulBlock","src":"1792:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1807:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1821:3:22","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1811:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1838:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1872:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1883:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1868:3:22"},"nodeType":"YulFunctionCall","src":"1868:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1892:7:22"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1848:19:22"},"nodeType":"YulFunctionCall","src":"1848:52:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1838:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1082:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1093:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1105:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1113:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1121:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1129:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1137:6:22","type":""}],"src":"1014:903:22"},{"body":{"nodeType":"YulBlock","src":"2006:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"2052:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2054:77:22"},"nodeType":"YulFunctionCall","src":"2054:79:22"},"nodeType":"YulExpressionStatement","src":"2054:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:22"},"nodeType":"YulFunctionCall","src":"2023:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:22"},"nodeType":"YulFunctionCall","src":"2019:32:22"},"nodeType":"YulIf","src":"2016:119:22"},{"nodeType":"YulBlock","src":"2145:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2160:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2174:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2164:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2189:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2224:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2235:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2220:3:22"},"nodeType":"YulFunctionCall","src":"2220:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2244:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2199:20:22"},"nodeType":"YulFunctionCall","src":"2199:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2189:6:22"}]}]},{"nodeType":"YulBlock","src":"2272:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2287:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2301:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2291:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2317:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2352:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2363:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2348:3:22"},"nodeType":"YulFunctionCall","src":"2348:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2372:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2327:20:22"},"nodeType":"YulFunctionCall","src":"2327:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2317:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1968:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1979:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1991:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1999:6:22","type":""}],"src":"1923:474:22"},{"body":{"nodeType":"YulBlock","src":"2468:262:22","statements":[{"body":{"nodeType":"YulBlock","src":"2514:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2516:77:22"},"nodeType":"YulFunctionCall","src":"2516:79:22"},"nodeType":"YulExpressionStatement","src":"2516:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2489:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2498:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2485:3:22"},"nodeType":"YulFunctionCall","src":"2485:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2510:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2481:3:22"},"nodeType":"YulFunctionCall","src":"2481:32:22"},"nodeType":"YulIf","src":"2478:119:22"},{"nodeType":"YulBlock","src":"2607:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2622:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2636:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2626:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2651:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2685:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2696:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2681:3:22"},"nodeType":"YulFunctionCall","src":"2681:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2705:7:22"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"2661:19:22"},"nodeType":"YulFunctionCall","src":"2661:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2651:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2438:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2449:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2461:6:22","type":""}],"src":"2403:327:22"},{"body":{"nodeType":"YulBlock","src":"2818:390:22","statements":[{"body":{"nodeType":"YulBlock","src":"2864:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2866:77:22"},"nodeType":"YulFunctionCall","src":"2866:79:22"},"nodeType":"YulExpressionStatement","src":"2866:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2839:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2848:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2835:3:22"},"nodeType":"YulFunctionCall","src":"2835:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2860:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2831:3:22"},"nodeType":"YulFunctionCall","src":"2831:32:22"},"nodeType":"YulIf","src":"2828:119:22"},{"nodeType":"YulBlock","src":"2957:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2972:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2986:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2976:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3001:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3035:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3046:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3031:3:22"},"nodeType":"YulFunctionCall","src":"3031:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3055:7:22"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"3011:19:22"},"nodeType":"YulFunctionCall","src":"3011:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3001:6:22"}]}]},{"nodeType":"YulBlock","src":"3083:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3098:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3112:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3102:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3128:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3163:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3174:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3159:3:22"},"nodeType":"YulFunctionCall","src":"3159:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3183:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3138:20:22"},"nodeType":"YulFunctionCall","src":"3138:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3128:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2780:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2791:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2803:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2811:6:22","type":""}],"src":"2736:472:22"},{"body":{"nodeType":"YulBlock","src":"3295:389:22","statements":[{"body":{"nodeType":"YulBlock","src":"3341:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3343:77:22"},"nodeType":"YulFunctionCall","src":"3343:79:22"},"nodeType":"YulExpressionStatement","src":"3343:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3316:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3325:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3312:3:22"},"nodeType":"YulFunctionCall","src":"3312:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3337:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3308:3:22"},"nodeType":"YulFunctionCall","src":"3308:32:22"},"nodeType":"YulIf","src":"3305:119:22"},{"nodeType":"YulBlock","src":"3434:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3449:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3463:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3453:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3478:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3512:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3523:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3508:3:22"},"nodeType":"YulFunctionCall","src":"3508:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3532:7:22"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"3488:19:22"},"nodeType":"YulFunctionCall","src":"3488:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3478:6:22"}]}]},{"nodeType":"YulBlock","src":"3560:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3575:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3589:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3579:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3605:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3639:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3650:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3635:3:22"},"nodeType":"YulFunctionCall","src":"3635:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3659:7:22"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"3615:19:22"},"nodeType":"YulFunctionCall","src":"3615:52:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3605:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint64t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3257:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3268:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3280:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3288:6:22","type":""}],"src":"3214:470:22"},{"body":{"nodeType":"YulBlock","src":"3770:99:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3814:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"3822:3:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3780:33:22"},"nodeType":"YulFunctionCall","src":"3780:46:22"},"nodeType":"YulExpressionStatement","src":"3780:46:22"},{"nodeType":"YulAssignment","src":"3835:28:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3853:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3858:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3849:3:22"},"nodeType":"YulFunctionCall","src":"3849:14:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3835:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3743:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3751:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3759:10:22","type":""}],"src":"3690:179:22"},{"body":{"nodeType":"YulBlock","src":"3955:99:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3999:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"4007:3:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"3965:33:22"},"nodeType":"YulFunctionCall","src":"3965:46:22"},"nodeType":"YulExpressionStatement","src":"3965:46:22"},{"nodeType":"YulAssignment","src":"4020:28:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4038:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4043:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4034:3:22"},"nodeType":"YulFunctionCall","src":"4034:14:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4020:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3928:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3936:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3944:10:22","type":""}],"src":"3875:179:22"},{"body":{"nodeType":"YulBlock","src":"4140:99:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4184:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"4192:3:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4150:33:22"},"nodeType":"YulFunctionCall","src":"4150:46:22"},"nodeType":"YulExpressionStatement","src":"4150:46:22"},{"nodeType":"YulAssignment","src":"4205:28:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4223:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4228:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4219:3:22"},"nodeType":"YulFunctionCall","src":"4219:14:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4205:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4113:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4121:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4129:10:22","type":""}],"src":"4060:179:22"},{"body":{"nodeType":"YulBlock","src":"4300:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4317:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4340:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4322:17:22"},"nodeType":"YulFunctionCall","src":"4322:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4310:6:22"},"nodeType":"YulFunctionCall","src":"4310:37:22"},"nodeType":"YulExpressionStatement","src":"4310:37:22"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4288:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4295:3:22","type":""}],"src":"4245:108:22"},{"body":{"nodeType":"YulBlock","src":"4424:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4441:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4464:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4446:17:22"},"nodeType":"YulFunctionCall","src":"4446:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4434:6:22"},"nodeType":"YulFunctionCall","src":"4434:37:22"},"nodeType":"YulExpressionStatement","src":"4434:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4412:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4419:3:22","type":""}],"src":"4359:118:22"},{"body":{"nodeType":"YulBlock","src":"4637:608:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:68:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4709:5:22"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4661:47:22"},"nodeType":"YulFunctionCall","src":"4661:54:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4651:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4724:93:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4805:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4810:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4731:73:22"},"nodeType":"YulFunctionCall","src":"4731:86:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4724:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"4826:71:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4891:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4841:49:22"},"nodeType":"YulFunctionCall","src":"4841:56:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"4830:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4906:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"4920:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4910:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4996:224:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5010:34:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5037:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5031:5:22"},"nodeType":"YulFunctionCall","src":"5031:13:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5014:13:22","type":""}]},{"nodeType":"YulAssignment","src":"5057:70:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5108:13:22"},{"name":"pos","nodeType":"YulIdentifier","src":"5123:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"5064:43:22"},"nodeType":"YulFunctionCall","src":"5064:63:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5057:3:22"}]},{"nodeType":"YulAssignment","src":"5140:70:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5203:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5150:52:22"},"nodeType":"YulFunctionCall","src":"5150:60:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5140:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4958:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"4961:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4955:2:22"},"nodeType":"YulFunctionCall","src":"4955:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4969:18:22","statements":[{"nodeType":"YulAssignment","src":"4971:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4980:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"4983:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4976:3:22"},"nodeType":"YulFunctionCall","src":"4976:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4971:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"4940:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4942:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4951:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4946:1:22","type":""}]}]},"src":"4936:284:22"},{"nodeType":"YulAssignment","src":"5229:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"5236:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5229:3:22"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4616:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4623:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4632:3:22","type":""}],"src":"4513:732:22"},{"body":{"nodeType":"YulBlock","src":"5405:608:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5415:68:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5477:5:22"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5429:47:22"},"nodeType":"YulFunctionCall","src":"5429:54:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5419:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5492:93:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5573:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5578:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5499:73:22"},"nodeType":"YulFunctionCall","src":"5499:86:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5492:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"5594:71:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5659:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5609:49:22"},"nodeType":"YulFunctionCall","src":"5609:56:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5598:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5674:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5688:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5678:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5764:224:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5778:34:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5805:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5799:5:22"},"nodeType":"YulFunctionCall","src":"5799:13:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5782:13:22","type":""}]},{"nodeType":"YulAssignment","src":"5825:70:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5876:13:22"},{"name":"pos","nodeType":"YulIdentifier","src":"5891:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"5832:43:22"},"nodeType":"YulFunctionCall","src":"5832:63:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5825:3:22"}]},{"nodeType":"YulAssignment","src":"5908:70:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5971:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5918:52:22"},"nodeType":"YulFunctionCall","src":"5918:60:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5908:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5726:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"5729:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5723:2:22"},"nodeType":"YulFunctionCall","src":"5723:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5737:18:22","statements":[{"nodeType":"YulAssignment","src":"5739:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5748:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"5751:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5744:3:22"},"nodeType":"YulFunctionCall","src":"5744:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5739:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"5708:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5710:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5719:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5714:1:22","type":""}]}]},"src":"5704:284:22"},{"nodeType":"YulAssignment","src":"5997:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"6004:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5997:3:22"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5384:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5391:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5400:3:22","type":""}],"src":"5281:732:22"},{"body":{"nodeType":"YulBlock","src":"6173:608:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6183:68:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6245:5:22"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6197:47:22"},"nodeType":"YulFunctionCall","src":"6197:54:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6187:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6260:93:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6341:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6346:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6267:73:22"},"nodeType":"YulFunctionCall","src":"6267:86:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6260:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"6362:71:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6427:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6377:49:22"},"nodeType":"YulFunctionCall","src":"6377:56:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"6366:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6442:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"6456:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6446:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6532:224:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6546:34:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6573:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6567:5:22"},"nodeType":"YulFunctionCall","src":"6567:13:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"6550:13:22","type":""}]},{"nodeType":"YulAssignment","src":"6593:70:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6644:13:22"},{"name":"pos","nodeType":"YulIdentifier","src":"6659:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6600:43:22"},"nodeType":"YulFunctionCall","src":"6600:63:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6593:3:22"}]},{"nodeType":"YulAssignment","src":"6676:70:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6739:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6686:52:22"},"nodeType":"YulFunctionCall","src":"6686:60:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6676:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6494:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"6497:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6491:2:22"},"nodeType":"YulFunctionCall","src":"6491:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6505:18:22","statements":[{"nodeType":"YulAssignment","src":"6507:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6516:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"6519:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6512:3:22"},"nodeType":"YulFunctionCall","src":"6512:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6507:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"6476:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6478:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6487:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6482:1:22","type":""}]}]},"src":"6472:284:22"},{"nodeType":"YulAssignment","src":"6765:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"6772:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6765:3:22"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6152:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6159:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6168:3:22","type":""}],"src":"6049:732:22"},{"body":{"nodeType":"YulBlock","src":"6846:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6863:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6883:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6868:14:22"},"nodeType":"YulFunctionCall","src":"6868:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6856:6:22"},"nodeType":"YulFunctionCall","src":"6856:34:22"},"nodeType":"YulExpressionStatement","src":"6856:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6834:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6841:3:22","type":""}],"src":"6787:109:22"},{"body":{"nodeType":"YulBlock","src":"6957:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6974:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6997:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6979:17:22"},"nodeType":"YulFunctionCall","src":"6979:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6967:6:22"},"nodeType":"YulFunctionCall","src":"6967:37:22"},"nodeType":"YulExpressionStatement","src":"6967:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6945:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6952:3:22","type":""}],"src":"6902:108:22"},{"body":{"nodeType":"YulBlock","src":"7124:265:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7134:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7180:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7148:31:22"},"nodeType":"YulFunctionCall","src":"7148:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7138:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7195:95:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7278:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7283:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7202:75:22"},"nodeType":"YulFunctionCall","src":"7202:88:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7195:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7325:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7332:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7321:3:22"},"nodeType":"YulFunctionCall","src":"7321:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"7339:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7344:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7299:21:22"},"nodeType":"YulFunctionCall","src":"7299:52:22"},"nodeType":"YulExpressionStatement","src":"7299:52:22"},{"nodeType":"YulAssignment","src":"7360:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7371:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7376:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7367:3:22"},"nodeType":"YulFunctionCall","src":"7367:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7360:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7105:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7112:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7120:3:22","type":""}],"src":"7016:373:22"},{"body":{"nodeType":"YulBlock","src":"7541:220:22","statements":[{"nodeType":"YulAssignment","src":"7551:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7617:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7622:2:22","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7558:58:22"},"nodeType":"YulFunctionCall","src":"7558:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7723:3:22"}],"functionName":{"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulIdentifier","src":"7634:88:22"},"nodeType":"YulFunctionCall","src":"7634:93:22"},"nodeType":"YulExpressionStatement","src":"7634:93:22"},{"nodeType":"YulAssignment","src":"7736:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7747:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7752:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:22"},"nodeType":"YulFunctionCall","src":"7743:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7736:3:22"}]}]},"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7529:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7537:3:22","type":""}],"src":"7395:366:22"},{"body":{"nodeType":"YulBlock","src":"7913:220:22","statements":[{"nodeType":"YulAssignment","src":"7923:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7989:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7994:2:22","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7930:58:22"},"nodeType":"YulFunctionCall","src":"7930:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7923:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8095:3:22"}],"functionName":{"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulIdentifier","src":"8006:88:22"},"nodeType":"YulFunctionCall","src":"8006:93:22"},"nodeType":"YulExpressionStatement","src":"8006:93:22"},{"nodeType":"YulAssignment","src":"8108:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8119:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8124:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8115:3:22"},"nodeType":"YulFunctionCall","src":"8115:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8108:3:22"}]}]},"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7901:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7909:3:22","type":""}],"src":"7767:366:22"},{"body":{"nodeType":"YulBlock","src":"8202:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8219:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8241:5:22"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"8224:16:22"},"nodeType":"YulFunctionCall","src":"8224:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8212:6:22"},"nodeType":"YulFunctionCall","src":"8212:36:22"},"nodeType":"YulExpressionStatement","src":"8212:36:22"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8190:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8197:3:22","type":""}],"src":"8139:115:22"},{"body":{"nodeType":"YulBlock","src":"8315:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8332:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8355:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8337:17:22"},"nodeType":"YulFunctionCall","src":"8337:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8325:6:22"},"nodeType":"YulFunctionCall","src":"8325:37:22"},"nodeType":"YulExpressionStatement","src":"8325:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8303:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8310:3:22","type":""}],"src":"8260:108:22"},{"body":{"nodeType":"YulBlock","src":"8439:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8456:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8479:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8461:17:22"},"nodeType":"YulFunctionCall","src":"8461:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8449:6:22"},"nodeType":"YulFunctionCall","src":"8449:37:22"},"nodeType":"YulExpressionStatement","src":"8449:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8427:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8434:3:22","type":""}],"src":"8374:118:22"},{"body":{"nodeType":"YulBlock","src":"8561:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8578:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8600:5:22"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"8583:16:22"},"nodeType":"YulFunctionCall","src":"8583:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8571:6:22"},"nodeType":"YulFunctionCall","src":"8571:36:22"},"nodeType":"YulExpressionStatement","src":"8571:36:22"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8549:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8556:3:22","type":""}],"src":"8498:115:22"},{"body":{"nodeType":"YulBlock","src":"8682:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8699:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8721:5:22"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"8704:16:22"},"nodeType":"YulFunctionCall","src":"8704:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8692:6:22"},"nodeType":"YulFunctionCall","src":"8692:36:22"},"nodeType":"YulExpressionStatement","src":"8692:36:22"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8670:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8677:3:22","type":""}],"src":"8619:115:22"},{"body":{"nodeType":"YulBlock","src":"8804:65:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8821:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8856:5:22"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"8826:29:22"},"nodeType":"YulFunctionCall","src":"8826:36:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8814:6:22"},"nodeType":"YulFunctionCall","src":"8814:49:22"},"nodeType":"YulExpressionStatement","src":"8814:49:22"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8792:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8799:3:22","type":""}],"src":"8740:129:22"},{"body":{"nodeType":"YulBlock","src":"8938:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8955:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8977:5:22"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"8960:16:22"},"nodeType":"YulFunctionCall","src":"8960:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8948:6:22"},"nodeType":"YulFunctionCall","src":"8948:36:22"},"nodeType":"YulExpressionStatement","src":"8948:36:22"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8926:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8933:3:22","type":""}],"src":"8875:115:22"},{"body":{"nodeType":"YulBlock","src":"9130:137:22","statements":[{"nodeType":"YulAssignment","src":"9141:100:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9228:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"9237:3:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9148:79:22"},"nodeType":"YulFunctionCall","src":"9148:93:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9141:3:22"}]},{"nodeType":"YulAssignment","src":"9251:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"9258:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9251:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9109:3:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9115:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9126:3:22","type":""}],"src":"8996:271:22"},{"body":{"nodeType":"YulBlock","src":"9371:124:22","statements":[{"nodeType":"YulAssignment","src":"9381:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9393:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9404:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9389:3:22"},"nodeType":"YulFunctionCall","src":"9389:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9381:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9461:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9474:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9485:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9470:3:22"},"nodeType":"YulFunctionCall","src":"9470:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9417:43:22"},"nodeType":"YulFunctionCall","src":"9417:71:22"},"nodeType":"YulExpressionStatement","src":"9417:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9343:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9355:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9366:4:22","type":""}],"src":"9273:222:22"},{"body":{"nodeType":"YulBlock","src":"9626:205:22","statements":[{"nodeType":"YulAssignment","src":"9636:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9648:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9659:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9644:3:22"},"nodeType":"YulFunctionCall","src":"9644:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9636:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9716:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9729:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9740:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9725:3:22"},"nodeType":"YulFunctionCall","src":"9725:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9672:43:22"},"nodeType":"YulFunctionCall","src":"9672:71:22"},"nodeType":"YulExpressionStatement","src":"9672:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9796:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9809:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9820:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9805:3:22"},"nodeType":"YulFunctionCall","src":"9805:18:22"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9753:42:22"},"nodeType":"YulFunctionCall","src":"9753:71:22"},"nodeType":"YulExpressionStatement","src":"9753:71:22"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9590:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9602:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9610:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9621:4:22","type":""}],"src":"9501:330:22"},{"body":{"nodeType":"YulBlock","src":"10008:248:22","statements":[{"nodeType":"YulAssignment","src":"10018:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10030:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10041:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10026:3:22"},"nodeType":"YulFunctionCall","src":"10026:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10018:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10065:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10076:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10061:3:22"},"nodeType":"YulFunctionCall","src":"10061:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10084:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"10090:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10080:3:22"},"nodeType":"YulFunctionCall","src":"10080:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10054:6:22"},"nodeType":"YulFunctionCall","src":"10054:47:22"},"nodeType":"YulExpressionStatement","src":"10054:47:22"},{"nodeType":"YulAssignment","src":"10110:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10244:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10118:124:22"},"nodeType":"YulFunctionCall","src":"10118:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10110:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9988:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10003:4:22","type":""}],"src":"9837:419:22"},{"body":{"nodeType":"YulBlock","src":"10433:248:22","statements":[{"nodeType":"YulAssignment","src":"10443:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10455:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10466:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10451:3:22"},"nodeType":"YulFunctionCall","src":"10451:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10443:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10490:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10501:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10486:3:22"},"nodeType":"YulFunctionCall","src":"10486:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10509:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"10515:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10505:3:22"},"nodeType":"YulFunctionCall","src":"10505:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10479:6:22"},"nodeType":"YulFunctionCall","src":"10479:47:22"},"nodeType":"YulExpressionStatement","src":"10479:47:22"},{"nodeType":"YulAssignment","src":"10535:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10669:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10543:124:22"},"nodeType":"YulFunctionCall","src":"10543:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10535:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10413:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10428:4:22","type":""}],"src":"10262:419:22"},{"body":{"nodeType":"YulBlock","src":"10887:385:22","statements":[{"nodeType":"YulAssignment","src":"10897:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10909:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10920:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10905:3:22"},"nodeType":"YulFunctionCall","src":"10905:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10897:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10975:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10988:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10999:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10984:3:22"},"nodeType":"YulFunctionCall","src":"10984:17:22"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"10933:41:22"},"nodeType":"YulFunctionCall","src":"10933:69:22"},"nodeType":"YulExpressionStatement","src":"10933:69:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11054:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11067:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11078:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11063:3:22"},"nodeType":"YulFunctionCall","src":"11063:18:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11012:41:22"},"nodeType":"YulFunctionCall","src":"11012:70:22"},"nodeType":"YulExpressionStatement","src":"11012:70:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11103:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11114:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11099:3:22"},"nodeType":"YulFunctionCall","src":"11099:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11123:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11129:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11119:3:22"},"nodeType":"YulFunctionCall","src":"11119:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11092:6:22"},"nodeType":"YulFunctionCall","src":"11092:48:22"},"nodeType":"YulExpressionStatement","src":"11092:48:22"},{"nodeType":"YulAssignment","src":"11149:116:22","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11251:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"11260:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11157:93:22"},"nodeType":"YulFunctionCall","src":"11157:108:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11149:4:22"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10843:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10855:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10863:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10871:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10882:4:22","type":""}],"src":"10687:585:22"},{"body":{"nodeType":"YulBlock","src":"11376:124:22","statements":[{"nodeType":"YulAssignment","src":"11386:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11398:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11409:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11394:3:22"},"nodeType":"YulFunctionCall","src":"11394:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11386:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11466:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11479:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11490:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11475:3:22"},"nodeType":"YulFunctionCall","src":"11475:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11422:43:22"},"nodeType":"YulFunctionCall","src":"11422:71:22"},"nodeType":"YulExpressionStatement","src":"11422:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11348:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11360:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11371:4:22","type":""}],"src":"11278:222:22"},{"body":{"nodeType":"YulBlock","src":"11682:307:22","statements":[{"nodeType":"YulAssignment","src":"11692:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11704:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11715:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11700:3:22"},"nodeType":"YulFunctionCall","src":"11700:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11692:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11772:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11785:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11796:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11781:3:22"},"nodeType":"YulFunctionCall","src":"11781:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11728:43:22"},"nodeType":"YulFunctionCall","src":"11728:71:22"},"nodeType":"YulExpressionStatement","src":"11728:71:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11820:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11831:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11816:3:22"},"nodeType":"YulFunctionCall","src":"11816:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11840:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11846:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11836:3:22"},"nodeType":"YulFunctionCall","src":"11836:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11809:6:22"},"nodeType":"YulFunctionCall","src":"11809:48:22"},"nodeType":"YulExpressionStatement","src":"11809:48:22"},{"nodeType":"YulAssignment","src":"11866:116:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11968:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"11977:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11874:93:22"},"nodeType":"YulFunctionCall","src":"11874:108:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11866:4:22"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11646:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11658:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11666:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11677:4:22","type":""}],"src":"11506:483:22"},{"body":{"nodeType":"YulBlock","src":"12121:206:22","statements":[{"nodeType":"YulAssignment","src":"12131:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12143:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12154:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12139:3:22"},"nodeType":"YulFunctionCall","src":"12139:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12131:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12211:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12224:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12235:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12220:3:22"},"nodeType":"YulFunctionCall","src":"12220:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12167:43:22"},"nodeType":"YulFunctionCall","src":"12167:71:22"},"nodeType":"YulExpressionStatement","src":"12167:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12292:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12305:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12316:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12301:3:22"},"nodeType":"YulFunctionCall","src":"12301:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12248:43:22"},"nodeType":"YulFunctionCall","src":"12248:72:22"},"nodeType":"YulExpressionStatement","src":"12248:72:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12085:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12097:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12105:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12116:4:22","type":""}],"src":"11995:332:22"},{"body":{"nodeType":"YulBlock","src":"12537:448:22","statements":[{"nodeType":"YulAssignment","src":"12547:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12559:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12570:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12555:3:22"},"nodeType":"YulFunctionCall","src":"12555:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12547:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12628:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12641:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12652:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12637:3:22"},"nodeType":"YulFunctionCall","src":"12637:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12584:43:22"},"nodeType":"YulFunctionCall","src":"12584:71:22"},"nodeType":"YulExpressionStatement","src":"12584:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12709:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12722:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12733:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12718:3:22"},"nodeType":"YulFunctionCall","src":"12718:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12665:43:22"},"nodeType":"YulFunctionCall","src":"12665:72:22"},"nodeType":"YulExpressionStatement","src":"12665:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12789:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12802:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12813:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:22"},"nodeType":"YulFunctionCall","src":"12798:18:22"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"12747:41:22"},"nodeType":"YulFunctionCall","src":"12747:70:22"},"nodeType":"YulExpressionStatement","src":"12747:70:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12869:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12882:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12893:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12878:3:22"},"nodeType":"YulFunctionCall","src":"12878:18:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"12827:41:22"},"nodeType":"YulFunctionCall","src":"12827:70:22"},"nodeType":"YulExpressionStatement","src":"12827:70:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12949:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12962:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12973:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12958:3:22"},"nodeType":"YulFunctionCall","src":"12958:19:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"12907:41:22"},"nodeType":"YulFunctionCall","src":"12907:71:22"},"nodeType":"YulExpressionStatement","src":"12907:71:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12477:9:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12489:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12497:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12505:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12513:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12521:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12532:4:22","type":""}],"src":"12333:652:22"},{"body":{"nodeType":"YulBlock","src":"13137:280:22","statements":[{"nodeType":"YulAssignment","src":"13147:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13159:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13170:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13155:3:22"},"nodeType":"YulFunctionCall","src":"13155:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13147:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13227:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13240:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13251:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13236:3:22"},"nodeType":"YulFunctionCall","src":"13236:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13183:43:22"},"nodeType":"YulFunctionCall","src":"13183:71:22"},"nodeType":"YulExpressionStatement","src":"13183:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13306:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13319:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13330:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13315:3:22"},"nodeType":"YulFunctionCall","src":"13315:18:22"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"13264:41:22"},"nodeType":"YulFunctionCall","src":"13264:70:22"},"nodeType":"YulExpressionStatement","src":"13264:70:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13382:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13395:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13406:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13391:3:22"},"nodeType":"YulFunctionCall","src":"13391:18:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13344:37:22"},"nodeType":"YulFunctionCall","src":"13344:66:22"},"nodeType":"YulExpressionStatement","src":"13344:66:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13093:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13105:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13113:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13121:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13132:4:22","type":""}],"src":"12991:426:22"},{"body":{"nodeType":"YulBlock","src":"13519:122:22","statements":[{"nodeType":"YulAssignment","src":"13529:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13541:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13552:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13537:3:22"},"nodeType":"YulFunctionCall","src":"13537:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13529:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13607:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13620:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13631:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13616:3:22"},"nodeType":"YulFunctionCall","src":"13616:17:22"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"13565:41:22"},"nodeType":"YulFunctionCall","src":"13565:69:22"},"nodeType":"YulExpressionStatement","src":"13565:69:22"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13491:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13503:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13514:4:22","type":""}],"src":"13423:218:22"},{"body":{"nodeType":"YulBlock","src":"13743:122:22","statements":[{"nodeType":"YulAssignment","src":"13753:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13765:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13776:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13761:3:22"},"nodeType":"YulFunctionCall","src":"13761:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13753:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13831:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13844:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13855:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13840:3:22"},"nodeType":"YulFunctionCall","src":"13840:17:22"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"13789:41:22"},"nodeType":"YulFunctionCall","src":"13789:69:22"},"nodeType":"YulExpressionStatement","src":"13789:69:22"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13715:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13727:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13738:4:22","type":""}],"src":"13647:218:22"},{"body":{"nodeType":"YulBlock","src":"14099:468:22","statements":[{"nodeType":"YulAssignment","src":"14109:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14121:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14132:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14117:3:22"},"nodeType":"YulFunctionCall","src":"14117:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14109:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14188:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14201:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14212:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14197:3:22"},"nodeType":"YulFunctionCall","src":"14197:17:22"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"14146:41:22"},"nodeType":"YulFunctionCall","src":"14146:69:22"},"nodeType":"YulExpressionStatement","src":"14146:69:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14267:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14280:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14291:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14276:3:22"},"nodeType":"YulFunctionCall","src":"14276:18:22"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"14225:41:22"},"nodeType":"YulFunctionCall","src":"14225:70:22"},"nodeType":"YulExpressionStatement","src":"14225:70:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14349:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14362:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14373:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14358:3:22"},"nodeType":"YulFunctionCall","src":"14358:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14305:43:22"},"nodeType":"YulFunctionCall","src":"14305:72:22"},"nodeType":"YulExpressionStatement","src":"14305:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14398:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14409:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14394:3:22"},"nodeType":"YulFunctionCall","src":"14394:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14418:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14424:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14414:3:22"},"nodeType":"YulFunctionCall","src":"14414:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14387:6:22"},"nodeType":"YulFunctionCall","src":"14387:48:22"},"nodeType":"YulExpressionStatement","src":"14387:48:22"},{"nodeType":"YulAssignment","src":"14444:116:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14546:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"14555:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14452:93:22"},"nodeType":"YulFunctionCall","src":"14452:108:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14444:4:22"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14047:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14059:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14067:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14075:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14083:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14094:4:22","type":""}],"src":"13871:696:22"},{"body":{"nodeType":"YulBlock","src":"14697:204:22","statements":[{"nodeType":"YulAssignment","src":"14707:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14719:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14730:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14715:3:22"},"nodeType":"YulFunctionCall","src":"14715:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14707:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14786:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14799:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14810:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14795:3:22"},"nodeType":"YulFunctionCall","src":"14795:17:22"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14743:42:22"},"nodeType":"YulFunctionCall","src":"14743:70:22"},"nodeType":"YulExpressionStatement","src":"14743:70:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14866:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14879:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14890:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14875:3:22"},"nodeType":"YulFunctionCall","src":"14875:18:22"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14823:42:22"},"nodeType":"YulFunctionCall","src":"14823:71:22"},"nodeType":"YulExpressionStatement","src":"14823:71:22"}]},"name":"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14661:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14673:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14681:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14692:4:22","type":""}],"src":"14573:328:22"},{"body":{"nodeType":"YulBlock","src":"14947:35:22","statements":[{"nodeType":"YulAssignment","src":"14957:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14973:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14967:5:22"},"nodeType":"YulFunctionCall","src":"14967:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14957:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"14940:6:22","type":""}],"src":"14907:75:22"},{"body":{"nodeType":"YulBlock","src":"15060:60:22","statements":[{"nodeType":"YulAssignment","src":"15070:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15078:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15070:4:22"}]},{"nodeType":"YulAssignment","src":"15091:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15103:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15108:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15099:3:22"},"nodeType":"YulFunctionCall","src":"15099:14:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15091:4:22"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15047:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15055:4:22","type":""}],"src":"14988:132:22"},{"body":{"nodeType":"YulBlock","src":"15198:60:22","statements":[{"nodeType":"YulAssignment","src":"15208:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15216:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15208:4:22"}]},{"nodeType":"YulAssignment","src":"15229:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15241:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15246:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15237:3:22"},"nodeType":"YulFunctionCall","src":"15237:14:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15229:4:22"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15185:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15193:4:22","type":""}],"src":"15126:132:22"},{"body":{"nodeType":"YulBlock","src":"15336:60:22","statements":[{"nodeType":"YulAssignment","src":"15346:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15354:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15346:4:22"}]},{"nodeType":"YulAssignment","src":"15367:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15379:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15384:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15375:3:22"},"nodeType":"YulFunctionCall","src":"15375:14:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15367:4:22"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15323:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15331:4:22","type":""}],"src":"15264:132:22"},{"body":{"nodeType":"YulBlock","src":"15476:40:22","statements":[{"nodeType":"YulAssignment","src":"15487:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15503:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15497:5:22"},"nodeType":"YulFunctionCall","src":"15497:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15487:6:22"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15459:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15469:6:22","type":""}],"src":"15402:114:22"},{"body":{"nodeType":"YulBlock","src":"15596:40:22","statements":[{"nodeType":"YulAssignment","src":"15607:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15623:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15617:5:22"},"nodeType":"YulFunctionCall","src":"15617:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15607:6:22"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15579:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15589:6:22","type":""}],"src":"15522:114:22"},{"body":{"nodeType":"YulBlock","src":"15716:40:22","statements":[{"nodeType":"YulAssignment","src":"15727:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15743:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15737:5:22"},"nodeType":"YulFunctionCall","src":"15737:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15727:6:22"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15699:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15709:6:22","type":""}],"src":"15642:114:22"},{"body":{"nodeType":"YulBlock","src":"15820:40:22","statements":[{"nodeType":"YulAssignment","src":"15831:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15847:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15841:5:22"},"nodeType":"YulFunctionCall","src":"15841:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15831:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15803:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15813:6:22","type":""}],"src":"15762:98:22"},{"body":{"nodeType":"YulBlock","src":"15941:38:22","statements":[{"nodeType":"YulAssignment","src":"15951:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15963:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15968:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15959:3:22"},"nodeType":"YulFunctionCall","src":"15959:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"15951:4:22"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15928:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"15936:4:22","type":""}],"src":"15866:113:22"},{"body":{"nodeType":"YulBlock","src":"16060:38:22","statements":[{"nodeType":"YulAssignment","src":"16070:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16082:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"16087:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16078:3:22"},"nodeType":"YulFunctionCall","src":"16078:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16070:4:22"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16047:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16055:4:22","type":""}],"src":"15985:113:22"},{"body":{"nodeType":"YulBlock","src":"16179:38:22","statements":[{"nodeType":"YulAssignment","src":"16189:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16201:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"16206:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16197:3:22"},"nodeType":"YulFunctionCall","src":"16197:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16189:4:22"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16166:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16174:4:22","type":""}],"src":"16104:113:22"},{"body":{"nodeType":"YulBlock","src":"16334:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16351:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"16356:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16344:6:22"},"nodeType":"YulFunctionCall","src":"16344:19:22"},"nodeType":"YulExpressionStatement","src":"16344:19:22"},{"nodeType":"YulAssignment","src":"16372:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16391:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"16396:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16387:3:22"},"nodeType":"YulFunctionCall","src":"16387:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16372:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16306:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"16311:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16322:11:22","type":""}],"src":"16223:184:22"},{"body":{"nodeType":"YulBlock","src":"16524:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16541:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"16546:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16534:6:22"},"nodeType":"YulFunctionCall","src":"16534:19:22"},"nodeType":"YulExpressionStatement","src":"16534:19:22"},{"nodeType":"YulAssignment","src":"16562:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16581:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"16586:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16577:3:22"},"nodeType":"YulFunctionCall","src":"16577:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16562:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16496:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"16501:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16512:11:22","type":""}],"src":"16413:184:22"},{"body":{"nodeType":"YulBlock","src":"16714:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16731:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"16736:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16724:6:22"},"nodeType":"YulFunctionCall","src":"16724:19:22"},"nodeType":"YulExpressionStatement","src":"16724:19:22"},{"nodeType":"YulAssignment","src":"16752:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16771:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"16776:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16767:3:22"},"nodeType":"YulFunctionCall","src":"16767:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16752:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16686:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"16691:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16702:11:22","type":""}],"src":"16603:184:22"},{"body":{"nodeType":"YulBlock","src":"16906:34:22","statements":[{"nodeType":"YulAssignment","src":"16916:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"16931:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16916:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16878:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"16883:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16894:11:22","type":""}],"src":"16793:147:22"},{"body":{"nodeType":"YulBlock","src":"17042:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17059:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"17064:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17052:6:22"},"nodeType":"YulFunctionCall","src":"17052:19:22"},"nodeType":"YulExpressionStatement","src":"17052:19:22"},{"nodeType":"YulAssignment","src":"17080:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17099:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"17104:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17095:3:22"},"nodeType":"YulFunctionCall","src":"17095:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17080:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17014:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"17019:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17030:11:22","type":""}],"src":"16946:169:22"},{"body":{"nodeType":"YulBlock","src":"17165:261:22","statements":[{"nodeType":"YulAssignment","src":"17175:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17198:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17180:17:22"},"nodeType":"YulFunctionCall","src":"17180:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17175:1:22"}]},{"nodeType":"YulAssignment","src":"17209:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17232:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17214:17:22"},"nodeType":"YulFunctionCall","src":"17214:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17209:1:22"}]},{"body":{"nodeType":"YulBlock","src":"17372:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17374:16:22"},"nodeType":"YulFunctionCall","src":"17374:18:22"},"nodeType":"YulExpressionStatement","src":"17374:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17293:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17300:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17368:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17296:3:22"},"nodeType":"YulFunctionCall","src":"17296:74:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17290:2:22"},"nodeType":"YulFunctionCall","src":"17290:81:22"},"nodeType":"YulIf","src":"17287:107:22"},{"nodeType":"YulAssignment","src":"17404:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17415:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"17418:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:22"},"nodeType":"YulFunctionCall","src":"17411:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17404:3:22"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17152:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"17155:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17161:3:22","type":""}],"src":"17121:305:22"},{"body":{"nodeType":"YulBlock","src":"17475:219:22","statements":[{"nodeType":"YulAssignment","src":"17485:24:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17507:1:22"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"17490:16:22"},"nodeType":"YulFunctionCall","src":"17490:19:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17485:1:22"}]},{"nodeType":"YulAssignment","src":"17518:24:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17540:1:22"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"17523:16:22"},"nodeType":"YulFunctionCall","src":"17523:19:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17518:1:22"}]},{"body":{"nodeType":"YulBlock","src":"17640:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17642:16:22"},"nodeType":"YulFunctionCall","src":"17642:18:22"},"nodeType":"YulExpressionStatement","src":"17642:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17601:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17608:26:22","type":"","value":"0xffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17636:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17604:3:22"},"nodeType":"YulFunctionCall","src":"17604:34:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17598:2:22"},"nodeType":"YulFunctionCall","src":"17598:41:22"},"nodeType":"YulIf","src":"17595:67:22"},{"nodeType":"YulAssignment","src":"17672:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17683:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"17686:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17679:3:22"},"nodeType":"YulFunctionCall","src":"17679:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17672:3:22"}]}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17462:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"17465:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17471:3:22","type":""}],"src":"17432:262:22"},{"body":{"nodeType":"YulBlock","src":"17748:300:22","statements":[{"nodeType":"YulAssignment","src":"17758:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17781:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17763:17:22"},"nodeType":"YulFunctionCall","src":"17763:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17758:1:22"}]},{"nodeType":"YulAssignment","src":"17792:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17815:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17797:17:22"},"nodeType":"YulFunctionCall","src":"17797:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17792:1:22"}]},{"body":{"nodeType":"YulBlock","src":"17990:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17992:16:22"},"nodeType":"YulFunctionCall","src":"17992:18:22"},"nodeType":"YulExpressionStatement","src":"17992:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17902:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17895:6:22"},"nodeType":"YulFunctionCall","src":"17895:9:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17888:6:22"},"nodeType":"YulFunctionCall","src":"17888:17:22"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17910:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17917:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"17985:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17913:3:22"},"nodeType":"YulFunctionCall","src":"17913:74:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17907:2:22"},"nodeType":"YulFunctionCall","src":"17907:81:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17884:3:22"},"nodeType":"YulFunctionCall","src":"17884:105:22"},"nodeType":"YulIf","src":"17881:131:22"},{"nodeType":"YulAssignment","src":"18022:20:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18037:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"18040:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18033:3:22"},"nodeType":"YulFunctionCall","src":"18033:9:22"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"18022:7:22"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17731:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"17734:1:22","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"17740:7:22","type":""}],"src":"17700:348:22"},{"body":{"nodeType":"YulBlock","src":"18099:146:22","statements":[{"nodeType":"YulAssignment","src":"18109:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18132:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18114:17:22"},"nodeType":"YulFunctionCall","src":"18114:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18109:1:22"}]},{"nodeType":"YulAssignment","src":"18143:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18166:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18148:17:22"},"nodeType":"YulFunctionCall","src":"18148:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18143:1:22"}]},{"body":{"nodeType":"YulBlock","src":"18190:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18192:16:22"},"nodeType":"YulFunctionCall","src":"18192:18:22"},"nodeType":"YulExpressionStatement","src":"18192:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18184:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"18187:1:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18181:2:22"},"nodeType":"YulFunctionCall","src":"18181:8:22"},"nodeType":"YulIf","src":"18178:34:22"},{"nodeType":"YulAssignment","src":"18222:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18234:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"18237:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18230:3:22"},"nodeType":"YulFunctionCall","src":"18230:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18222:4:22"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18085:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"18088:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18094:4:22","type":""}],"src":"18054:191:22"},{"body":{"nodeType":"YulBlock","src":"18295:144:22","statements":[{"nodeType":"YulAssignment","src":"18305:24:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18327:1:22"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"18310:16:22"},"nodeType":"YulFunctionCall","src":"18310:19:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18305:1:22"}]},{"nodeType":"YulAssignment","src":"18338:24:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18360:1:22"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"18343:16:22"},"nodeType":"YulFunctionCall","src":"18343:19:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18338:1:22"}]},{"body":{"nodeType":"YulBlock","src":"18384:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18386:16:22"},"nodeType":"YulFunctionCall","src":"18386:18:22"},"nodeType":"YulExpressionStatement","src":"18386:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18378:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"18381:1:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18375:2:22"},"nodeType":"YulFunctionCall","src":"18375:8:22"},"nodeType":"YulIf","src":"18372:34:22"},{"nodeType":"YulAssignment","src":"18416:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18428:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"18431:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18424:3:22"},"nodeType":"YulFunctionCall","src":"18424:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18416:4:22"}]}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18281:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"18284:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18290:4:22","type":""}],"src":"18251:188:22"},{"body":{"nodeType":"YulBlock","src":"18490:51:22","statements":[{"nodeType":"YulAssignment","src":"18500:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18529:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"18511:17:22"},"nodeType":"YulFunctionCall","src":"18511:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18500:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18472:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18482:7:22","type":""}],"src":"18445:96:22"},{"body":{"nodeType":"YulBlock","src":"18589:48:22","statements":[{"nodeType":"YulAssignment","src":"18599:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18624:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18617:6:22"},"nodeType":"YulFunctionCall","src":"18617:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18610:6:22"},"nodeType":"YulFunctionCall","src":"18610:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18599:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18571:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18581:7:22","type":""}],"src":"18547:90:22"},{"body":{"nodeType":"YulBlock","src":"18688:32:22","statements":[{"nodeType":"YulAssignment","src":"18698:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"18709:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18698:7:22"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18670:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18680:7:22","type":""}],"src":"18643:77:22"},{"body":{"nodeType":"YulBlock","src":"18770:45:22","statements":[{"nodeType":"YulAssignment","src":"18780:29:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18795:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"18802:6:22","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18791:3:22"},"nodeType":"YulFunctionCall","src":"18791:18:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18780:7:22"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18752:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18762:7:22","type":""}],"src":"18726:89:22"},{"body":{"nodeType":"YulBlock","src":"18866:81:22","statements":[{"nodeType":"YulAssignment","src":"18876:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18891:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"18898:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18887:3:22"},"nodeType":"YulFunctionCall","src":"18887:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18876:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18848:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18858:7:22","type":""}],"src":"18821:126:22"},{"body":{"nodeType":"YulBlock","src":"18998:32:22","statements":[{"nodeType":"YulAssignment","src":"19008:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"19019:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19008:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18980:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18990:7:22","type":""}],"src":"18953:77:22"},{"body":{"nodeType":"YulBlock","src":"19080:49:22","statements":[{"nodeType":"YulAssignment","src":"19090:33:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19105:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"19112:10:22","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19101:3:22"},"nodeType":"YulFunctionCall","src":"19101:22:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19090:7:22"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19062:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19072:7:22","type":""}],"src":"19036:93:22"},{"body":{"nodeType":"YulBlock","src":"19179:57:22","statements":[{"nodeType":"YulAssignment","src":"19189:41:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19204:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"19211:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19200:3:22"},"nodeType":"YulFunctionCall","src":"19200:30:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19189:7:22"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19161:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19171:7:22","type":""}],"src":"19135:101:22"},{"body":{"nodeType":"YulBlock","src":"19286:65:22","statements":[{"nodeType":"YulAssignment","src":"19296:49:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19311:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"19318:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19307:3:22"},"nodeType":"YulFunctionCall","src":"19307:38:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19296:7:22"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19268:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19278:7:22","type":""}],"src":"19242:109:22"},{"body":{"nodeType":"YulBlock","src":"19416:52:22","statements":[{"nodeType":"YulAssignment","src":"19426:36:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19456:5:22"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"19439:16:22"},"nodeType":"YulFunctionCall","src":"19439:23:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19426:9:22"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19396:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19406:9:22","type":""}],"src":"19357:111:22"},{"body":{"nodeType":"YulBlock","src":"19523:258:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19533:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"19542:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19537:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"19602:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19627:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"19632:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19623:3:22"},"nodeType":"YulFunctionCall","src":"19623:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19646:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"19651:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19642:3:22"},"nodeType":"YulFunctionCall","src":"19642:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19636:5:22"},"nodeType":"YulFunctionCall","src":"19636:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19616:6:22"},"nodeType":"YulFunctionCall","src":"19616:39:22"},"nodeType":"YulExpressionStatement","src":"19616:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19563:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"19566:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19560:2:22"},"nodeType":"YulFunctionCall","src":"19560:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19574:19:22","statements":[{"nodeType":"YulAssignment","src":"19576:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19585:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"19588:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19581:3:22"},"nodeType":"YulFunctionCall","src":"19581:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19576:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"19556:3:22","statements":[]},"src":"19552:113:22"},{"body":{"nodeType":"YulBlock","src":"19699:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19749:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"19754:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19745:3:22"},"nodeType":"YulFunctionCall","src":"19745:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"19763:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19738:6:22"},"nodeType":"YulFunctionCall","src":"19738:27:22"},"nodeType":"YulExpressionStatement","src":"19738:27:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19680:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"19683:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19677:2:22"},"nodeType":"YulFunctionCall","src":"19677:13:22"},"nodeType":"YulIf","src":"19674:101:22"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19505:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"19510:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"19515:6:22","type":""}],"src":"19474:307:22"},{"body":{"nodeType":"YulBlock","src":"19830:190:22","statements":[{"nodeType":"YulAssignment","src":"19840:33:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19867:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19849:17:22"},"nodeType":"YulFunctionCall","src":"19849:24:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19840:5:22"}]},{"body":{"nodeType":"YulBlock","src":"19963:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19965:16:22"},"nodeType":"YulFunctionCall","src":"19965:18:22"},"nodeType":"YulExpressionStatement","src":"19965:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19888:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"19895:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19885:2:22"},"nodeType":"YulFunctionCall","src":"19885:77:22"},"nodeType":"YulIf","src":"19882:103:22"},{"nodeType":"YulAssignment","src":"19994:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20005:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"20012:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20001:3:22"},"nodeType":"YulFunctionCall","src":"20001:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19994:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19816:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19826:3:22","type":""}],"src":"19787:233:22"},{"body":{"nodeType":"YulBlock","src":"20068:141:22","statements":[{"nodeType":"YulAssignment","src":"20078:32:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20104:5:22"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"20087:16:22"},"nodeType":"YulFunctionCall","src":"20087:23:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20078:5:22"}]},{"body":{"nodeType":"YulBlock","src":"20152:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20154:16:22"},"nodeType":"YulFunctionCall","src":"20154:18:22"},"nodeType":"YulExpressionStatement","src":"20154:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20125:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"20132:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20122:2:22"},"nodeType":"YulFunctionCall","src":"20122:29:22"},"nodeType":"YulIf","src":"20119:55:22"},{"nodeType":"YulAssignment","src":"20183:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20194:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"20201:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20190:3:22"},"nodeType":"YulFunctionCall","src":"20190:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20183:3:22"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20054:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20064:3:22","type":""}],"src":"20026:183:22"},{"body":{"nodeType":"YulBlock","src":"20243:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20260:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20263:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20253:6:22"},"nodeType":"YulFunctionCall","src":"20253:88:22"},"nodeType":"YulExpressionStatement","src":"20253:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20357:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20360:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20350:6:22"},"nodeType":"YulFunctionCall","src":"20350:15:22"},"nodeType":"YulExpressionStatement","src":"20350:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20381:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20384:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20374:6:22"},"nodeType":"YulFunctionCall","src":"20374:15:22"},"nodeType":"YulExpressionStatement","src":"20374:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20215:180:22"},{"body":{"nodeType":"YulBlock","src":"20429:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20446:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20449:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20439:6:22"},"nodeType":"YulFunctionCall","src":"20439:88:22"},"nodeType":"YulExpressionStatement","src":"20439:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20543:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20546:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20536:6:22"},"nodeType":"YulFunctionCall","src":"20536:15:22"},"nodeType":"YulExpressionStatement","src":"20536:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20567:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20570:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20560:6:22"},"nodeType":"YulFunctionCall","src":"20560:15:22"},"nodeType":"YulExpressionStatement","src":"20560:15:22"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20401:180:22"},{"body":{"nodeType":"YulBlock","src":"20615:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20632:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20635:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20625:6:22"},"nodeType":"YulFunctionCall","src":"20625:88:22"},"nodeType":"YulExpressionStatement","src":"20625:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20729:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20732:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20722:6:22"},"nodeType":"YulFunctionCall","src":"20722:15:22"},"nodeType":"YulExpressionStatement","src":"20722:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20753:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20756:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20746:6:22"},"nodeType":"YulFunctionCall","src":"20746:15:22"},"nodeType":"YulExpressionStatement","src":"20746:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"20587:180:22"},{"body":{"nodeType":"YulBlock","src":"20862:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20879:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20882:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20872:6:22"},"nodeType":"YulFunctionCall","src":"20872:12:22"},"nodeType":"YulExpressionStatement","src":"20872:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20773:117:22"},{"body":{"nodeType":"YulBlock","src":"20985:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21002:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21005:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20995:6:22"},"nodeType":"YulFunctionCall","src":"20995:12:22"},"nodeType":"YulExpressionStatement","src":"20995:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"20896:117:22"},{"body":{"nodeType":"YulBlock","src":"21125:59:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21147:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21155:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21143:3:22"},"nodeType":"YulFunctionCall","src":"21143:14:22"},{"hexValue":"6e6f7420696d706c656d656e746564","kind":"string","nodeType":"YulLiteral","src":"21159:17:22","type":"","value":"not implemented"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21136:6:22"},"nodeType":"YulFunctionCall","src":"21136:41:22"},"nodeType":"YulExpressionStatement","src":"21136:41:22"}]},"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21117:6:22","type":""}],"src":"21019:165:22"},{"body":{"nodeType":"YulBlock","src":"21296:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21318:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21326:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21314:3:22"},"nodeType":"YulFunctionCall","src":"21314:14:22"},{"hexValue":"6e6f6e6578697374656e742072657175657374","kind":"string","nodeType":"YulLiteral","src":"21330:21:22","type":"","value":"nonexistent request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21307:6:22"},"nodeType":"YulFunctionCall","src":"21307:45:22"},"nodeType":"YulExpressionStatement","src":"21307:45:22"}]},"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21288:6:22","type":""}],"src":"21190:169:22"},{"body":{"nodeType":"YulBlock","src":"21408:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"21465:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21474:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21477:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21467:6:22"},"nodeType":"YulFunctionCall","src":"21467:12:22"},"nodeType":"YulExpressionStatement","src":"21467:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21431:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21456:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"21438:17:22"},"nodeType":"YulFunctionCall","src":"21438:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21428:2:22"},"nodeType":"YulFunctionCall","src":"21428:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21421:6:22"},"nodeType":"YulFunctionCall","src":"21421:43:22"},"nodeType":"YulIf","src":"21418:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21401:5:22","type":""}],"src":"21365:122:22"},{"body":{"nodeType":"YulBlock","src":"21536:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"21593:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21602:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21605:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21595:6:22"},"nodeType":"YulFunctionCall","src":"21595:12:22"},"nodeType":"YulExpressionStatement","src":"21595:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21559:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21584:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"21566:17:22"},"nodeType":"YulFunctionCall","src":"21566:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21556:2:22"},"nodeType":"YulFunctionCall","src":"21556:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21549:6:22"},"nodeType":"YulFunctionCall","src":"21549:43:22"},"nodeType":"YulIf","src":"21546:63:22"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21529:5:22","type":""}],"src":"21493:122:22"},{"body":{"nodeType":"YulBlock","src":"21663:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"21719:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21728:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21731:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21721:6:22"},"nodeType":"YulFunctionCall","src":"21721:12:22"},"nodeType":"YulExpressionStatement","src":"21721:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21686:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21710:5:22"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"21693:16:22"},"nodeType":"YulFunctionCall","src":"21693:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21683:2:22"},"nodeType":"YulFunctionCall","src":"21683:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21676:6:22"},"nodeType":"YulFunctionCall","src":"21676:42:22"},"nodeType":"YulIf","src":"21673:62:22"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21656:5:22","type":""}],"src":"21621:120:22"},{"body":{"nodeType":"YulBlock","src":"21790:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"21847:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21856:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21859:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21849:6:22"},"nodeType":"YulFunctionCall","src":"21849:12:22"},"nodeType":"YulExpressionStatement","src":"21849:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21813:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21838:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21820:17:22"},"nodeType":"YulFunctionCall","src":"21820:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21810:2:22"},"nodeType":"YulFunctionCall","src":"21810:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21803:6:22"},"nodeType":"YulFunctionCall","src":"21803:43:22"},"nodeType":"YulIf","src":"21800:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21783:5:22","type":""}],"src":"21747:122:22"},{"body":{"nodeType":"YulBlock","src":"21917:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"21973:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21982:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21985:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21975:6:22"},"nodeType":"YulFunctionCall","src":"21975:12:22"},"nodeType":"YulExpressionStatement","src":"21975:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21940:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21964:5:22"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"21947:16:22"},"nodeType":"YulFunctionCall","src":"21947:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21937:2:22"},"nodeType":"YulFunctionCall","src":"21937:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21930:6:22"},"nodeType":"YulFunctionCall","src":"21930:42:22"},"nodeType":"YulIf","src":"21927:62:22"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21910:5:22","type":""}],"src":"21875:120:22"},{"body":{"nodeType":"YulBlock","src":"22043:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"22099:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22108:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22111:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22101:6:22"},"nodeType":"YulFunctionCall","src":"22101:12:22"},"nodeType":"YulExpressionStatement","src":"22101:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22066:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22090:5:22"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"22073:16:22"},"nodeType":"YulFunctionCall","src":"22073:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22063:2:22"},"nodeType":"YulFunctionCall","src":"22063:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22056:6:22"},"nodeType":"YulFunctionCall","src":"22056:42:22"},"nodeType":"YulIf","src":"22053:62:22"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22036:5:22","type":""}],"src":"22001:120:22"},{"body":{"nodeType":"YulBlock","src":"22169:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"22225:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22234:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22237:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22227:6:22"},"nodeType":"YulFunctionCall","src":"22227:12:22"},"nodeType":"YulExpressionStatement","src":"22227:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22192:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22216:5:22"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"22199:16:22"},"nodeType":"YulFunctionCall","src":"22199:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22189:2:22"},"nodeType":"YulFunctionCall","src":"22189:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22182:6:22"},"nodeType":"YulFunctionCall","src":"22182:42:22"},"nodeType":"YulIf","src":"22179:62:22"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22162:5:22","type":""}],"src":"22127:120:22"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64t_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint96(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"not implemented\")\n\n    }\n\n    function store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"nonexistent request\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1417":[{"length":32,"start":785},{"length":32,"start":2225}],"1419":[{"length":32,"start":2156},{"length":32,"start":3292}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ce5760003560e01c8063823597401161008c578063a410347f11610066578063a410347f146101eb578063a47c769614610209578063afc69b531461023c578063d7ae1d3014610258576100ce565b806382359740146101955780639f87fad7146101b1578063a21a23e4146101cd576100ce565b8062012291146100d357806304c357cb146100f35780633d18651e1461010f5780635d3b1d301461012d5780637341c10c1461015d578063808974ff14610179575b600080fd5b6100db610274565b6040516100ea939291906117a1565b60405180910390f35b61010d60048036038101906101089190611408565b6102d4565b005b61011761030f565b60405161012491906118f8565b60405180910390f35b61014760048036038101906101429190611320565b610333565b60405161015491906117df565b60405180910390f35b61017760048036038101906101729190611408565b61054f565b005b610193600480360381019061018e919061139b565b61058a565b005b6101af60048036038101906101aa91906113db565b610aaf565b005b6101cb60048036038101906101c69190611408565b610aea565b005b6101d5610b25565b6040516101e291906118dd565b60405180910390f35b6101f3610cda565b60405161020091906118f8565b60405180910390f35b610223600480360381019061021e91906113db565b610cfe565b6040516102339493929190611913565b60405180910390f35b61025660048036038101906102519190611448565b610e9f565b005b610272600480360381019061026d9190611408565b61106a565b005b60008060606003621e8480600067ffffffffffffffff81111561029a57610299611d6d565b5b6040519080825280602002602001820160405280156102c85781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690611761565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60008073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103e5576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008154809291906103fa90611c95565b91905055905060006002600081548092919061041590611c95565b91905055905060405180606001604052808867ffffffffffffffff1681526020018663ffffffff1681526020018563ffffffff168152506004600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168767ffffffffffffffff16897f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858b8b8b604051610539959493929190611853565b60405180910390a4819250505095945050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190611761565b60405180910390fd5b60005a905060006004600085815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90611781565b60405180910390fd5b6000600460008581526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff168152505090506000816040015163ffffffff1667ffffffffffffffff8111156106cd576106cc611d6d565b5b6040519080825280602002602001820160405280156106fb5781602001602082028036833780820191505090505b50905060005b826040015163ffffffff1681101561077157858160405160200161072692919061182a565b6040516020818303038152906040528051906020012060001c82828151811061075257610751611d3e565b5b602002602001018181525050808061076990611c95565b915050610701565b50600080631fe543e360e01b87846040516024016107909291906117fa565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16856020015163ffffffff16836040516108219190611706565b60006040518083038160008787f1925050503d806000811461085f576040519150601f19603f3d011682016040523d82523d6000602084013e610864565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a886108a59190611b4c565b6108af9190611af2565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff166108e89190611a5a565b9050806bffffffffffffffffffffffff1660036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff161015610986576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166109db9190611b80565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600460008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a8385604051610a9c939291906118a6565b60405180910390a2505050505050505050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae190611761565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c90611761565b60405180910390fd5b600080600081819054906101000a900467ffffffffffffffff1680929190610b4c90611cde565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf33604051610cb8919061171d565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610db6576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600067ffffffffffffffff811115610e6157610e60611d6d565b5b604051908082528060200260200182016040528015610e8f5781602001602082028036833780820191505090505b5093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f50576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff16610fe89190611ab0565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f882848461104f9190611ab0565b60405161105d92919061195f565b60405180910390a2505050565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611121576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461119157806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611188919061171d565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff1660405161120f929190611738565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b60008135905061129c81611df3565b92915050565b6000813590506112b181611e0a565b92915050565b6000813590506112c681611e21565b92915050565b6000813590506112db81611e38565b92915050565b6000813590506112f081611e4f565b92915050565b60008135905061130581611e66565b92915050565b60008135905061131a81611e7d565b92915050565b600080600080600060a0868803121561133c5761133b611d9c565b5b600061134a888289016112a2565b955050602061135b888289016112f6565b945050604061136c888289016112b7565b935050606061137d888289016112e1565b925050608061138e888289016112e1565b9150509295509295909350565b600080604083850312156113b2576113b1611d9c565b5b60006113c0858286016112cc565b92505060206113d18582860161128d565b9150509250929050565b6000602082840312156113f1576113f0611d9c565b5b60006113ff848285016112f6565b91505092915050565b6000806040838503121561141f5761141e611d9c565b5b600061142d858286016112f6565b925050602061143e8582860161128d565b9150509250929050565b6000806040838503121561145f5761145e611d9c565b5b600061146d858286016112f6565b925050602061147e8582860161130b565b9150509250929050565b600061149483836114d0565b60208301905092915050565b60006114ac8383611617565b60208301905092915050565b60006114c483836116ac565b60208301905092915050565b6114d981611bb4565b82525050565b6114e881611bb4565b82525050565b60006114f9826119b8565b6115038185611a0b565b935061150e83611988565b8060005b8381101561153f5781516115268882611488565b9750611531836119e4565b925050600181019050611512565b5085935050505092915050565b6000611557826119c3565b6115618185611a1c565b935061156c83611998565b8060005b8381101561159d57815161158488826114a0565b975061158f836119f1565b925050600181019050611570565b5085935050505092915050565b60006115b5826119ce565b6115bf8185611a2d565b93506115ca836119a8565b8060005b838110156115fb5781516115e288826114b8565b97506115ed836119fe565b9250506001810190506115ce565b5085935050505092915050565b61161181611bc6565b82525050565b61162081611bd2565b82525050565b6000611631826119d9565b61163b8185611a3e565b935061164b818560208601611c62565b80840191505092915050565b6000611664600f83611a49565b915061166f82611da1565b602082019050919050565b6000611687601383611a49565b915061169282611dca565b602082019050919050565b6116a681611bdc565b82525050565b6116b581611c0a565b82525050565b6116c481611c0a565b82525050565b6116d381611c14565b82525050565b6116e281611c24565b82525050565b6116f181611c50565b82525050565b61170081611c38565b82525050565b60006117128284611626565b915081905092915050565b600060208201905061173260008301846114df565b92915050565b600060408201905061174d60008301856114df565b61175a60208301846116e8565b9392505050565b6000602082019050818103600083015261177a81611657565b9050919050565b6000602082019050818103600083015261179a8161167a565b9050919050565b60006060820190506117b6600083018661169d565b6117c360208301856116ca565b81810360408301526117d5818461154c565b9050949350505050565b60006020820190506117f460008301846116bb565b92915050565b600060408201905061180f60008301856116bb565b818103602083015261182181846115aa565b90509392505050565b600060408201905061183f60008301856116bb565b61184c60208301846116bb565b9392505050565b600060a08201905061186860008301886116bb565b61187560208301876116bb565b611882604083018661169d565b61188f60608301856116ca565b61189c60808301846116ca565b9695505050505050565b60006060820190506118bb60008301866116bb565b6118c860208301856116f7565b6118d56040830184611608565b949350505050565b60006020820190506118f260008301846116d9565b92915050565b600060208201905061190d60008301846116f7565b92915050565b600060808201905061192860008301876116f7565b61193560208301866116d9565b61194260408301856114df565b818103606083015261195481846114ee565b905095945050505050565b600060408201905061197460008301856116e8565b61198160208301846116e8565b9392505050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611a6582611c0a565b9150611a7083611c0a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611aa557611aa4611d0f565b5b828201905092915050565b6000611abb82611c38565b9150611ac683611c38565b9250826bffffffffffffffffffffffff03821115611ae757611ae6611d0f565b5b828201905092915050565b6000611afd82611c0a565b9150611b0883611c0a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b4157611b40611d0f565b5b828202905092915050565b6000611b5782611c0a565b9150611b6283611c0a565b925082821015611b7557611b74611d0f565b5b828203905092915050565b6000611b8b82611c38565b9150611b9683611c38565b925082821015611ba957611ba8611d0f565b5b828203905092915050565b6000611bbf82611bea565b9050919050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006bffffffffffffffffffffffff82169050919050565b6000611c5b82611c38565b9050919050565b60005b83811015611c80578082015181840152602081019050611c65565b83811115611c8f576000848401525b50505050565b6000611ca082611c0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cd357611cd2611d0f565b5b600182019050919050565b6000611ce982611c24565b915067ffffffffffffffff821415611d0457611d03611d0f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b611dfc81611bb4565b8114611e0757600080fd5b50565b611e1381611bd2565b8114611e1e57600080fd5b50565b611e2a81611bdc565b8114611e3557600080fd5b50565b611e4181611c0a565b8114611e4c57600080fd5b50565b611e5881611c14565b8114611e6357600080fd5b50565b611e6f81611c24565b8114611e7a57600080fd5b50565b611e8681611c38565b8114611e9157600080fd5b5056fea2646970667358221220e97e70024bd54661de69207be3ddaefdbd14d1846190fede500bd89c8bfe377a64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA410347F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x258 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x1CD JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x415 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x771 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x726 SWAP3 SWAP2 SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1D3E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x769 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x701 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x864 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x1AF2 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB4C SWAP1 PUSH2 0x1CDE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0x1D6D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1191 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129C DUP2 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B1 DUP2 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C6 DUP2 PUSH2 0x1E21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12DB DUP2 PUSH2 0x1E38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F0 DUP2 PUSH2 0x1E4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1305 DUP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x131A DUP2 PUSH2 0x1E7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x133C JUMPI PUSH2 0x133B PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP9 DUP3 DUP10 ADD PUSH2 0x12A2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x135B DUP9 DUP3 DUP10 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x136C DUP9 DUP3 DUP10 ADD PUSH2 0x12B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x137D DUP9 DUP3 DUP10 ADD PUSH2 0x12E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x138E DUP9 DUP3 DUP10 ADD PUSH2 0x12E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP6 DUP3 DUP7 ADD PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D1 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FF DUP5 DUP3 DUP6 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141F JUMPI PUSH2 0x141E PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142D DUP6 DUP3 DUP7 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143E DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145F JUMPI PUSH2 0x145E PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x146D DUP6 DUP3 DUP7 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x147E DUP6 DUP3 DUP7 ADD PUSH2 0x130B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1494 DUP4 DUP4 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AC DUP4 DUP4 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C4 DUP4 DUP4 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14E8 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP3 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1503 DUP2 DUP6 PUSH2 0x1A0B JUMP JUMPDEST SWAP4 POP PUSH2 0x150E DUP4 PUSH2 0x1988 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153F JUMPI DUP2 MLOAD PUSH2 0x1526 DUP9 DUP3 PUSH2 0x1488 JUMP JUMPDEST SWAP8 POP PUSH2 0x1531 DUP4 PUSH2 0x19E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1512 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1557 DUP3 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x1561 DUP2 DUP6 PUSH2 0x1A1C JUMP JUMPDEST SWAP4 POP PUSH2 0x156C DUP4 PUSH2 0x1998 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x159D JUMPI DUP2 MLOAD PUSH2 0x1584 DUP9 DUP3 PUSH2 0x14A0 JUMP JUMPDEST SWAP8 POP PUSH2 0x158F DUP4 PUSH2 0x19F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1570 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B5 DUP3 PUSH2 0x19CE JUMP JUMPDEST PUSH2 0x15BF DUP2 DUP6 PUSH2 0x1A2D JUMP JUMPDEST SWAP4 POP PUSH2 0x15CA DUP4 PUSH2 0x19A8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15FB JUMPI DUP2 MLOAD PUSH2 0x15E2 DUP9 DUP3 PUSH2 0x14B8 JUMP JUMPDEST SWAP8 POP PUSH2 0x15ED DUP4 PUSH2 0x19FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1611 DUP2 PUSH2 0x1BC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1620 DUP2 PUSH2 0x1BD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1631 DUP3 PUSH2 0x19D9 JUMP JUMPDEST PUSH2 0x163B DUP2 DUP6 PUSH2 0x1A3E JUMP JUMPDEST SWAP4 POP PUSH2 0x164B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C62 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1664 PUSH1 0xF DUP4 PUSH2 0x1A49 JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1687 PUSH1 0x13 DUP4 PUSH2 0x1A49 JUMP JUMPDEST SWAP2 POP PUSH2 0x1692 DUP3 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x1BDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16C4 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16E2 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16F1 DUP2 PUSH2 0x1C50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x1C38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 DUP3 DUP5 PUSH2 0x1626 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1732 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x174D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14DF JUMP JUMPDEST PUSH2 0x175A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177A DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179A DUP2 PUSH2 0x167A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17B6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x17C3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x17D5 DUP2 DUP5 PUSH2 0x154C JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1821 DUP2 DUP5 PUSH2 0x15AA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x183F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x184C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1868 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1875 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1882 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x188F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x189C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x16CA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18BB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x18C8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x18D5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1608 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1928 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1935 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x1942 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14DF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1954 DUP2 DUP5 PUSH2 0x14EE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1974 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x1981 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A65 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A70 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC6 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFD DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B08 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP4 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B74 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8B DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B96 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP3 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP3 PUSH2 0x1C38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C80 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C65 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C8F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE9 DUP3 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D04 JUMPI PUSH2 0x1D03 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1BB4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E13 DUP2 PUSH2 0x1BD2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E2A DUP2 PUSH2 0x1BDC JUMP JUMPDEST DUP2 EQ PUSH2 0x1E35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E41 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E58 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E6F DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1C38 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 PUSH31 0x70024BD54661DE69207BE3DDAEFDBD14D1846190FEDE500BD89C8BFE377A64 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"254:5984:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5555:184;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5982:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;317:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3691:718;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5743:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2165:978;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6121:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5861:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4413:269;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4686:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3345:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5086:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5555:184;5638:6;5652;5666:16;5705:1;5708:7;5731:1;5717:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5697:37;;;;;;5555:184;;;:::o;5982:135::-;6087:25;;;;;;;;;;:::i;:::-;;;;;;;;317:32;;;:::o;3691:718::-;3884:7;3944:1;3903:43;;:15;:23;3919:6;3903:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3899:92;;;3963:21;;;;;;;;;;;;;;3899:92;3997:17;4017:15;;:17;;;;;;;;;:::i;:::-;;;;;3997:37;;4040:15;4058:13;;:15;;;;;;;;;:::i;:::-;;;;;4040:33;;4104:82;;;;;;;;4120:6;4104:82;;;;;;4146:17;4104:82;;;;;;4175:9;4104:82;;;;;4080:10;:21;4091:9;4080:21;;;;;;;;;;;:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4366:10;4198:184;;4274:6;4198:184;;4226:8;4198:184;4242:9;4259:7;4288:28;4324:17;4349:9;4198:184;;;;;;;;;;:::i;:::-;;;;;;;;4395:9;4388:16;;;;3691:718;;;;;;;:::o;5743:114::-;5827:25;;;;;;;;;;:::i;:::-;;;;;;;;2165:978;2247:16;2266:9;2247:28;;2317:1;2285:10;:22;2296:10;2285:22;;;;;;;;;;;:28;;;;;;;;;;;;:33;;;2281:83;;;2328:29;;;;;;;;;;:::i;:::-;;;;;;;;2281:83;2369:18;2390:10;:22;2401:10;2390:22;;;;;;;;;;;2369:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:22;2458:3;:12;;;2444:27;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:52;;2482:9;2477:114;2501:3;:12;;;2497:16;;:1;:16;2477:114;;;2568:10;2580:1;2557:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2547:36;;;;;;2539:45;;2528:5;2534:1;2528:8;;;;;;;;:::i;:::-;;;;;;;:56;;;;;2515:3;;;;;:::i;:::-;;;;2477:114;;;;2597:19;2622:20;2668:32;;;2702:10;2714:5;2645:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2622:98;;2727:12;2745:9;:14;;2765:3;:20;;;2745:50;;2787:7;2745:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:69;;;2802:14;2863;2838:39;;2850:9;2839:8;:20;;;;:::i;:::-;2838:39;;;;:::i;:::-;2826:8;:52;;;;;;:::i;:::-;2802:77;;2926:7;2889:44;;:15;:26;2905:3;:9;;;2889:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:44;;;2885:93;;;2950:21;;;;;;;;;;;;;;2885:93;3021:7;2983:15;:26;2999:3;:9;;;2983:26;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3042:10;:22;3053:10;3042:22;;;;;;;;;;;;3034:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3097:10;3076:62;3109:10;3121:7;3130;3076:62;;;;;;;;:::i;:::-;;;;;;;;2241:902;;;;;;;2165:978;;:::o;6121:115::-;6206:25;;;;;;;;;;:::i;:::-;;;;;;;;5861:117;5948:25;;;;;;;;;;:::i;:::-;;;;;;;;4413:269;4470:13;4491:14;;:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4547:45;;;;;;;;4568:10;4547:45;;;;;;4589:1;4547:45;;;;;4513:15;:31;4529:14;;;;;;;;;;;4513:31;;;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:14;;;;;;;;;;4603:47;;;4639:10;4603:47;;;;;;:::i;:::-;;;;;;;;4663:14;;;;;;;;;;4656:21;;4413:269;:::o;353:38::-;;;:::o;4686:396::-;4781:14;4803:15;4826:13;4847:26;4933:1;4892:43;;:15;:23;4908:6;4892:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;4888:92;;;4952:21;;;;;;;;;;;;;;4888:92;4993:15;:23;5009:6;4993:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5026:1;5029:15;:23;5045:6;5029:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;5074:1;5060:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4985:92;;;;;;;;4686:396;;;;;:::o;3345:342::-;3460:1;3419:43;;:15;:23;3435:6;3419:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3415:92;;;3479:21;;;;;;;;;;;;;;3415:92;3512:17;3532:15;:23;3548:6;3532:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;3512:51;;3604:7;3569:15;:23;3585:6;3569:23;;;;;;;;;;;;;;;:31;;;:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3641:6;3622:60;;;3649:10;3674:7;3661:10;:20;;;;:::i;:::-;3622:60;;;;;;;:::i;:::-;;;;;;;;3409:278;3345:342;;:::o;5086:215::-;5173:6;5348:13;5364:15;:23;5380:6;5364:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;5348:45;;5420:1;5403:19;;:5;:19;;;5399:68;;;5439:21;;;;;;;;;;;;;;5399:68;5490:5;5476:19;;:10;:19;;;5472:68;;5527:5;5512:21;;;;;;;;;;;:::i;:::-;;;;;;;;5472:68;5213:6:::1;5192:66;;;5221:3;5226:15;:23;5242:6;5226:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5192:66;;;;;;;:::i;:::-;;;;;;;;5272:15;:23;5288:6;5272:23;;;;;;;;;;;;;;;;5264:32:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5342:209:::0;5086:215;;;:::o;7:139:22:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:137::-;342:5;380:6;367:20;358:29;;396:32;422:5;396:32;:::i;:::-;297:137;;;;:::o;440:139::-;486:5;524:6;511:20;502:29;;540:33;567:5;540:33;:::i;:::-;440:139;;;;:::o;585:137::-;630:5;668:6;655:20;646:29;;684:32;710:5;684:32;:::i;:::-;585:137;;;;:::o;728:::-;773:5;811:6;798:20;789:29;;827:32;853:5;827:32;:::i;:::-;728:137;;;;:::o;871:::-;916:5;954:6;941:20;932:29;;970:32;996:5;970:32;:::i;:::-;871:137;;;;:::o;1014:903::-;1105:6;1113;1121;1129;1137;1186:3;1174:9;1165:7;1161:23;1157:33;1154:120;;;1193:79;;:::i;:::-;1154:120;1313:1;1338:53;1383:7;1374:6;1363:9;1359:22;1338:53;:::i;:::-;1328:63;;1284:117;1440:2;1466:52;1510:7;1501:6;1490:9;1486:22;1466:52;:::i;:::-;1456:62;;1411:117;1567:2;1593:52;1637:7;1628:6;1617:9;1613:22;1593:52;:::i;:::-;1583:62;;1538:117;1694:2;1720:52;1764:7;1755:6;1744:9;1740:22;1720:52;:::i;:::-;1710:62;;1665:117;1821:3;1848:52;1892:7;1883:6;1872:9;1868:22;1848:52;:::i;:::-;1838:62;;1792:118;1014:903;;;;;;;;:::o;1923:474::-;1991:6;1999;2048:2;2036:9;2027:7;2023:23;2019:32;2016:119;;;2054:79;;:::i;:::-;2016:119;2174:1;2199:53;2244:7;2235:6;2224:9;2220:22;2199:53;:::i;:::-;2189:63;;2145:117;2301:2;2327:53;2372:7;2363:6;2352:9;2348:22;2327:53;:::i;:::-;2317:63;;2272:118;1923:474;;;;;:::o;2403:327::-;2461:6;2510:2;2498:9;2489:7;2485:23;2481:32;2478:119;;;2516:79;;:::i;:::-;2478:119;2636:1;2661:52;2705:7;2696:6;2685:9;2681:22;2661:52;:::i;:::-;2651:62;;2607:116;2403:327;;;;:::o;2736:472::-;2803:6;2811;2860:2;2848:9;2839:7;2835:23;2831:32;2828:119;;;2866:79;;:::i;:::-;2828:119;2986:1;3011:52;3055:7;3046:6;3035:9;3031:22;3011:52;:::i;:::-;3001:62;;2957:116;3112:2;3138:53;3183:7;3174:6;3163:9;3159:22;3138:53;:::i;:::-;3128:63;;3083:118;2736:472;;;;;:::o;3214:470::-;3280:6;3288;3337:2;3325:9;3316:7;3312:23;3308:32;3305:119;;;3343:79;;:::i;:::-;3305:119;3463:1;3488:52;3532:7;3523:6;3512:9;3508:22;3488:52;:::i;:::-;3478:62;;3434:116;3589:2;3615:52;3659:7;3650:6;3639:9;3635:22;3615:52;:::i;:::-;3605:62;;3560:117;3214:470;;;;;:::o;3690:179::-;3759:10;3780:46;3822:3;3814:6;3780:46;:::i;:::-;3858:4;3853:3;3849:14;3835:28;;3690:179;;;;:::o;3875:::-;3944:10;3965:46;4007:3;3999:6;3965:46;:::i;:::-;4043:4;4038:3;4034:14;4020:28;;3875:179;;;;:::o;4060:::-;4129:10;4150:46;4192:3;4184:6;4150:46;:::i;:::-;4228:4;4223:3;4219:14;4205:28;;4060:179;;;;:::o;4245:108::-;4322:24;4340:5;4322:24;:::i;:::-;4317:3;4310:37;4245:108;;:::o;4359:118::-;4446:24;4464:5;4446:24;:::i;:::-;4441:3;4434:37;4359:118;;:::o;4513:732::-;4632:3;4661:54;4709:5;4661:54;:::i;:::-;4731:86;4810:6;4805:3;4731:86;:::i;:::-;4724:93;;4841:56;4891:5;4841:56;:::i;:::-;4920:7;4951:1;4936:284;4961:6;4958:1;4955:13;4936:284;;;5037:6;5031:13;5064:63;5123:3;5108:13;5064:63;:::i;:::-;5057:70;;5150:60;5203:6;5150:60;:::i;:::-;5140:70;;4996:224;4983:1;4980;4976:9;4971:14;;4936:284;;;4940:14;5236:3;5229:10;;4637:608;;;4513:732;;;;:::o;5281:::-;5400:3;5429:54;5477:5;5429:54;:::i;:::-;5499:86;5578:6;5573:3;5499:86;:::i;:::-;5492:93;;5609:56;5659:5;5609:56;:::i;:::-;5688:7;5719:1;5704:284;5729:6;5726:1;5723:13;5704:284;;;5805:6;5799:13;5832:63;5891:3;5876:13;5832:63;:::i;:::-;5825:70;;5918:60;5971:6;5918:60;:::i;:::-;5908:70;;5764:224;5751:1;5748;5744:9;5739:14;;5704:284;;;5708:14;6004:3;5997:10;;5405:608;;;5281:732;;;;:::o;6049:::-;6168:3;6197:54;6245:5;6197:54;:::i;:::-;6267:86;6346:6;6341:3;6267:86;:::i;:::-;6260:93;;6377:56;6427:5;6377:56;:::i;:::-;6456:7;6487:1;6472:284;6497:6;6494:1;6491:13;6472:284;;;6573:6;6567:13;6600:63;6659:3;6644:13;6600:63;:::i;:::-;6593:70;;6686:60;6739:6;6686:60;:::i;:::-;6676:70;;6532:224;6519:1;6516;6512:9;6507:14;;6472:284;;;6476:14;6772:3;6765:10;;6173:608;;;6049:732;;;;:::o;6787:109::-;6868:21;6883:5;6868:21;:::i;:::-;6863:3;6856:34;6787:109;;:::o;6902:108::-;6979:24;6997:5;6979:24;:::i;:::-;6974:3;6967:37;6902:108;;:::o;7016:373::-;7120:3;7148:38;7180:5;7148:38;:::i;:::-;7202:88;7283:6;7278:3;7202:88;:::i;:::-;7195:95;;7299:52;7344:6;7339:3;7332:4;7325:5;7321:16;7299:52;:::i;:::-;7376:6;7371:3;7367:16;7360:23;;7124:265;7016:373;;;;:::o;7395:366::-;7537:3;7558:67;7622:2;7617:3;7558:67;:::i;:::-;7551:74;;7634:93;7723:3;7634:93;:::i;:::-;7752:2;7747:3;7743:12;7736:19;;7395:366;;;:::o;7767:::-;7909:3;7930:67;7994:2;7989:3;7930:67;:::i;:::-;7923:74;;8006:93;8095:3;8006:93;:::i;:::-;8124:2;8119:3;8115:12;8108:19;;7767:366;;;:::o;8139:115::-;8224:23;8241:5;8224:23;:::i;:::-;8219:3;8212:36;8139:115;;:::o;8260:108::-;8337:24;8355:5;8337:24;:::i;:::-;8332:3;8325:37;8260:108;;:::o;8374:118::-;8461:24;8479:5;8461:24;:::i;:::-;8456:3;8449:37;8374:118;;:::o;8498:115::-;8583:23;8600:5;8583:23;:::i;:::-;8578:3;8571:36;8498:115;;:::o;8619:::-;8704:23;8721:5;8704:23;:::i;:::-;8699:3;8692:36;8619:115;;:::o;8740:129::-;8826:36;8856:5;8826:36;:::i;:::-;8821:3;8814:49;8740:129;;:::o;8875:115::-;8960:23;8977:5;8960:23;:::i;:::-;8955:3;8948:36;8875:115;;:::o;8996:271::-;9126:3;9148:93;9237:3;9228:6;9148:93;:::i;:::-;9141:100;;9258:3;9251:10;;8996:271;;;;:::o;9273:222::-;9366:4;9404:2;9393:9;9389:18;9381:26;;9417:71;9485:1;9474:9;9470:17;9461:6;9417:71;:::i;:::-;9273:222;;;;:::o;9501:330::-;9621:4;9659:2;9648:9;9644:18;9636:26;;9672:71;9740:1;9729:9;9725:17;9716:6;9672:71;:::i;:::-;9753;9820:2;9809:9;9805:18;9796:6;9753:71;:::i;:::-;9501:330;;;;;:::o;9837:419::-;10003:4;10041:2;10030:9;10026:18;10018:26;;10090:9;10084:4;10080:20;10076:1;10065:9;10061:17;10054:47;10118:131;10244:4;10118:131;:::i;:::-;10110:139;;9837:419;;;:::o;10262:::-;10428:4;10466:2;10455:9;10451:18;10443:26;;10515:9;10509:4;10505:20;10501:1;10490:9;10486:17;10479:47;10543:131;10669:4;10543:131;:::i;:::-;10535:139;;10262:419;;;:::o;10687:585::-;10882:4;10920:2;10909:9;10905:18;10897:26;;10933:69;10999:1;10988:9;10984:17;10975:6;10933:69;:::i;:::-;11012:70;11078:2;11067:9;11063:18;11054:6;11012:70;:::i;:::-;11129:9;11123:4;11119:20;11114:2;11103:9;11099:18;11092:48;11157:108;11260:4;11251:6;11157:108;:::i;:::-;11149:116;;10687:585;;;;;;:::o;11278:222::-;11371:4;11409:2;11398:9;11394:18;11386:26;;11422:71;11490:1;11479:9;11475:17;11466:6;11422:71;:::i;:::-;11278:222;;;;:::o;11506:483::-;11677:4;11715:2;11704:9;11700:18;11692:26;;11728:71;11796:1;11785:9;11781:17;11772:6;11728:71;:::i;:::-;11846:9;11840:4;11836:20;11831:2;11820:9;11816:18;11809:48;11874:108;11977:4;11968:6;11874:108;:::i;:::-;11866:116;;11506:483;;;;;:::o;11995:332::-;12116:4;12154:2;12143:9;12139:18;12131:26;;12167:71;12235:1;12224:9;12220:17;12211:6;12167:71;:::i;:::-;12248:72;12316:2;12305:9;12301:18;12292:6;12248:72;:::i;:::-;11995:332;;;;;:::o;12333:652::-;12532:4;12570:3;12559:9;12555:19;12547:27;;12584:71;12652:1;12641:9;12637:17;12628:6;12584:71;:::i;:::-;12665:72;12733:2;12722:9;12718:18;12709:6;12665:72;:::i;:::-;12747:70;12813:2;12802:9;12798:18;12789:6;12747:70;:::i;:::-;12827;12893:2;12882:9;12878:18;12869:6;12827:70;:::i;:::-;12907:71;12973:3;12962:9;12958:19;12949:6;12907:71;:::i;:::-;12333:652;;;;;;;;:::o;12991:426::-;13132:4;13170:2;13159:9;13155:18;13147:26;;13183:71;13251:1;13240:9;13236:17;13227:6;13183:71;:::i;:::-;13264:70;13330:2;13319:9;13315:18;13306:6;13264:70;:::i;:::-;13344:66;13406:2;13395:9;13391:18;13382:6;13344:66;:::i;:::-;12991:426;;;;;;:::o;13423:218::-;13514:4;13552:2;13541:9;13537:18;13529:26;;13565:69;13631:1;13620:9;13616:17;13607:6;13565:69;:::i;:::-;13423:218;;;;:::o;13647:::-;13738:4;13776:2;13765:9;13761:18;13753:26;;13789:69;13855:1;13844:9;13840:17;13831:6;13789:69;:::i;:::-;13647:218;;;;:::o;13871:696::-;14094:4;14132:3;14121:9;14117:19;14109:27;;14146:69;14212:1;14201:9;14197:17;14188:6;14146:69;:::i;:::-;14225:70;14291:2;14280:9;14276:18;14267:6;14225:70;:::i;:::-;14305:72;14373:2;14362:9;14358:18;14349:6;14305:72;:::i;:::-;14424:9;14418:4;14414:20;14409:2;14398:9;14394:18;14387:48;14452:108;14555:4;14546:6;14452:108;:::i;:::-;14444:116;;13871:696;;;;;;;:::o;14573:328::-;14692:4;14730:2;14719:9;14715:18;14707:26;;14743:70;14810:1;14799:9;14795:17;14786:6;14743:70;:::i;:::-;14823:71;14890:2;14879:9;14875:18;14866:6;14823:71;:::i;:::-;14573:328;;;;;:::o;14988:132::-;15055:4;15078:3;15070:11;;15108:4;15103:3;15099:14;15091:22;;14988:132;;;:::o;15126:::-;15193:4;15216:3;15208:11;;15246:4;15241:3;15237:14;15229:22;;15126:132;;;:::o;15264:::-;15331:4;15354:3;15346:11;;15384:4;15379:3;15375:14;15367:22;;15264:132;;;:::o;15402:114::-;15469:6;15503:5;15497:12;15487:22;;15402:114;;;:::o;15522:::-;15589:6;15623:5;15617:12;15607:22;;15522:114;;;:::o;15642:::-;15709:6;15743:5;15737:12;15727:22;;15642:114;;;:::o;15762:98::-;15813:6;15847:5;15841:12;15831:22;;15762:98;;;:::o;15866:113::-;15936:4;15968;15963:3;15959:14;15951:22;;15866:113;;;:::o;15985:::-;16055:4;16087;16082:3;16078:14;16070:22;;15985:113;;;:::o;16104:::-;16174:4;16206;16201:3;16197:14;16189:22;;16104:113;;;:::o;16223:184::-;16322:11;16356:6;16351:3;16344:19;16396:4;16391:3;16387:14;16372:29;;16223:184;;;;:::o;16413:::-;16512:11;16546:6;16541:3;16534:19;16586:4;16581:3;16577:14;16562:29;;16413:184;;;;:::o;16603:::-;16702:11;16736:6;16731:3;16724:19;16776:4;16771:3;16767:14;16752:29;;16603:184;;;;:::o;16793:147::-;16894:11;16931:3;16916:18;;16793:147;;;;:::o;16946:169::-;17030:11;17064:6;17059:3;17052:19;17104:4;17099:3;17095:14;17080:29;;16946:169;;;;:::o;17121:305::-;17161:3;17180:20;17198:1;17180:20;:::i;:::-;17175:25;;17214:20;17232:1;17214:20;:::i;:::-;17209:25;;17368:1;17300:66;17296:74;17293:1;17290:81;17287:107;;;17374:18;;:::i;:::-;17287:107;17418:1;17415;17411:9;17404:16;;17121:305;;;;:::o;17432:262::-;17471:3;17490:19;17507:1;17490:19;:::i;:::-;17485:24;;17523:19;17540:1;17523:19;:::i;:::-;17518:24;;17636:1;17608:26;17604:34;17601:1;17598:41;17595:67;;;17642:18;;:::i;:::-;17595:67;17686:1;17683;17679:9;17672:16;;17432:262;;;;:::o;17700:348::-;17740:7;17763:20;17781:1;17763:20;:::i;:::-;17758:25;;17797:20;17815:1;17797:20;:::i;:::-;17792:25;;17985:1;17917:66;17913:74;17910:1;17907:81;17902:1;17895:9;17888:17;17884:105;17881:131;;;17992:18;;:::i;:::-;17881:131;18040:1;18037;18033:9;18022:20;;17700:348;;;;:::o;18054:191::-;18094:4;18114:20;18132:1;18114:20;:::i;:::-;18109:25;;18148:20;18166:1;18148:20;:::i;:::-;18143:25;;18187:1;18184;18181:8;18178:34;;;18192:18;;:::i;:::-;18178:34;18237:1;18234;18230:9;18222:17;;18054:191;;;;:::o;18251:188::-;18290:4;18310:19;18327:1;18310:19;:::i;:::-;18305:24;;18343:19;18360:1;18343:19;:::i;:::-;18338:24;;18381:1;18378;18375:8;18372:34;;;18386:18;;:::i;:::-;18372:34;18431:1;18428;18424:9;18416:17;;18251:188;;;;:::o;18445:96::-;18482:7;18511:24;18529:5;18511:24;:::i;:::-;18500:35;;18445:96;;;:::o;18547:90::-;18581:7;18624:5;18617:13;18610:21;18599:32;;18547:90;;;:::o;18643:77::-;18680:7;18709:5;18698:16;;18643:77;;;:::o;18726:89::-;18762:7;18802:6;18795:5;18791:18;18780:29;;18726:89;;;:::o;18821:126::-;18858:7;18898:42;18891:5;18887:54;18876:65;;18821:126;;;:::o;18953:77::-;18990:7;19019:5;19008:16;;18953:77;;;:::o;19036:93::-;19072:7;19112:10;19105:5;19101:22;19090:33;;19036:93;;;:::o;19135:101::-;19171:7;19211:18;19204:5;19200:30;19189:41;;19135:101;;;:::o;19242:109::-;19278:7;19318:26;19311:5;19307:38;19296:49;;19242:109;;;:::o;19357:111::-;19406:9;19439:23;19456:5;19439:23;:::i;:::-;19426:36;;19357:111;;;:::o;19474:307::-;19542:1;19552:113;19566:6;19563:1;19560:13;19552:113;;;19651:1;19646:3;19642:11;19636:18;19632:1;19627:3;19623:11;19616:39;19588:2;19585:1;19581:10;19576:15;;19552:113;;;19683:6;19680:1;19677:13;19674:101;;;19763:1;19754:6;19749:3;19745:16;19738:27;19674:101;19523:258;19474:307;;;:::o;19787:233::-;19826:3;19849:24;19867:5;19849:24;:::i;:::-;19840:33;;19895:66;19888:5;19885:77;19882:103;;;19965:18;;:::i;:::-;19882:103;20012:1;20005:5;20001:13;19994:20;;19787:233;;;:::o;20026:183::-;20064:3;20087:23;20104:5;20087:23;:::i;:::-;20078:32;;20132:18;20125:5;20122:29;20119:55;;;20154:18;;:::i;:::-;20119:55;20201:1;20194:5;20190:13;20183:20;;20026:183;;;:::o;20215:180::-;20263:77;20260:1;20253:88;20360:4;20357:1;20350:15;20384:4;20381:1;20374:15;20401:180;20449:77;20446:1;20439:88;20546:4;20543:1;20536:15;20570:4;20567:1;20560:15;20587:180;20635:77;20632:1;20625:88;20732:4;20729:1;20722:15;20756:4;20753:1;20746:15;20896:117;21005:1;21002;20995:12;21019:165;21159:17;21155:1;21147:6;21143:14;21136:41;21019:165;:::o;21190:169::-;21330:21;21326:1;21318:6;21314:14;21307:45;21190:169;:::o;21365:122::-;21438:24;21456:5;21438:24;:::i;:::-;21431:5;21428:35;21418:63;;21477:1;21474;21467:12;21418:63;21365:122;:::o;21493:::-;21566:24;21584:5;21566:24;:::i;:::-;21559:5;21556:35;21546:63;;21605:1;21602;21595:12;21546:63;21493:122;:::o;21621:120::-;21693:23;21710:5;21693:23;:::i;:::-;21686:5;21683:34;21673:62;;21731:1;21728;21721:12;21673:62;21621:120;:::o;21747:122::-;21820:24;21838:5;21820:24;:::i;:::-;21813:5;21810:35;21800:63;;21859:1;21856;21849:12;21800:63;21747:122;:::o;21875:120::-;21947:23;21964:5;21947:23;:::i;:::-;21940:5;21937:34;21927:62;;21985:1;21982;21975:12;21927:62;21875:120;:::o;22001:::-;22073:23;22090:5;22073:23;:::i;:::-;22066:5;22063:34;22053:62;;22111:1;22108;22101:12;22053:62;22001:120;:::o;22127:::-;22199:23;22216:5;22199:23;:::i;:::-;22192:5;22189:34;22179:62;;22237:1;22234;22227:12;22179:62;22127:120;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1576400","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_FEE()":"infinite","GAS_PRICE_LINK()":"infinite","acceptSubscriptionOwnerTransfer(uint64)":"723","addConsumer(uint64,address)":"1009","cancelSubscription(uint64,address)":"infinite","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fundSubscription(uint64,uint96)":"infinite","getRequestConfig()":"885","getSubscription(uint64)":"infinite","removeConsumer(uint64,address)":"965","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"infinite","requestSubscriptionOwnerTransfer(uint64,address)":"943"}},"methodIdentifiers":{"BASE_FEE()":"3d18651e","GAS_PRICE_LINK()":"a410347f","acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fundSubscription(uint64,uint96)":"afc69b53","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPriceLink\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_PRICE_LINK\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fundSubscription(uint64,uint96)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fundSubscription(uint64,uint96)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":\"VRFCoordinatorV2Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2.\\npragma solidity ^0.8.4;\\n\\nimport \\\"../interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"../VRFConsumerBaseV2.sol\\\";\\n\\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\\n  uint96 public immutable BASE_FEE;\\n  uint96 public immutable GAS_PRICE_LINK;\\n\\n  error InvalidSubscription();\\n  error InsufficientBalance();\\n  error MustBeSubOwner(address owner);\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n\\n  uint64 s_currentSubId;\\n  uint256 s_nextRequestId = 1;\\n  uint256 s_nextPreSeed = 100;\\n  struct Subscription {\\n    address owner;\\n    uint96 balance;\\n  }\\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\\n\\n  struct Request {\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n  }\\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\\n    BASE_FEE = _baseFee;\\n    GAS_PRICE_LINK = _gasPriceLink;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert(\\\"nonexistent request\\\");\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    uint256[] memory words = new uint256[](req.numWords);\\n    for (uint256 i = 0; i < req.numWords; i++) {\\n      words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n    }\\n\\n    VRFConsumerBaseV2 v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, words);\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n\\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\\n    if (s_subscriptions[req.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[req.subId].balance -= payment;\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint96 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += _amount;\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  function requestRandomWords(\\n    bytes32 _keyHash,\\n    uint64 _subId,\\n    uint16 _minimumRequestConfirmations,\\n    uint32 _callbackGasLimit,\\n    uint32 _numWords\\n  ) external override returns (uint256) {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\\n\\n    emit RandomWordsRequested(\\n      _keyHash,\\n      requestId,\\n      preSeed,\\n      _subId,\\n      _minimumRequestConfirmations,\\n      _callbackGasLimit,\\n      _numWords,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  function createSubscription() external override returns (uint64 _subId) {\\n    s_currentSubId++;\\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\\n    return s_currentSubId;\\n  }\\n\\n  function getSubscription(uint64 _subId)\\n    external\\n    view\\n    override\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    )\\n  {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, new address[](0));\\n  }\\n\\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\\n    delete (s_subscriptions[_subId]);\\n  }\\n\\n  modifier onlySubOwner(uint64 _subId) {\\n    address owner = s_subscriptions[_subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  function getRequestConfig()\\n    external\\n    pure\\n    override\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    )\\n  {\\n    return (3, 2000000, new bytes32[](0));\\n  }\\n\\n  function addConsumer(uint64 _subId, address _consumer) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function removeConsumer(uint64 _subId, address _consumer) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n}\\n\",\"keccak256\":\"0xb9d619acd3fe9b3571f7d1601ed6aadb235415fbce395001e122773c0bb3843e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1479,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_currentSubId","offset":0,"slot":"0","type":"t_uint64"},{"astId":1482,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextRequestId","offset":0,"slot":"1","type":"t_uint256"},{"astId":1485,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextPreSeed","offset":0,"slot":"2","type":"t_uint256"},{"astId":1495,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_subscriptions","offset":0,"slot":"3","type":"t_mapping(t_uint64,t_struct(Subscription)1490_storage)"},{"astId":1507,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_requests","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(Request)1502_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_uint256,t_struct(Request)1502_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)1502_storage"},"t_mapping(t_uint64,t_struct(Subscription)1490_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)1490_storage"},"t_struct(Request)1502_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Request","members":[{"astId":1497,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"subId","offset":0,"slot":"0","type":"t_uint64"},{"astId":1499,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"callbackGasLimit","offset":8,"slot":"0","type":"t_uint32"},{"astId":1501,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"numWords","offset":12,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(Subscription)1490_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Subscription","members":[{"astId":1487,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":1489,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"balance","offset":20,"slot":"0","type":"t_uint96"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fundSubscription(uint64,uint96)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"}},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol":{"BufferChainlink":{"abi":[],"devdoc":{"details":"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for writing to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f226e3fb9cf8a3834dca0447961eb7fa2fab31299e26f015e71ff67ac101536064736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0x26 0xE3 0xFB SWAP13 0xF8 LOG3 DUP4 0x4D 0xCA DIV SELFBALANCE SWAP7 0x1E 0xB7 STATICCALL 0x2F 0xAB BALANCE 0x29 SWAP15 0x26 CREATE ISZERO 0xE7 0x1F 0xF6 PUSH27 0xC101536064736F6C63430008070033000000000000000000000000 ","sourceMap":"441:9632:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f226e3fb9cf8a3834dca0447961eb7fa2fab31299e26f015e71ff67ac101536064736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0x26 0xE3 0xFB SWAP13 0xF8 LOG3 DUP4 0x4D 0xCA DIV SELFBALANCE SWAP7 0x1E 0xB7 STATICCALL 0x2F 0xAB BALANCE 0x29 SWAP15 0x26 CREATE ISZERO 0xE7 0x1F 0xF6 PUSH27 0xC101536064736F6C63430008070033000000000000000000000000 ","sourceMap":"441:9632:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"append(struct BufferChainlink.buffer memory,bytes memory)":"infinite","append(struct BufferChainlink.buffer memory,bytes memory,uint256)":"infinite","appendBytes20(struct BufferChainlink.buffer memory,bytes20)":"infinite","appendBytes32(struct BufferChainlink.buffer memory,bytes32)":"infinite","appendInt(struct BufferChainlink.buffer memory,uint256,uint256)":"infinite","appendUint8(struct BufferChainlink.buffer memory,uint8)":"infinite","fromBytes(bytes memory)":"infinite","init(struct BufferChainlink.buffer memory,uint256)":"infinite","max(uint256,uint256)":"infinite","resize(struct BufferChainlink.buffer memory,uint256)":"infinite","truncate(struct BufferChainlink.buffer memory)":"infinite","write(struct BufferChainlink.buffer memory,uint256,bytes memory,uint256)":"infinite","write(struct BufferChainlink.buffer memory,uint256,bytes32,uint256)":"infinite","writeBytes20(struct BufferChainlink.buffer memory,uint256,bytes20)":"infinite","writeInt(struct BufferChainlink.buffer memory,uint256,uint256,uint256)":"infinite","writeUint8(struct BufferChainlink.buffer memory,uint256,uint8)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for writing to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":\"BufferChainlink\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol":{"CBORChainlink":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4883a4b81829bd1f9e257ad7bada840c2eaad767eefa6701bdcd39b1cc697ce64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP9 GASPRICE 0x4B DUP2 DUP3 SWAP12 0xD1 0xF9 0xE2 JUMPI 0xAD PUSH28 0xADA840C2EAAD767EEFA6701BDCD39B1CC697CE64736F6C6343000807 STOP CALLER ","sourceMap":"115:3271:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4883a4b81829bd1f9e257ad7bada840c2eaad767eefa6701bdcd39b1cc697ce64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP9 GASPRICE 0x4B DUP2 DUP3 SWAP12 0xD1 0xF9 0xE2 JUMPI 0xAD PUSH28 0xADA840C2EAAD767EEFA6701BDCD39B1CC697CE64736F6C6343000807 STOP CALLER ","sourceMap":"115:3271:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"encodeBigNum(struct BufferChainlink.buffer memory,uint256)":"infinite","encodeBytes(struct BufferChainlink.buffer memory,bytes memory)":"infinite","encodeFixedNumeric(struct BufferChainlink.buffer memory,uint8,uint64)":"infinite","encodeIndefiniteLengthType(struct BufferChainlink.buffer memory,uint8)":"infinite","encodeInt(struct BufferChainlink.buffer memory,int256)":"infinite","encodeSignedBigNum(struct BufferChainlink.buffer memory,int256)":"infinite","encodeString(struct BufferChainlink.buffer memory,string memory)":"infinite","encodeUInt(struct BufferChainlink.buffer memory,uint256)":"infinite","endSequence(struct BufferChainlink.buffer memory)":"infinite","startArray(struct BufferChainlink.buffer memory)":"infinite","startMap(struct BufferChainlink.buffer memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":\"CBORChainlink\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.19;\\n\\nimport {BufferChainlink} from \\\"./BufferChainlink.sol\\\";\\n\\nlibrary CBORChainlink {\\n  using BufferChainlink for BufferChainlink.buffer;\\n\\n  uint8 private constant MAJOR_TYPE_INT = 0;\\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\\n  uint8 private constant MAJOR_TYPE_STRING = 3;\\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n  uint8 private constant MAJOR_TYPE_MAP = 5;\\n  uint8 private constant MAJOR_TYPE_TAG = 6;\\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\\n    if(value <= 23) {\\n      buf.appendUint8(uint8((major << 5) | value));\\n    } else if (value <= 0xFF) {\\n      buf.appendUint8(uint8((major << 5) | 24));\\n      buf.appendInt(value, 1);\\n    } else if (value <= 0xFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 25));\\n      buf.appendInt(value, 2);\\n    } else if (value <= 0xFFFFFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 26));\\n      buf.appendInt(value, 4);\\n    } else {\\n      buf.appendUint8(uint8((major << 5) | 27));\\n      buf.appendInt(value, 8);\\n    }\\n  }\\n\\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\\n    buf.appendUint8(uint8((major << 5) | 31));\\n  }\\n\\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, value);\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n    }\\n  }\\n\\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\\n    if(value < -0x10000000000000000) {\\n      encodeSignedBigNum(buf, value);\\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, uint(value));\\n    } else if(value >= 0) {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\\n    }\\n  }\\n\\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n    buf.append(value);\\n  }\\n\\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n    encodeBytes(buf, abi.encode(value));\\n  }\\n\\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\\n  }\\n\\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n    buf.append(bytes(value));\\n  }\\n\\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n  }\\n\\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n  }\\n\\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n  }\\n}\\n\",\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol":{"ENSResolver":{"abi":[{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"addr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addr(bytes32)":"3b3b57de"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":\"ENSResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract ENSResolver {\\n  function addr(bytes32 node) public view virtual returns (address);\\n}\\n\",\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/APIConsumer.sol":{"APIConsumer":{"abi":[{"inputs":[{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"bytes32","name":"_jobId","type":"bytes32"},{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"address","name":"_link","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"volume","type":"uint256"}],"name":"DataFullfilled","type":"event"},{"inputs":[{"internalType":"bytes32","name":"_requestId","type":"bytes32"},{"internalType":"uint256","name":"_volume","type":"uint256"}],"name":"fulfill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestVolumeData","outputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"volume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawLink","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"_fee":"- node operator price per API call / data request","_jobId":"- specific job for :_oracle: to run; each job is unique and returns different types of data","_link":"- LINK token address on the corresponding network Network: Goerli Oracle: 0xCC79157eb46F5624204f47AB42b3906cAA40eaB7 Job ID: ca98366cc7314957b8c012c72f05aeeb Fee: 0.1 LINK","_oracle":"- address of the specific Chainlink node that a contract makes an API call from"}},"fulfill(bytes32,uint256)":{"params":{"_requestId":"- id of the request","_volume":"- response; requested 24h trading volume of ETH in USD"}},"requestVolumeData()":{"returns":{"requestId":"- id of the request"}},"withdrawLink()":{"details":"Implement a withdraw function to avoid locking your LINK in the contract"}},"title":"The APIConsumer contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_3029":{"entryPoint":null,"id":3029,"parameterSlots":4,"returnSlots":0},"@setChainlinkToken_669":{"entryPoint":403,"id":669,"parameterSlots":1,"returnSlots":0},"@setPublicChainlinkToken_682":{"entryPoint":235,"id":682,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes32t_uint256t_address_fromMemory":{"entryPoint":590,"id":null,"parameterSlots":2,"returnSlots":4},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":704,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":724,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":734,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":766,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":776,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":781,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":807,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":833,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2745:22","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:22","statements":[{"nodeType":"YulAssignment","src":"80:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:22"},"nodeType":"YulFunctionCall","src":"89:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:22"},"nodeType":"YulFunctionCall","src":"111:33:22"},"nodeType":"YulExpressionStatement","src":"111:33:22"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:22","type":""}],"src":"7:143:22"},{"body":{"nodeType":"YulBlock","src":"219:80:22","statements":[{"nodeType":"YulAssignment","src":"229:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"244:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"238:5:22"},"nodeType":"YulFunctionCall","src":"238:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"287:5:22"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"260:26:22"},"nodeType":"YulFunctionCall","src":"260:33:22"},"nodeType":"YulExpressionStatement","src":"260:33:22"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"197:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"205:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"213:5:22","type":""}],"src":"156:143:22"},{"body":{"nodeType":"YulBlock","src":"368:80:22","statements":[{"nodeType":"YulAssignment","src":"378:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"393:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"387:5:22"},"nodeType":"YulFunctionCall","src":"387:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"378:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"436:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"409:26:22"},"nodeType":"YulFunctionCall","src":"409:33:22"},"nodeType":"YulExpressionStatement","src":"409:33:22"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"346:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"354:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"362:5:22","type":""}],"src":"305:143:22"},{"body":{"nodeType":"YulBlock","src":"531:274:22","statements":[{"body":{"nodeType":"YulBlock","src":"577:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"579:77:22"},"nodeType":"YulFunctionCall","src":"579:79:22"},"nodeType":"YulExpressionStatement","src":"579:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"552:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"561:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"548:3:22"},"nodeType":"YulFunctionCall","src":"548:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"573:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"544:3:22"},"nodeType":"YulFunctionCall","src":"544:32:22"},"nodeType":"YulIf","src":"541:119:22"},{"nodeType":"YulBlock","src":"670:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"685:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"699:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"689:6:22","type":""}]},{"nodeType":"YulAssignment","src":"714:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"760:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"771:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"756:3:22"},"nodeType":"YulFunctionCall","src":"756:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"780:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"724:31:22"},"nodeType":"YulFunctionCall","src":"724:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"714:6:22"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"501:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"512:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"524:6:22","type":""}],"src":"454:351:22"},{"body":{"nodeType":"YulBlock","src":"939:692:22","statements":[{"body":{"nodeType":"YulBlock","src":"986:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"988:77:22"},"nodeType":"YulFunctionCall","src":"988:79:22"},"nodeType":"YulExpressionStatement","src":"988:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:22"},"nodeType":"YulFunctionCall","src":"956:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"981:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:22"},"nodeType":"YulFunctionCall","src":"952:33:22"},"nodeType":"YulIf","src":"949:120:22"},{"nodeType":"YulBlock","src":"1079:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1094:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1108:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1098:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1123:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1169:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1180:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1165:3:22"},"nodeType":"YulFunctionCall","src":"1165:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1189:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1133:31:22"},"nodeType":"YulFunctionCall","src":"1133:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1123:6:22"}]}]},{"nodeType":"YulBlock","src":"1217:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1232:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1246:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1236:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1262:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1308:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1319:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1304:3:22"},"nodeType":"YulFunctionCall","src":"1304:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1328:7:22"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"1272:31:22"},"nodeType":"YulFunctionCall","src":"1272:64:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1262:6:22"}]}]},{"nodeType":"YulBlock","src":"1356:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1371:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1385:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1375:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1401:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1447:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1458:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1443:3:22"},"nodeType":"YulFunctionCall","src":"1443:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1467:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1411:31:22"},"nodeType":"YulFunctionCall","src":"1411:64:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1401:6:22"}]}]},{"nodeType":"YulBlock","src":"1495:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1510:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1524:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1514:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1540:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1586:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1597:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:22"},"nodeType":"YulFunctionCall","src":"1582:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1606:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1550:31:22"},"nodeType":"YulFunctionCall","src":"1550:64:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1540:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"885:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"896:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"908:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"916:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"924:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"932:6:22","type":""}],"src":"811:820:22"},{"body":{"nodeType":"YulBlock","src":"1677:35:22","statements":[{"nodeType":"YulAssignment","src":"1687:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1703:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1697:5:22"},"nodeType":"YulFunctionCall","src":"1697:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1687:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1670:6:22","type":""}],"src":"1637:75:22"},{"body":{"nodeType":"YulBlock","src":"1763:51:22","statements":[{"nodeType":"YulAssignment","src":"1773:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1802:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1784:17:22"},"nodeType":"YulFunctionCall","src":"1784:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1773:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1745:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1755:7:22","type":""}],"src":"1718:96:22"},{"body":{"nodeType":"YulBlock","src":"1865:32:22","statements":[{"nodeType":"YulAssignment","src":"1875:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1886:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1875:7:22"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1847:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1857:7:22","type":""}],"src":"1820:77:22"},{"body":{"nodeType":"YulBlock","src":"1948:81:22","statements":[{"nodeType":"YulAssignment","src":"1958:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1973:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1980:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1969:3:22"},"nodeType":"YulFunctionCall","src":"1969:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1958:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1930:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1940:7:22","type":""}],"src":"1903:126:22"},{"body":{"nodeType":"YulBlock","src":"2080:32:22","statements":[{"nodeType":"YulAssignment","src":"2090:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"2101:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2090:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2062:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2072:7:22","type":""}],"src":"2035:77:22"},{"body":{"nodeType":"YulBlock","src":"2207:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2224:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2227:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2217:6:22"},"nodeType":"YulFunctionCall","src":"2217:12:22"},"nodeType":"YulExpressionStatement","src":"2217:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2118:117:22"},{"body":{"nodeType":"YulBlock","src":"2330:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2347:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2350:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2340:6:22"},"nodeType":"YulFunctionCall","src":"2340:12:22"},"nodeType":"YulExpressionStatement","src":"2340:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2241:117:22"},{"body":{"nodeType":"YulBlock","src":"2407:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"2464:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2473:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2476:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2466:6:22"},"nodeType":"YulFunctionCall","src":"2466:12:22"},"nodeType":"YulExpressionStatement","src":"2466:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2430:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2455:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2437:17:22"},"nodeType":"YulFunctionCall","src":"2437:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2427:2:22"},"nodeType":"YulFunctionCall","src":"2427:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2420:6:22"},"nodeType":"YulFunctionCall","src":"2420:43:22"},"nodeType":"YulIf","src":"2417:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2400:5:22","type":""}],"src":"2364:122:22"},{"body":{"nodeType":"YulBlock","src":"2535:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"2592:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2601:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2604:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2594:6:22"},"nodeType":"YulFunctionCall","src":"2594:12:22"},"nodeType":"YulExpressionStatement","src":"2594:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2558:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2583:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2565:17:22"},"nodeType":"YulFunctionCall","src":"2565:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2555:2:22"},"nodeType":"YulFunctionCall","src":"2555:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2548:6:22"},"nodeType":"YulFunctionCall","src":"2548:43:22"},"nodeType":"YulIf","src":"2545:63:22"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2528:5:22","type":""}],"src":"2492:122:22"},{"body":{"nodeType":"YulBlock","src":"2663:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"2720:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2729:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2732:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2722:6:22"},"nodeType":"YulFunctionCall","src":"2722:12:22"},"nodeType":"YulExpressionStatement","src":"2722:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2686:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2711:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2693:17:22"},"nodeType":"YulFunctionCall","src":"2693:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2683:2:22"},"nodeType":"YulFunctionCall","src":"2683:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2676:6:22"},"nodeType":"YulFunctionCall","src":"2676:43:22"},"nodeType":"YulIf","src":"2673:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2656:5:22","type":""}],"src":"2620:122:22"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e060405260016004553480156200001657600080fd5b5060405162001b0338038062001b0383398181016040528101906200003c91906200024e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000885762000082620000eb60201b60201c565b6200009a565b62000099816200019360201b60201c565b5b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508260a081815250508160c08181525050505050506200035b565b6200019173c89bd4e1632d3a43cb03aaad5262cbe4038bc57173ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b1580156200014a57600080fd5b505afa1580156200015f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018591906200021c565b6200019360201b60201c565b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081519050620001e8816200030d565b92915050565b600081519050620001ff8162000327565b92915050565b600081519050620002168162000341565b92915050565b60006020828403121562000235576200023462000308565b5b60006200024584828501620001d7565b91505092915050565b600080600080608085870312156200026b576200026a62000308565b5b60006200027b87828801620001d7565b94505060206200028e87828801620001ee565b9350506040620002a18782880162000205565b9250506060620002b487828801620001d7565b91505092959194509250565b6000620002cd82620002de565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6200031881620002c0565b81146200032457600080fd5b50565b6200033281620002d4565b81146200033e57600080fd5b50565b6200034c81620002fe565b81146200035857600080fd5b50565b60805160601c60a05160c0516117756200038e6000396000610393015260006102050152600061037101526117756000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634357855e146100515780636021abac1461006d5780638dc654a21461008b578063c618a1e414610095575b600080fd5b61006b60048036038101906100669190610e91565b6100b3565b005b6100756101fd565b60405161008291906110a9565b60405180910390f35b6100936103be565b005b61009d6103c0565b6040516100aa9190611104565b60405180910390f35b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c906110e4565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055807f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a2816006819055507f221d507243adddffe789060be0e69bff4be830996c6b265bfda5083d86f886326006546040516101f09190611104565b60405180910390a1505050565b6000806102327f000000000000000000000000000000000000000000000000000000000000000030634357855e60e01b6103c6565b90506102966040518060400160405280600381526020017f67657400000000000000000000000000000000000000000000000000000000008152506040518060800160405280604981526020016116f760499139836103f79092919063ffffffff16565b6103156040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280601881526020017f5241572c4554482c5553442c564f4c554d453234484f55520000000000000000815250836103f79092919063ffffffff16565b6000670de0b6b3a7640000905061036c6040518060400160405280600581526020017f74696d6573000000000000000000000000000000000000000000000000000000815250828461042a9092919063ffffffff16565b6103b77f0000000000000000000000000000000000000000000000000000000000000000837f000000000000000000000000000000000000000000000000000000000000000061045d565b9250505090565b565b60065481565b6103ce610d9e565b6103d6610d9e565b6103ed85858584610529909392919063ffffffff16565b9150509392505050565b61040e8284608001516105d990919063ffffffff16565b6104258184608001516105d990919063ffffffff16565b505050565b6104418284608001516105d990919063ffffffff16565b6104588184608001516105fe90919063ffffffff16565b505050565b6000806004549050600181610472919061114c565b6004819055506000634042994660e01b60008087600001513089604001518760018c60800151600001516040516024016104b3989796959493929190610fe6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905061051e868386846106ab565b925050509392505050565b610531610d9e565b610541856080015161010061084f565b508385600001818152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b6105e682600383516108b9565b6105f98183610a3e90919063ffffffff16565b505050565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811215610635576106308282610a60565b6106a7565b67ffffffffffffffff8113156106545761064f8282610ad7565b6106a6565b6000811261066d57610668826000836108b9565b6106a5565b6106a4826001837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61069f919061136d565b6108b9565b5b5b5b5050565b600030846040516020016106c0929190610fba565b604051602081830303815290604052805190602001209050846005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea08685856040518463ffffffff1660e01b81526004016107b69392919061106b565b602060405180830381600087803b1580156107d057600080fd5b505af11580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108089190610e64565b610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e906110c4565b60405180910390fd5b949350505050565b610857610e0b565b60006020836108669190611554565b14610892576020826108789190611554565b60206108849190611401565b8261088f919061114c565b91505b81836020018181525050604051808452600081528281016020016040525082905092915050565b60178167ffffffffffffffff16116108f0576108ea8160058460ff16901b60ff161784610b2390919063ffffffff16565b50610a39565b60ff8167ffffffffffffffff16116109465761091f601860058460ff16901b1784610b2390919063ffffffff16565b506109408167ffffffffffffffff16600185610b439092919063ffffffff16565b50610a38565b61ffff8167ffffffffffffffff161161099d57610976601960058460ff16901b1784610b2390919063ffffffff16565b506109978167ffffffffffffffff16600285610b439092919063ffffffff16565b50610a37565b63ffffffff8167ffffffffffffffff16116109f6576109cf601a60058460ff16901b1784610b2390919063ffffffff16565b506109f08167ffffffffffffffff16600485610b439092919063ffffffff16565b50610a36565b610a13601b60058460ff16901b1784610b2390919063ffffffff16565b50610a348167ffffffffffffffff16600885610b439092919063ffffffff16565b505b5b5b5b505050565b610a46610e0b565b610a5883846000015151848551610b65565b905092915050565b610a7e60036005600660ff16901b1783610b2390919063ffffffff16565b50610ad382827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610aaf919061136d565b604051602001610abf9190611104565b604051602081830303815290604052610c54565b5050565b610af560026005600660ff16901b1783610b2390919063ffffffff16565b50610b1f8282604051602001610b0b9190611104565b604051602081830303815290604052610c54565b5050565b610b2b610e0b565b610b3b8384600001515184610c79565b905092915050565b610b4b610e0b565b610b5c848560000151518585610cd0565b90509392505050565b610b6d610e0b565b8251821115610b7b57600080fd5b84602001518285610b8c919061114c565b1115610bc157610bc0856002610bb188602001518887610bac919061114c565b610d5e565b610bbb9190611313565b610d7a565b5b600080865180518760208301019350808887011115610be05787860182525b60208701925050505b60208410610c275780518252602082610c02919061114c565b9150602081610c11919061114c565b9050602084610c209190611401565b9350610be9565b60006001856020036101000a03905080198251168184511681811785525050508692505050949350505050565b610c6182600283516108b9565b610c748183610a3e90919063ffffffff16565b505050565b610c81610e0b565b83602001518310610ca757610ca68460028660200151610ca19190611313565b610d7a565b5b8351805160208583010184815381861415610cc3576001820183525b5050508390509392505050565b610cd8610e0b565b84602001518483610ce9919061114c565b1115610d1157610d108560028685610d01919061114c565b610d0b9190611313565b610d7a565b5b6000600183610100610d2391906111f5565b610d2d9190611401565b90508551838682010185831982511617815281518588011115610d505784870182525b505085915050949350505050565b600081831115610d7057829050610d74565b8190505b92915050565b600082600001519050610d8d838361084f565b50610d988382610a3e565b50505050565b6040518060a0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001610e05610e0b565b81525090565b604051806040016040528060608152602001600081525090565b600081519050610e34816116b1565b92915050565b600081359050610e49816116c8565b92915050565b600081359050610e5e816116df565b92915050565b600060208284031215610e7a57610e796115e3565b5b6000610e8884828501610e25565b91505092915050565b60008060408385031215610ea857610ea76115e3565b5b6000610eb685828601610e3a565b9250506020610ec785828601610e4f565b9150509250929050565b610eda81611435565b82525050565b610ee981611453565b82525050565b610ef88161145d565b82525050565b6000610f098261111f565b610f13818561112a565b9350610f238185602086016114f3565b610f2c816115e8565b840191505092915050565b610f48610f43826114bd565b611526565b82525050565b6000610f5b60238361113b565b9150610f6682611613565b604082019050919050565b6000610f7e60288361113b565b9150610f8982611662565b604082019050919050565b610f9d816114b3565b82525050565b610fb4610faf826114b3565b61154a565b82525050565b6000610fc68285610f37565b601482019150610fd68284610fa3565b6020820191508190509392505050565b600061010082019050610ffc600083018b610ed1565b611009602083018a610f94565b6110166040830189610ee0565b6110236060830188610ed1565b6110306080830187610eef565b61103d60a0830186610f94565b61104a60c0830185610f94565b81810360e083015261105c8184610efe565b90509998505050505050505050565b60006060820190506110806000830186610ed1565b61108d6020830185610f94565b818103604083015261109f8184610efe565b9050949350505050565b60006020820190506110be6000830184610ee0565b92915050565b600060208201905081810360008301526110dd81610f4e565b9050919050565b600060208201905081810360008301526110fd81610f71565b9050919050565b60006020820190506111196000830184610f94565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611157826114b3565b9150611162836114b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561119757611196611585565b5b828201905092915050565b6000808291508390505b60018511156111ec578086048111156111c8576111c7611585565b5b60018516156111d75780820291505b80810290506111e585611606565b94506111ac565b94509492505050565b6000611200826114b3565b915061120b836114b3565b92506112387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611240565b905092915050565b600082611250576001905061130c565b8161125e576000905061130c565b8160018114611274576002811461127e576112ad565b600191505061130c565b60ff8411156112905761128f611585565b5b8360020a9150848211156112a7576112a6611585565b5b5061130c565b5060208310610133831016604e8410600b84101617156112e25782820a9050838111156112dd576112dc611585565b5b61130c565b6112ef84848460016111a2565b9250905081840481111561130657611305611585565b5b81810290505b9392505050565b600061131e826114b3565b9150611329836114b3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561136257611361611585565b5b828202905092915050565b600061137882611489565b915061138383611489565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156113be576113bd611585565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156113f6576113f5611585565b5b828203905092915050565b600061140c826114b3565b9150611417836114b3565b92508282101561142a57611429611585565b5b828203905092915050565b600061144082611493565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114c8826114cf565b9050919050565b60006114da826114e1565b9050919050565b60006114ec82611493565b9050919050565b60005b838110156115115780820151818401526020810190506114f6565b83811115611520576000848401525b50505050565b600061153182611538565b9050919050565b6000611543826115f9565b9050919050565b6000819050919050565b600061155f826114b3565b915061156a836114b3565b92508261157a576115796115b4565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160011c9050919050565b7f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160008201527f636c650000000000000000000000000000000000000000000000000000000000602082015250565b7f536f75726365206d75737420626520746865206f7261636c65206f662074686560008201527f2072657175657374000000000000000000000000000000000000000000000000602082015250565b6116ba81611447565b81146116c557600080fd5b50565b6116d181611453565b81146116dc57600080fd5b50565b6116e8816114b3565b81146116f357600080fd5b5056fe68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a2646970667358221220b63fdcc30cbbe05a8dafcaa1049fd3d5c86abca5dc691e2728ac165b0aebce3464736f6c63430008070033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B03 CODESIZE SUB DUP1 PUSH3 0x1B03 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x24E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x88 JUMPI PUSH3 0x82 PUSH3 0xEB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9A JUMP JUMPDEST PUSH3 0x99 DUP2 PUSH3 0x193 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP POP POP POP POP PUSH3 0x35B JUMP JUMPDEST PUSH3 0x191 PUSH20 0xC89BD4E1632D3A43CB03AAAD5262CBE4038BC571 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38CC4831 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x15F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x185 SWAP2 SWAP1 PUSH3 0x21C JUMP JUMPDEST PUSH3 0x193 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E8 DUP2 PUSH3 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1FF DUP2 PUSH3 0x327 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x216 DUP2 PUSH3 0x341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x235 JUMPI PUSH3 0x234 PUSH3 0x308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x245 DUP5 DUP3 DUP6 ADD PUSH3 0x1D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x27B DUP8 DUP3 DUP9 ADD PUSH3 0x1D7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x28E DUP8 DUP3 DUP9 ADD PUSH3 0x1EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x2A1 DUP8 DUP3 DUP9 ADD PUSH3 0x205 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x2B4 DUP8 DUP3 DUP9 ADD PUSH3 0x1D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CD DUP3 PUSH3 0x2DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x318 DUP2 PUSH3 0x2C0 JUMP JUMPDEST DUP2 EQ PUSH3 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x332 DUP2 PUSH3 0x2D4 JUMP JUMPDEST DUP2 EQ PUSH3 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x34C DUP2 PUSH3 0x2FE JUMP JUMPDEST DUP2 EQ PUSH3 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1775 PUSH3 0x38E PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x393 ADD MSTORE PUSH1 0x0 PUSH2 0x205 ADD MSTORE PUSH1 0x0 PUSH2 0x371 ADD MSTORE PUSH2 0x1775 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4357855E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6021ABAC EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x8DC654A2 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xC618A1E4 EQ PUSH2 0x95 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x3BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C SWAP1 PUSH2 0x10E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x221D507243ADDDFFE789060BE0E69BFF4BE830996C6B265BFDA5083D86F88632 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x232 PUSH32 0x0 ADDRESS PUSH4 0x4357855E PUSH1 0xE0 SHL PUSH2 0x3C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x296 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6765740000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x49 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F7 PUSH1 0x49 SWAP2 CODECOPY DUP4 PUSH2 0x3F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x315 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7061746800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5241572C4554482C5553442C564F4C554D453234484F55520000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x3F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH2 0x36C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x74696D6573000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 DUP5 PUSH2 0x42A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3B7 PUSH32 0x0 DUP4 PUSH32 0x0 PUSH2 0x45D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x3ED DUP6 DUP6 DUP6 DUP5 PUSH2 0x529 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x40E DUP3 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x5D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x425 DUP2 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x5D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x441 DUP3 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x5D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x458 DUP2 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x5FE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x1 DUP2 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH4 0x40429946 PUSH1 0xE0 SHL PUSH1 0x0 DUP1 DUP8 PUSH1 0x0 ADD MLOAD ADDRESS DUP10 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x1 DUP13 PUSH1 0x80 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4B3 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x51E DUP7 DUP4 DUP7 DUP5 PUSH2 0x6AB JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x531 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x541 DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x84F JUMP JUMPDEST POP DUP4 DUP6 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP6 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP6 PUSH1 0x40 ADD SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP POP DUP5 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5E6 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0x5F9 DUP2 DUP4 PUSH2 0xA3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP2 SLT ISZERO PUSH2 0x635 JUMPI PUSH2 0x630 DUP3 DUP3 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SGT ISZERO PUSH2 0x654 JUMPI PUSH2 0x64F DUP3 DUP3 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x66D JUMPI PUSH2 0x668 DUP3 PUSH1 0x0 DUP4 PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x6A4 DUP3 PUSH1 0x1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C0 SWAP3 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP5 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x106B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x857 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST EQ PUSH2 0x892 JUMPI PUSH1 0x20 DUP3 PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1401 JUMP JUMPDEST DUP3 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 DUP2 MSTORE DUP3 DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x8F0 JUMPI PUSH2 0x8EA DUP2 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL PUSH1 0xFF AND OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x946 JUMPI PUSH2 0x91F PUSH1 0x18 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x940 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP6 PUSH2 0xB43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA38 JUMP JUMPDEST PUSH2 0xFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x99D JUMPI PUSH2 0x976 PUSH1 0x19 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x997 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP6 PUSH2 0xB43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA37 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x9F6 JUMPI PUSH2 0x9CF PUSH1 0x1A PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x9F0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP6 PUSH2 0xB43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xA13 PUSH1 0x1B PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA34 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP6 PUSH2 0xB43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA46 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xA58 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0xB65 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA7E PUSH1 0x3 PUSH1 0x5 PUSH1 0x6 PUSH1 0xFF AND SWAP1 SHL OR DUP4 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xAD3 DUP3 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xC54 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAF5 PUSH1 0x2 PUSH1 0x5 PUSH1 0x6 PUSH1 0xFF AND SWAP1 SHL OR DUP4 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xB1F DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xC54 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xB3B DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xB5C DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xE0B JUMP JUMPDEST DUP3 MLOAD DUP3 GT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP3 DUP6 PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST GT ISZERO PUSH2 0xBC1 JUMPI PUSH2 0xBC0 DUP6 PUSH1 0x2 PUSH2 0xBB1 DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP8 PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH2 0xD5E JUMP JUMPDEST PUSH2 0xBBB SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0xBE0 JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP8 ADD SWAP3 POP POP POP JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0xC27 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 PUSH2 0xC02 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 PUSH2 0xC20 SWAP2 SWAP1 PUSH2 0x1401 JUMP JUMPDEST SWAP4 POP PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP DUP7 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC61 DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0xC74 DUP2 DUP4 PUSH2 0xA3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC81 PUSH2 0xE0B JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0xCA7 JUMPI PUSH2 0xCA6 DUP5 PUSH1 0x2 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 DUP2 DUP7 EQ ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x1 DUP3 ADD DUP4 MSTORE JUMPDEST POP POP POP DUP4 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCD8 PUSH2 0xE0B JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP4 PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST GT ISZERO PUSH2 0xD11 JUMPI PUSH2 0xD10 DUP6 PUSH1 0x2 DUP7 DUP6 PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x100 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1401 JUMP JUMPDEST SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0xD50 JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP POP DUP6 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xD70 JUMPI DUP3 SWAP1 POP PUSH2 0xD74 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH2 0xD8D DUP4 DUP4 PUSH2 0x84F JUMP JUMPDEST POP PUSH2 0xD98 DUP4 DUP3 PUSH2 0xA3E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE05 PUSH2 0xE0B JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE34 DUP2 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE49 DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5E DUP2 PUSH2 0x16DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7A JUMPI PUSH2 0xE79 PUSH2 0x15E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP5 DUP3 DUP6 ADD PUSH2 0xE25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0x15E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB6 DUP6 DUP3 DUP7 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEC7 DUP6 DUP3 DUP7 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDA DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEE9 DUP2 PUSH2 0x1453 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEF8 DUP2 PUSH2 0x145D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF09 DUP3 PUSH2 0x111F JUMP JUMPDEST PUSH2 0xF13 DUP2 DUP6 PUSH2 0x112A JUMP JUMPDEST SWAP4 POP PUSH2 0xF23 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14F3 JUMP JUMPDEST PUSH2 0xF2C DUP2 PUSH2 0x15E8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF48 PUSH2 0xF43 DUP3 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B PUSH1 0x23 DUP4 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP PUSH2 0xF66 DUP3 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7E PUSH1 0x28 DUP4 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP PUSH2 0xF89 DUP3 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9D DUP2 PUSH2 0x14B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFB4 PUSH2 0xFAF DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x154A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC6 DUP3 DUP6 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xFD6 DUP3 DUP5 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xFFC PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x1009 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x1016 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x1023 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x1030 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xEEF JUMP JUMPDEST PUSH2 0x103D PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x104A PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0xF94 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x105C DUP2 DUP5 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1080 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x108D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF94 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x109F DUP2 DUP5 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10DD DUP2 PUSH2 0xF4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FD DUP2 PUSH2 0xF71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1157 DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1162 DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1197 JUMPI PUSH2 0x1196 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x11EC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x11C8 JUMPI PUSH2 0x11C7 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x11D7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x11E5 DUP6 PUSH2 0x1606 JUMP JUMPDEST SWAP5 POP PUSH2 0x11AC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1200 DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x120B DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1238 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1250 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x130C JUMP JUMPDEST DUP2 PUSH2 0x125E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x130C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1274 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x127E JUMPI PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x130C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x12A7 JUMPI PUSH2 0x12A6 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST POP PUSH2 0x130C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x12E2 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x12DD JUMPI PUSH2 0x12DC PUSH2 0x1585 JUMP JUMPDEST JUMPDEST PUSH2 0x130C JUMP JUMPDEST PUSH2 0x12EF DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x11A2 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131E DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1329 DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1362 JUMPI PUSH2 0x1361 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1378 DUP3 PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP PUSH2 0x1383 DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 ADD DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND ISZERO PUSH2 0x13BE JUMPI PUSH2 0x13BD PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP3 SGT PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x13F6 JUMPI PUSH2 0x13F5 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140C DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1417 DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x142A JUMPI PUSH2 0x1429 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1440 DUP3 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C8 DUP3 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DA DUP3 PUSH2 0x14E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14EC DUP3 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1511 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14F6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1520 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1531 DUP3 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 PUSH2 0x15F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155F DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x156A DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x157A JUMPI PUSH2 0x1579 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x636C650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2072657175657374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x16BA DUP2 PUSH2 0x1447 JUMP JUMPDEST DUP2 EQ PUSH2 0x16C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x1453 JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16E8 DUP2 PUSH2 0x14B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH9 0x747470733A2F2F6D69 PUSH15 0x2D6170692E63727970746F636F6D70 PUSH2 0x7265 0x2E PUSH4 0x6F6D2F64 PUSH2 0x7461 0x2F PUSH17 0x726963656D756C746966756C6C3F667379 PUSH14 0x733D455448267473796D733D5553 DIFFICULTY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 EXTCODEHASH 0xDC 0xC3 0xC 0xBB 0xE0 GAS DUP14 0xAF 0xCA LOG1 DIV SWAP16 0xD3 0xD5 0xC8 PUSH11 0xBCA5DC691E2728AC165B0A 0xEB 0xCE CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"264:3236:16:-:0;;;1291:1:1;1258:34;;1155:328:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1298:1;1281:19;;:5;:19;;;1277:130;;;1316:25;:23;;;:25;;:::i;:::-;1277:130;;;1372:24;1390:5;1372:17;;;:24;;:::i;:::-;1277:130;1425:7;1416:16;;;;;;;;;;;;1450:6;1442:14;;;;;;1472:4;1466:10;;;;;;1155:328;;;;264:3236;;8856:123:1;8906:68;1077:42;8924:47;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8906:17;;;:68;;:::i;:::-;8856:123::o;8625:108::-;8716:11;8688:6;;:40;;;;;;;;;;;;;;;;;;8625:108;:::o;7:143:22:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;156:143;;;;:::o;305:::-;362:5;393:6;387:13;378:22;;409:33;436:5;409:33;:::i;:::-;305:143;;;;:::o;454:351::-;524:6;573:2;561:9;552:7;548:23;544:32;541:119;;;579:79;;:::i;:::-;541:119;699:1;724:64;780:7;771:6;760:9;756:22;724:64;:::i;:::-;714:74;;670:128;454:351;;;;:::o;811:820::-;908:6;916;924;932;981:3;969:9;960:7;956:23;952:33;949:120;;;988:79;;:::i;:::-;949:120;1108:1;1133:64;1189:7;1180:6;1169:9;1165:22;1133:64;:::i;:::-;1123:74;;1079:128;1246:2;1272:64;1328:7;1319:6;1308:9;1304:22;1272:64;:::i;:::-;1262:74;;1217:129;1385:2;1411:64;1467:7;1458:6;1447:9;1443:22;1411:64;:::i;:::-;1401:74;;1356:129;1524:2;1550:64;1606:7;1597:6;1586:9;1582:22;1550:64;:::i;:::-;1540:74;;1495:129;811:820;;;;;;;:::o;1718:96::-;1755:7;1784:24;1802:5;1784:24;:::i;:::-;1773:35;;1718:96;;;:::o;1820:77::-;1857:7;1886:5;1875:16;;1820:77;;;:::o;1903:126::-;1940:7;1980:42;1973:5;1969:54;1958:65;;1903:126;;;:::o;2035:77::-;2072:7;2101:5;2090:16;;2035:77;;;:::o;2241:117::-;2350:1;2347;2340:12;2364:122;2437:24;2455:5;2437:24;:::i;:::-;2430:5;2427:35;2417:63;;2476:1;2473;2466:12;2417:63;2364:122;:::o;2492:::-;2565:24;2583:5;2565:24;:::i;:::-;2558:5;2555:35;2545:63;;2604:1;2601;2594:12;2545:63;2492:122;:::o;2620:::-;2693:24;2711:5;2693:24;:::i;:::-;2686:5;2683:35;2673:63;;2732:1;2729;2722:12;2673:63;2620:122;:::o;264:3236:16:-;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_rawRequest_594":{"entryPoint":1707,"id":594,"parameterSlots":4,"returnSlots":1},"@addInt_181":{"entryPoint":1066,"id":181,"parameterSlots":3,"returnSlots":0},"@add_125":{"entryPoint":1015,"id":125,"parameterSlots":3,"returnSlots":0},"@appendInt_2508":{"entryPoint":2883,"id":2508,"parameterSlots":3,"returnSlots":1},"@appendUint8_2305":{"entryPoint":2851,"id":2305,"parameterSlots":2,"returnSlots":1},"@append_2252":{"entryPoint":2622,"id":2252,"parameterSlots":2,"returnSlots":1},"@buildChainlinkRequest_373":{"entryPoint":966,"id":373,"parameterSlots":3,"returnSlots":1},"@encodeBigNum_2851":{"entryPoint":2775,"id":2851,"parameterSlots":2,"returnSlots":0},"@encodeBytes_2820":{"entryPoint":3156,"id":2820,"parameterSlots":2,"returnSlots":0},"@encodeFixedNumeric_2677":{"entryPoint":2233,"id":2677,"parameterSlots":3,"returnSlots":0},"@encodeInt_2795":{"entryPoint":1534,"id":2795,"parameterSlots":2,"returnSlots":0},"@encodeSignedBigNum_2888":{"entryPoint":2656,"id":2888,"parameterSlots":2,"returnSlots":0},"@encodeString_2919":{"entryPoint":1497,"id":2919,"parameterSlots":2,"returnSlots":0},"@fulfill_3105":{"entryPoint":179,"id":3105,"parameterSlots":2,"returnSlots":0},"@init_2033":{"entryPoint":2127,"id":2033,"parameterSlots":2,"returnSlots":1},"@initialize_70":{"entryPoint":1321,"id":70,"parameterSlots":4,"returnSlots":1},"@max_2105":{"entryPoint":3422,"id":2105,"parameterSlots":2,"returnSlots":1},"@requestVolumeData_3085":{"entryPoint":509,"id":3085,"parameterSlots":0,"returnSlots":1},"@resize_2086":{"entryPoint":3450,"id":2086,"parameterSlots":2,"returnSlots":0},"@sendChainlinkRequestTo_477":{"entryPoint":1117,"id":477,"parameterSlots":3,"returnSlots":1},"@volume_2978":{"entryPoint":960,"id":2978,"parameterSlots":0,"returnSlots":0},"@withdrawLink_3110":{"entryPoint":958,"id":3110,"parameterSlots":0,"returnSlots":0},"@writeInt_2484":{"entryPoint":3280,"id":2484,"parameterSlots":4,"returnSlots":1},"@writeUint8_2284":{"entryPoint":3193,"id":2284,"parameterSlots":3,"returnSlots":1},"@write_2205":{"entryPoint":2917,"id":2205,"parameterSlots":4,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":3621,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3663,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3684,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":3729,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3793,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3808,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":3823,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":3838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":3895,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack":{"entryPoint":3918,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack":{"entryPoint":3953,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":4003,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_contract$_ChainlinkClient_$861_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":4026,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4070,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4203,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":4265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4324,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4356,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4383,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":4394,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4411,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4428,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":4514,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":4597,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":4672,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4883,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_int256":{"entryPoint":4973,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5121,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5173,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5191,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5203,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5213,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":5257,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5267,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5299,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ChainlinkClient_$861_to_t_address":{"entryPoint":5309,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":5327,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":5345,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":5363,"id":null,"parameterSlots":3,"returnSlots":0},"leftAlign_t_address":{"entryPoint":5414,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":5432,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":5450,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":5460,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5509,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5556,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5603,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5608,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":5625,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":5638,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96":{"entryPoint":5651,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4":{"entryPoint":5730,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5809,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5832,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5855,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14483:22","statements":[{"body":{"nodeType":"YulBlock","src":"67:77:22","statements":[{"nodeType":"YulAssignment","src":"77:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"92:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"86:5:22"},"nodeType":"YulFunctionCall","src":"86:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"132:5:22"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"108:23:22"},"nodeType":"YulFunctionCall","src":"108:30:22"},"nodeType":"YulExpressionStatement","src":"108:30:22"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"45:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"53:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"61:5:22","type":""}],"src":"7:137:22"},{"body":{"nodeType":"YulBlock","src":"202:87:22","statements":[{"nodeType":"YulAssignment","src":"212:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"234:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"221:12:22"},"nodeType":"YulFunctionCall","src":"221:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"277:5:22"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"250:26:22"},"nodeType":"YulFunctionCall","src":"250:33:22"},"nodeType":"YulExpressionStatement","src":"250:33:22"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"180:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"188:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"196:5:22","type":""}],"src":"150:139:22"},{"body":{"nodeType":"YulBlock","src":"347:87:22","statements":[{"nodeType":"YulAssignment","src":"357:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"379:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"366:12:22"},"nodeType":"YulFunctionCall","src":"366:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"357:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"422:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"395:26:22"},"nodeType":"YulFunctionCall","src":"395:33:22"},"nodeType":"YulExpressionStatement","src":"395:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"325:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"333:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"341:5:22","type":""}],"src":"295:139:22"},{"body":{"nodeType":"YulBlock","src":"514:271:22","statements":[{"body":{"nodeType":"YulBlock","src":"560:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"562:77:22"},"nodeType":"YulFunctionCall","src":"562:79:22"},"nodeType":"YulExpressionStatement","src":"562:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"535:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"544:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"531:3:22"},"nodeType":"YulFunctionCall","src":"531:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"556:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"527:3:22"},"nodeType":"YulFunctionCall","src":"527:32:22"},"nodeType":"YulIf","src":"524:119:22"},{"nodeType":"YulBlock","src":"653:125:22","statements":[{"nodeType":"YulVariableDeclaration","src":"668:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"682:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"672:6:22","type":""}]},{"nodeType":"YulAssignment","src":"697:71:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"740:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"751:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"736:3:22"},"nodeType":"YulFunctionCall","src":"736:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"760:7:22"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"707:28:22"},"nodeType":"YulFunctionCall","src":"707:61:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"697:6:22"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"484:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"495:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"507:6:22","type":""}],"src":"440:345:22"},{"body":{"nodeType":"YulBlock","src":"874:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"920:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"922:77:22"},"nodeType":"YulFunctionCall","src":"922:79:22"},"nodeType":"YulExpressionStatement","src":"922:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"895:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"904:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"891:3:22"},"nodeType":"YulFunctionCall","src":"891:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"916:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"887:3:22"},"nodeType":"YulFunctionCall","src":"887:32:22"},"nodeType":"YulIf","src":"884:119:22"},{"nodeType":"YulBlock","src":"1013:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1028:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1042:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1032:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1057:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1092:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1103:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1088:3:22"},"nodeType":"YulFunctionCall","src":"1088:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1112:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1067:20:22"},"nodeType":"YulFunctionCall","src":"1067:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1057:6:22"}]}]},{"nodeType":"YulBlock","src":"1140:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1155:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1169:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1159:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1185:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1220:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1231:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1216:3:22"},"nodeType":"YulFunctionCall","src":"1216:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1240:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1195:20:22"},"nodeType":"YulFunctionCall","src":"1195:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1185:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"836:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"847:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"859:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"867:6:22","type":""}],"src":"791:474:22"},{"body":{"nodeType":"YulBlock","src":"1336:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1353:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1376:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1358:17:22"},"nodeType":"YulFunctionCall","src":"1358:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1346:6:22"},"nodeType":"YulFunctionCall","src":"1346:37:22"},"nodeType":"YulExpressionStatement","src":"1346:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1324:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1331:3:22","type":""}],"src":"1271:118:22"},{"body":{"nodeType":"YulBlock","src":"1460:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1477:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1500:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1482:17:22"},"nodeType":"YulFunctionCall","src":"1482:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1470:6:22"},"nodeType":"YulFunctionCall","src":"1470:37:22"},"nodeType":"YulExpressionStatement","src":"1470:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1448:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1455:3:22","type":""}],"src":"1395:118:22"},{"body":{"nodeType":"YulBlock","src":"1582:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1599:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1621:5:22"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"1604:16:22"},"nodeType":"YulFunctionCall","src":"1604:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1592:6:22"},"nodeType":"YulFunctionCall","src":"1592:36:22"},"nodeType":"YulExpressionStatement","src":"1592:36:22"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1570:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1577:3:22","type":""}],"src":"1519:115:22"},{"body":{"nodeType":"YulBlock","src":"1730:270:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1740:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1786:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1754:31:22"},"nodeType":"YulFunctionCall","src":"1754:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1744:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1801:77:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1866:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1871:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1808:57:22"},"nodeType":"YulFunctionCall","src":"1808:70:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1801:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1913:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1920:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1909:3:22"},"nodeType":"YulFunctionCall","src":"1909:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"1927:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1932:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1887:21:22"},"nodeType":"YulFunctionCall","src":"1887:52:22"},"nodeType":"YulExpressionStatement","src":"1887:52:22"},{"nodeType":"YulAssignment","src":"1948:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1959:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1986:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1964:21:22"},"nodeType":"YulFunctionCall","src":"1964:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1955:3:22"},"nodeType":"YulFunctionCall","src":"1955:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1948:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1711:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1718:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1726:3:22","type":""}],"src":"1640:360:22"},{"body":{"nodeType":"YulBlock","src":"2112:110:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2129:3:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2208:5:22"}],"functionName":{"name":"convert_t_contract$_ChainlinkClient_$861_to_t_address","nodeType":"YulIdentifier","src":"2154:53:22"},"nodeType":"YulFunctionCall","src":"2154:60:22"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"2134:19:22"},"nodeType":"YulFunctionCall","src":"2134:81:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2122:6:22"},"nodeType":"YulFunctionCall","src":"2122:94:22"},"nodeType":"YulExpressionStatement","src":"2122:94:22"}]},"name":"abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2100:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2107:3:22","type":""}],"src":"2006:216:22"},{"body":{"nodeType":"YulBlock","src":"2374:220:22","statements":[{"nodeType":"YulAssignment","src":"2384:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2450:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2455:2:22","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2391:58:22"},"nodeType":"YulFunctionCall","src":"2391:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2384:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2556:3:22"}],"functionName":{"name":"store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96","nodeType":"YulIdentifier","src":"2467:88:22"},"nodeType":"YulFunctionCall","src":"2467:93:22"},"nodeType":"YulExpressionStatement","src":"2467:93:22"},{"nodeType":"YulAssignment","src":"2569:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2580:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2585:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2576:3:22"},"nodeType":"YulFunctionCall","src":"2576:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2569:3:22"}]}]},"name":"abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2362:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2370:3:22","type":""}],"src":"2228:366:22"},{"body":{"nodeType":"YulBlock","src":"2746:220:22","statements":[{"nodeType":"YulAssignment","src":"2756:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2822:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2827:2:22","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2763:58:22"},"nodeType":"YulFunctionCall","src":"2763:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2756:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2928:3:22"}],"functionName":{"name":"store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4","nodeType":"YulIdentifier","src":"2839:88:22"},"nodeType":"YulFunctionCall","src":"2839:93:22"},"nodeType":"YulExpressionStatement","src":"2839:93:22"},{"nodeType":"YulAssignment","src":"2941:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2952:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2957:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2948:3:22"},"nodeType":"YulFunctionCall","src":"2948:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2941:3:22"}]}]},"name":"abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2734:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2742:3:22","type":""}],"src":"2600:366:22"},{"body":{"nodeType":"YulBlock","src":"3037:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3054:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3077:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3059:17:22"},"nodeType":"YulFunctionCall","src":"3059:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3047:6:22"},"nodeType":"YulFunctionCall","src":"3047:37:22"},"nodeType":"YulExpressionStatement","src":"3047:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3025:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3032:3:22","type":""}],"src":"2972:118:22"},{"body":{"nodeType":"YulBlock","src":"3179:74:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3196:3:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3239:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3221:17:22"},"nodeType":"YulFunctionCall","src":"3221:24:22"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"3201:19:22"},"nodeType":"YulFunctionCall","src":"3201:45:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3189:6:22"},"nodeType":"YulFunctionCall","src":"3189:58:22"},"nodeType":"YulExpressionStatement","src":"3189:58:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3167:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3174:3:22","type":""}],"src":"3096:157:22"},{"body":{"nodeType":"YulBlock","src":"3426:276:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3522:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"3531:3:22"}],"functionName":{"name":"abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3437:84:22"},"nodeType":"YulFunctionCall","src":"3437:98:22"},"nodeType":"YulExpressionStatement","src":"3437:98:22"},{"nodeType":"YulAssignment","src":"3544:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3555:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3560:2:22","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3551:3:22"},"nodeType":"YulFunctionCall","src":"3551:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3544:3:22"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3635:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"3644:3:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3573:61:22"},"nodeType":"YulFunctionCall","src":"3573:75:22"},"nodeType":"YulExpressionStatement","src":"3573:75:22"},{"nodeType":"YulAssignment","src":"3657:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3668:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3673:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3664:3:22"},"nodeType":"YulFunctionCall","src":"3664:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3657:3:22"}]},{"nodeType":"YulAssignment","src":"3686:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"3693:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3686:3:22"}]}]},"name":"abi_encode_tuple_packed_t_contract$_ChainlinkClient_$861_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3397:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3403:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3411:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3422:3:22","type":""}],"src":"3259:443:22"},{"body":{"nodeType":"YulBlock","src":"4018:770:22","statements":[{"nodeType":"YulAssignment","src":"4028:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4040:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4051:3:22","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:22"},"nodeType":"YulFunctionCall","src":"4036:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4028:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4109:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4122:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4133:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4118:3:22"},"nodeType":"YulFunctionCall","src":"4118:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4065:43:22"},"nodeType":"YulFunctionCall","src":"4065:71:22"},"nodeType":"YulExpressionStatement","src":"4065:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4190:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4203:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4214:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4199:3:22"},"nodeType":"YulFunctionCall","src":"4199:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4146:43:22"},"nodeType":"YulFunctionCall","src":"4146:72:22"},"nodeType":"YulExpressionStatement","src":"4146:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4272:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4285:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4296:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4281:3:22"},"nodeType":"YulFunctionCall","src":"4281:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4228:43:22"},"nodeType":"YulFunctionCall","src":"4228:72:22"},"nodeType":"YulExpressionStatement","src":"4228:72:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4354:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4367:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4378:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4363:3:22"},"nodeType":"YulFunctionCall","src":"4363:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4310:43:22"},"nodeType":"YulFunctionCall","src":"4310:72:22"},"nodeType":"YulExpressionStatement","src":"4310:72:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4434:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4447:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4458:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:22"},"nodeType":"YulFunctionCall","src":"4443:19:22"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"4392:41:22"},"nodeType":"YulFunctionCall","src":"4392:71:22"},"nodeType":"YulExpressionStatement","src":"4392:71:22"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"4517:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4530:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4541:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4526:3:22"},"nodeType":"YulFunctionCall","src":"4526:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4473:43:22"},"nodeType":"YulFunctionCall","src":"4473:73:22"},"nodeType":"YulExpressionStatement","src":"4473:73:22"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"4600:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4613:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4624:3:22","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4609:3:22"},"nodeType":"YulFunctionCall","src":"4609:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4556:43:22"},"nodeType":"YulFunctionCall","src":"4556:73:22"},"nodeType":"YulExpressionStatement","src":"4556:73:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4650:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4661:3:22","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4646:3:22"},"nodeType":"YulFunctionCall","src":"4646:19:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4671:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4677:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4667:3:22"},"nodeType":"YulFunctionCall","src":"4667:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4639:6:22"},"nodeType":"YulFunctionCall","src":"4639:49:22"},"nodeType":"YulExpressionStatement","src":"4639:49:22"},{"nodeType":"YulAssignment","src":"4697:84:22","value":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"4767:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"4776:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4705:61:22"},"nodeType":"YulFunctionCall","src":"4705:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4697:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3934:9:22","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3946:6:22","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3954:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3962:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3970:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3978:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3986:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3994:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4002:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4013:4:22","type":""}],"src":"3708:1080:22"},{"body":{"nodeType":"YulBlock","src":"4966:357:22","statements":[{"nodeType":"YulAssignment","src":"4976:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4988:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4999:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4984:3:22"},"nodeType":"YulFunctionCall","src":"4984:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4976:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5056:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5069:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5080:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5065:3:22"},"nodeType":"YulFunctionCall","src":"5065:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5012:43:22"},"nodeType":"YulFunctionCall","src":"5012:71:22"},"nodeType":"YulExpressionStatement","src":"5012:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5137:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5150:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5161:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5146:3:22"},"nodeType":"YulFunctionCall","src":"5146:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5093:43:22"},"nodeType":"YulFunctionCall","src":"5093:72:22"},"nodeType":"YulExpressionStatement","src":"5093:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5186:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5197:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5182:3:22"},"nodeType":"YulFunctionCall","src":"5182:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5206:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5212:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5202:3:22"},"nodeType":"YulFunctionCall","src":"5202:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5175:6:22"},"nodeType":"YulFunctionCall","src":"5175:48:22"},"nodeType":"YulExpressionStatement","src":"5175:48:22"},{"nodeType":"YulAssignment","src":"5232:84:22","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5302:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"5311:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5240:61:22"},"nodeType":"YulFunctionCall","src":"5240:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5232:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4922:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4934:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4942:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4950:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4961:4:22","type":""}],"src":"4794:529:22"},{"body":{"nodeType":"YulBlock","src":"5427:124:22","statements":[{"nodeType":"YulAssignment","src":"5437:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5449:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5460:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5445:3:22"},"nodeType":"YulFunctionCall","src":"5445:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5437:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5517:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5530:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5541:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5526:3:22"},"nodeType":"YulFunctionCall","src":"5526:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5473:43:22"},"nodeType":"YulFunctionCall","src":"5473:71:22"},"nodeType":"YulExpressionStatement","src":"5473:71:22"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5399:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5411:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5422:4:22","type":""}],"src":"5329:222:22"},{"body":{"nodeType":"YulBlock","src":"5728:248:22","statements":[{"nodeType":"YulAssignment","src":"5738:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5750:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5761:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5746:3:22"},"nodeType":"YulFunctionCall","src":"5746:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5738:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5785:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5796:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5781:3:22"},"nodeType":"YulFunctionCall","src":"5781:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5804:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5810:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5800:3:22"},"nodeType":"YulFunctionCall","src":"5800:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5774:6:22"},"nodeType":"YulFunctionCall","src":"5774:47:22"},"nodeType":"YulExpressionStatement","src":"5774:47:22"},{"nodeType":"YulAssignment","src":"5830:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5964:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5838:124:22"},"nodeType":"YulFunctionCall","src":"5838:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5830:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5708:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5723:4:22","type":""}],"src":"5557:419:22"},{"body":{"nodeType":"YulBlock","src":"6153:248:22","statements":[{"nodeType":"YulAssignment","src":"6163:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6186:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:22"},"nodeType":"YulFunctionCall","src":"6171:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6163:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6210:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6221:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6206:3:22"},"nodeType":"YulFunctionCall","src":"6206:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6229:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6235:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6225:3:22"},"nodeType":"YulFunctionCall","src":"6225:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6199:6:22"},"nodeType":"YulFunctionCall","src":"6199:47:22"},"nodeType":"YulExpressionStatement","src":"6199:47:22"},{"nodeType":"YulAssignment","src":"6255:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6389:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6263:124:22"},"nodeType":"YulFunctionCall","src":"6263:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6255:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6133:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6148:4:22","type":""}],"src":"5982:419:22"},{"body":{"nodeType":"YulBlock","src":"6505:124:22","statements":[{"nodeType":"YulAssignment","src":"6515:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6527:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6538:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6523:3:22"},"nodeType":"YulFunctionCall","src":"6523:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6515:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6595:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6608:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6619:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6604:3:22"},"nodeType":"YulFunctionCall","src":"6604:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6551:43:22"},"nodeType":"YulFunctionCall","src":"6551:71:22"},"nodeType":"YulExpressionStatement","src":"6551:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6477:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6489:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6500:4:22","type":""}],"src":"6407:222:22"},{"body":{"nodeType":"YulBlock","src":"6675:35:22","statements":[{"nodeType":"YulAssignment","src":"6685:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6701:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6695:5:22"},"nodeType":"YulFunctionCall","src":"6695:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6685:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6668:6:22","type":""}],"src":"6635:75:22"},{"body":{"nodeType":"YulBlock","src":"6774:40:22","statements":[{"nodeType":"YulAssignment","src":"6785:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6801:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6795:5:22"},"nodeType":"YulFunctionCall","src":"6795:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6785:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6757:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6767:6:22","type":""}],"src":"6716:98:22"},{"body":{"nodeType":"YulBlock","src":"6915:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6932:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6937:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6925:6:22"},"nodeType":"YulFunctionCall","src":"6925:19:22"},"nodeType":"YulExpressionStatement","src":"6925:19:22"},{"nodeType":"YulAssignment","src":"6953:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6972:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"6977:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6968:3:22"},"nodeType":"YulFunctionCall","src":"6968:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6953:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6887:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"6892:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6903:11:22","type":""}],"src":"6820:168:22"},{"body":{"nodeType":"YulBlock","src":"7090:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7107:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7112:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7100:6:22"},"nodeType":"YulFunctionCall","src":"7100:19:22"},"nodeType":"YulExpressionStatement","src":"7100:19:22"},{"nodeType":"YulAssignment","src":"7128:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7147:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7152:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7143:3:22"},"nodeType":"YulFunctionCall","src":"7143:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7128:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7062:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"7067:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7078:11:22","type":""}],"src":"6994:169:22"},{"body":{"nodeType":"YulBlock","src":"7213:261:22","statements":[{"nodeType":"YulAssignment","src":"7223:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7246:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7228:17:22"},"nodeType":"YulFunctionCall","src":"7228:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7223:1:22"}]},{"nodeType":"YulAssignment","src":"7257:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7280:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7262:17:22"},"nodeType":"YulFunctionCall","src":"7262:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7257:1:22"}]},{"body":{"nodeType":"YulBlock","src":"7420:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7422:16:22"},"nodeType":"YulFunctionCall","src":"7422:18:22"},"nodeType":"YulExpressionStatement","src":"7422:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7341:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7348:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"7416:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7344:3:22"},"nodeType":"YulFunctionCall","src":"7344:74:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7338:2:22"},"nodeType":"YulFunctionCall","src":"7338:81:22"},"nodeType":"YulIf","src":"7335:107:22"},{"nodeType":"YulAssignment","src":"7452:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7463:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"7466:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7459:3:22"},"nodeType":"YulFunctionCall","src":"7459:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7452:3:22"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7200:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"7203:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7209:3:22","type":""}],"src":"7169:305:22"},{"body":{"nodeType":"YulBlock","src":"7553:775:22","statements":[{"nodeType":"YulAssignment","src":"7563:15:22","value":{"name":"_power","nodeType":"YulIdentifier","src":"7572:6:22"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7563:5:22"}]},{"nodeType":"YulAssignment","src":"7587:14:22","value":{"name":"_base","nodeType":"YulIdentifier","src":"7596:5:22"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"7587:4:22"}]},{"body":{"nodeType":"YulBlock","src":"7645:677:22","statements":[{"body":{"nodeType":"YulBlock","src":"7733:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7735:16:22"},"nodeType":"YulFunctionCall","src":"7735:18:22"},"nodeType":"YulExpressionStatement","src":"7735:18:22"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7711:4:22"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"7721:3:22"},{"name":"base","nodeType":"YulIdentifier","src":"7726:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7717:3:22"},"nodeType":"YulFunctionCall","src":"7717:14:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7708:2:22"},"nodeType":"YulFunctionCall","src":"7708:24:22"},"nodeType":"YulIf","src":"7705:50:22"},{"body":{"nodeType":"YulBlock","src":"7800:419:22","statements":[{"nodeType":"YulAssignment","src":"8180:25:22","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"8193:5:22"},{"name":"base","nodeType":"YulIdentifier","src":"8200:4:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8189:3:22"},"nodeType":"YulFunctionCall","src":"8189:16:22"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8180:5:22"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7775:8:22"},{"kind":"number","nodeType":"YulLiteral","src":"7785:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7771:3:22"},"nodeType":"YulFunctionCall","src":"7771:16:22"},"nodeType":"YulIf","src":"7768:451:22"},{"nodeType":"YulAssignment","src":"8232:23:22","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8244:4:22"},{"name":"base","nodeType":"YulIdentifier","src":"8250:4:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8240:3:22"},"nodeType":"YulFunctionCall","src":"8240:15:22"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"8232:4:22"}]},{"nodeType":"YulAssignment","src":"8268:44:22","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8303:8:22"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"8280:22:22"},"nodeType":"YulFunctionCall","src":"8280:32:22"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"8268:8:22"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7621:8:22"},{"kind":"number","nodeType":"YulLiteral","src":"7631:1:22","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7618:2:22"},"nodeType":"YulFunctionCall","src":"7618:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7634:2:22","statements":[]},"pre":{"nodeType":"YulBlock","src":"7614:3:22","statements":[]},"src":"7610:712:22"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"7508:6:22","type":""},{"name":"_base","nodeType":"YulTypedName","src":"7516:5:22","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"7523:8:22","type":""},{"name":"max","nodeType":"YulTypedName","src":"7533:3:22","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"7541:5:22","type":""},{"name":"base","nodeType":"YulTypedName","src":"7548:4:22","type":""}],"src":"7480:848:22"},{"body":{"nodeType":"YulBlock","src":"8400:219:22","statements":[{"nodeType":"YulAssignment","src":"8410:31:22","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8436:4:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8418:17:22"},"nodeType":"YulFunctionCall","src":"8418:23:22"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"8410:4:22"}]},{"nodeType":"YulAssignment","src":"8450:39:22","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8480:8:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8462:17:22"},"nodeType":"YulFunctionCall","src":"8462:27:22"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"8450:8:22"}]},{"nodeType":"YulAssignment","src":"8499:113:22","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8529:4:22"},{"name":"exponent","nodeType":"YulIdentifier","src":"8535:8:22"},{"kind":"number","nodeType":"YulLiteral","src":"8545:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"8508:20:22"},"nodeType":"YulFunctionCall","src":"8508:104:22"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8499:5:22"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"8375:4:22","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"8381:8:22","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"8394:5:22","type":""}],"src":"8334:285:22"},{"body":{"nodeType":"YulBlock","src":"8685:1013:22","statements":[{"body":{"nodeType":"YulBlock","src":"8880:20:22","statements":[{"nodeType":"YulAssignment","src":"8882:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8891:1:22","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8882:5:22"}]},{"nodeType":"YulLeave","src":"8893:5:22"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8870:8:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8863:6:22"},"nodeType":"YulFunctionCall","src":"8863:16:22"},"nodeType":"YulIf","src":"8860:40:22"},{"body":{"nodeType":"YulBlock","src":"8925:20:22","statements":[{"nodeType":"YulAssignment","src":"8927:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8936:1:22","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8927:5:22"}]},{"nodeType":"YulLeave","src":"8938:5:22"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8919:4:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8912:6:22"},"nodeType":"YulFunctionCall","src":"8912:12:22"},"nodeType":"YulIf","src":"8909:36:22"},{"cases":[{"body":{"nodeType":"YulBlock","src":"9055:20:22","statements":[{"nodeType":"YulAssignment","src":"9057:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9066:1:22","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9057:5:22"}]},{"nodeType":"YulLeave","src":"9068:5:22"}]},"nodeType":"YulCase","src":"9048:27:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9053:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9099:176:22","statements":[{"body":{"nodeType":"YulBlock","src":"9134:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9136:16:22"},"nodeType":"YulFunctionCall","src":"9136:18:22"},"nodeType":"YulExpressionStatement","src":"9136:18:22"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9119:8:22"},{"kind":"number","nodeType":"YulLiteral","src":"9129:3:22","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9116:2:22"},"nodeType":"YulFunctionCall","src":"9116:17:22"},"nodeType":"YulIf","src":"9113:43:22"},{"nodeType":"YulAssignment","src":"9169:25:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9182:1:22","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"9185:8:22"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9178:3:22"},"nodeType":"YulFunctionCall","src":"9178:16:22"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9169:5:22"}]},{"body":{"nodeType":"YulBlock","src":"9225:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9227:16:22"},"nodeType":"YulFunctionCall","src":"9227:18:22"},"nodeType":"YulExpressionStatement","src":"9227:18:22"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"9213:5:22"},{"name":"max","nodeType":"YulIdentifier","src":"9220:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9210:2:22"},"nodeType":"YulFunctionCall","src":"9210:14:22"},"nodeType":"YulIf","src":"9207:40:22"},{"nodeType":"YulLeave","src":"9260:5:22"}]},"nodeType":"YulCase","src":"9084:191:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9089:1:22","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"9005:4:22"},"nodeType":"YulSwitch","src":"8998:277:22"},{"body":{"nodeType":"YulBlock","src":"9407:123:22","statements":[{"nodeType":"YulAssignment","src":"9421:28:22","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9434:4:22"},{"name":"exponent","nodeType":"YulIdentifier","src":"9440:8:22"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9430:3:22"},"nodeType":"YulFunctionCall","src":"9430:19:22"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9421:5:22"}]},{"body":{"nodeType":"YulBlock","src":"9480:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9482:16:22"},"nodeType":"YulFunctionCall","src":"9482:18:22"},"nodeType":"YulExpressionStatement","src":"9482:18:22"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"9468:5:22"},{"name":"max","nodeType":"YulIdentifier","src":"9475:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9465:2:22"},"nodeType":"YulFunctionCall","src":"9465:14:22"},"nodeType":"YulIf","src":"9462:40:22"},{"nodeType":"YulLeave","src":"9515:5:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9310:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"9316:2:22","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9307:2:22"},"nodeType":"YulFunctionCall","src":"9307:12:22"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9324:8:22"},{"kind":"number","nodeType":"YulLiteral","src":"9334:2:22","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9321:2:22"},"nodeType":"YulFunctionCall","src":"9321:16:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9303:3:22"},"nodeType":"YulFunctionCall","src":"9303:35:22"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9359:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"9365:3:22","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9356:2:22"},"nodeType":"YulFunctionCall","src":"9356:13:22"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9374:8:22"},{"kind":"number","nodeType":"YulLiteral","src":"9384:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9371:2:22"},"nodeType":"YulFunctionCall","src":"9371:16:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9352:3:22"},"nodeType":"YulFunctionCall","src":"9352:36:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9287:2:22"},"nodeType":"YulFunctionCall","src":"9287:111:22"},"nodeType":"YulIf","src":"9284:246:22"},{"nodeType":"YulAssignment","src":"9540:57:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9574:1:22","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"9577:4:22"},{"name":"exponent","nodeType":"YulIdentifier","src":"9583:8:22"},{"name":"max","nodeType":"YulIdentifier","src":"9593:3:22"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"9555:18:22"},"nodeType":"YulFunctionCall","src":"9555:42:22"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9540:5:22"},{"name":"base","nodeType":"YulIdentifier","src":"9547:4:22"}]},{"body":{"nodeType":"YulBlock","src":"9636:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9638:16:22"},"nodeType":"YulFunctionCall","src":"9638:18:22"},"nodeType":"YulExpressionStatement","src":"9638:18:22"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"9613:5:22"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"9624:3:22"},{"name":"base","nodeType":"YulIdentifier","src":"9629:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9620:3:22"},"nodeType":"YulFunctionCall","src":"9620:14:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9610:2:22"},"nodeType":"YulFunctionCall","src":"9610:25:22"},"nodeType":"YulIf","src":"9607:51:22"},{"nodeType":"YulAssignment","src":"9667:25:22","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"9680:5:22"},{"name":"base","nodeType":"YulIdentifier","src":"9687:4:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9676:3:22"},"nodeType":"YulFunctionCall","src":"9676:16:22"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9667:5:22"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"8655:4:22","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"8661:8:22","type":""},{"name":"max","nodeType":"YulTypedName","src":"8671:3:22","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"8679:5:22","type":""}],"src":"8625:1073:22"},{"body":{"nodeType":"YulBlock","src":"9752:300:22","statements":[{"nodeType":"YulAssignment","src":"9762:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9785:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9767:17:22"},"nodeType":"YulFunctionCall","src":"9767:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9762:1:22"}]},{"nodeType":"YulAssignment","src":"9796:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9819:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9801:17:22"},"nodeType":"YulFunctionCall","src":"9801:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9796:1:22"}]},{"body":{"nodeType":"YulBlock","src":"9994:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9996:16:22"},"nodeType":"YulFunctionCall","src":"9996:18:22"},"nodeType":"YulExpressionStatement","src":"9996:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9906:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9899:6:22"},"nodeType":"YulFunctionCall","src":"9899:9:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9892:6:22"},"nodeType":"YulFunctionCall","src":"9892:17:22"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9914:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9921:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"9989:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9917:3:22"},"nodeType":"YulFunctionCall","src":"9917:74:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9911:2:22"},"nodeType":"YulFunctionCall","src":"9911:81:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9888:3:22"},"nodeType":"YulFunctionCall","src":"9888:105:22"},"nodeType":"YulIf","src":"9885:131:22"},{"nodeType":"YulAssignment","src":"10026:20:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10041:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"10044:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10037:3:22"},"nodeType":"YulFunctionCall","src":"10037:9:22"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"10026:7:22"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9735:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"9738:1:22","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"9744:7:22","type":""}],"src":"9704:348:22"},{"body":{"nodeType":"YulBlock","src":"10102:483:22","statements":[{"nodeType":"YulAssignment","src":"10112:24:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10134:1:22"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"10117:16:22"},"nodeType":"YulFunctionCall","src":"10117:19:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10112:1:22"}]},{"nodeType":"YulAssignment","src":"10145:24:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10167:1:22"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"10150:16:22"},"nodeType":"YulFunctionCall","src":"10150:19:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10145:1:22"}]},{"body":{"nodeType":"YulBlock","src":"10344:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10346:16:22"},"nodeType":"YulFunctionCall","src":"10346:18:22"},"nodeType":"YulExpressionStatement","src":"10346:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10252:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"10255:1:22","type":"","value":"0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10248:3:22"},"nodeType":"YulFunctionCall","src":"10248:9:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10241:6:22"},"nodeType":"YulFunctionCall","src":"10241:17:22"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10264:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10271:66:22","type":"","value":"0x8000000000000000000000000000000000000000000000000000000000000000"},{"name":"y","nodeType":"YulIdentifier","src":"10339:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10267:3:22"},"nodeType":"YulFunctionCall","src":"10267:74:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10260:3:22"},"nodeType":"YulFunctionCall","src":"10260:82:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10237:3:22"},"nodeType":"YulFunctionCall","src":"10237:106:22"},"nodeType":"YulIf","src":"10234:132:22"},{"body":{"nodeType":"YulBlock","src":"10530:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10532:16:22"},"nodeType":"YulFunctionCall","src":"10532:18:22"},"nodeType":"YulExpressionStatement","src":"10532:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10439:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"10442:1:22","type":"","value":"0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10435:3:22"},"nodeType":"YulFunctionCall","src":"10435:9:22"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10450:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10457:66:22","type":"","value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"10525:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10453:3:22"},"nodeType":"YulFunctionCall","src":"10453:74:22"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"10446:3:22"},"nodeType":"YulFunctionCall","src":"10446:82:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10431:3:22"},"nodeType":"YulFunctionCall","src":"10431:98:22"},"nodeType":"YulIf","src":"10428:124:22"},{"nodeType":"YulAssignment","src":"10562:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10574:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"10577:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10570:3:22"},"nodeType":"YulFunctionCall","src":"10570:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"10562:4:22"}]}]},"name":"checked_sub_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10088:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"10091:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"10097:4:22","type":""}],"src":"10058:527:22"},{"body":{"nodeType":"YulBlock","src":"10636:146:22","statements":[{"nodeType":"YulAssignment","src":"10646:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10669:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10651:17:22"},"nodeType":"YulFunctionCall","src":"10651:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10646:1:22"}]},{"nodeType":"YulAssignment","src":"10680:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10703:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10685:17:22"},"nodeType":"YulFunctionCall","src":"10685:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10680:1:22"}]},{"body":{"nodeType":"YulBlock","src":"10727:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10729:16:22"},"nodeType":"YulFunctionCall","src":"10729:18:22"},"nodeType":"YulExpressionStatement","src":"10729:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10721:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"10724:1:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10718:2:22"},"nodeType":"YulFunctionCall","src":"10718:8:22"},"nodeType":"YulIf","src":"10715:34:22"},{"nodeType":"YulAssignment","src":"10759:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10771:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"10774:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10767:3:22"},"nodeType":"YulFunctionCall","src":"10767:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"10759:4:22"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10622:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"10625:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"10631:4:22","type":""}],"src":"10591:191:22"},{"body":{"nodeType":"YulBlock","src":"10833:51:22","statements":[{"nodeType":"YulAssignment","src":"10843:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10872:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10854:17:22"},"nodeType":"YulFunctionCall","src":"10854:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10843:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10815:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10825:7:22","type":""}],"src":"10788:96:22"},{"body":{"nodeType":"YulBlock","src":"10932:48:22","statements":[{"nodeType":"YulAssignment","src":"10942:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10967:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10960:6:22"},"nodeType":"YulFunctionCall","src":"10960:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10953:6:22"},"nodeType":"YulFunctionCall","src":"10953:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10942:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10914:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10924:7:22","type":""}],"src":"10890:90:22"},{"body":{"nodeType":"YulBlock","src":"11031:32:22","statements":[{"nodeType":"YulAssignment","src":"11041:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"11052:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11041:7:22"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11013:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11023:7:22","type":""}],"src":"10986:77:22"},{"body":{"nodeType":"YulBlock","src":"11113:105:22","statements":[{"nodeType":"YulAssignment","src":"11123:89:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11138:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11145:66:22","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11134:3:22"},"nodeType":"YulFunctionCall","src":"11134:78:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11123:7:22"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11095:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11105:7:22","type":""}],"src":"11069:149:22"},{"body":{"nodeType":"YulBlock","src":"11268:32:22","statements":[{"nodeType":"YulAssignment","src":"11278:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"11289:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11278:7:22"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11250:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11260:7:22","type":""}],"src":"11224:76:22"},{"body":{"nodeType":"YulBlock","src":"11351:81:22","statements":[{"nodeType":"YulAssignment","src":"11361:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11376:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11383:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11372:3:22"},"nodeType":"YulFunctionCall","src":"11372:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11361:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11333:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11343:7:22","type":""}],"src":"11306:126:22"},{"body":{"nodeType":"YulBlock","src":"11483:32:22","statements":[{"nodeType":"YulAssignment","src":"11493:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"11504:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11493:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11465:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11475:7:22","type":""}],"src":"11438:77:22"},{"body":{"nodeType":"YulBlock","src":"11604:66:22","statements":[{"nodeType":"YulAssignment","src":"11614:50:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11658:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"11627:30:22"},"nodeType":"YulFunctionCall","src":"11627:37:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11614:9:22"}]}]},"name":"convert_t_contract$_ChainlinkClient_$861_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11584:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11594:9:22","type":""}],"src":"11521:149:22"},{"body":{"nodeType":"YulBlock","src":"11736:66:22","statements":[{"nodeType":"YulAssignment","src":"11746:50:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11790:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"11759:30:22"},"nodeType":"YulFunctionCall","src":"11759:37:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11746:9:22"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11716:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11726:9:22","type":""}],"src":"11676:126:22"},{"body":{"nodeType":"YulBlock","src":"11868:53:22","statements":[{"nodeType":"YulAssignment","src":"11878:37:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11909:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"11891:17:22"},"nodeType":"YulFunctionCall","src":"11891:24:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11878:9:22"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11848:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11858:9:22","type":""}],"src":"11808:113:22"},{"body":{"nodeType":"YulBlock","src":"11976:258:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11986:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"11995:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11990:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"12055:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12080:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"12085:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12076:3:22"},"nodeType":"YulFunctionCall","src":"12076:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12099:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"12104:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12095:3:22"},"nodeType":"YulFunctionCall","src":"12095:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12089:5:22"},"nodeType":"YulFunctionCall","src":"12089:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12069:6:22"},"nodeType":"YulFunctionCall","src":"12069:39:22"},"nodeType":"YulExpressionStatement","src":"12069:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12016:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"12019:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12013:2:22"},"nodeType":"YulFunctionCall","src":"12013:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12027:19:22","statements":[{"nodeType":"YulAssignment","src":"12029:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12038:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"12041:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12034:3:22"},"nodeType":"YulFunctionCall","src":"12034:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12029:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"12009:3:22","statements":[]},"src":"12005:113:22"},{"body":{"nodeType":"YulBlock","src":"12152:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12202:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"12207:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12198:3:22"},"nodeType":"YulFunctionCall","src":"12198:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"12216:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12191:6:22"},"nodeType":"YulFunctionCall","src":"12191:27:22"},"nodeType":"YulExpressionStatement","src":"12191:27:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12133:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"12136:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12130:2:22"},"nodeType":"YulFunctionCall","src":"12130:13:22"},"nodeType":"YulIf","src":"12127:101:22"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11958:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11963:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"11968:6:22","type":""}],"src":"11927:307:22"},{"body":{"nodeType":"YulBlock","src":"12287:53:22","statements":[{"nodeType":"YulAssignment","src":"12297:37:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12328:5:22"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"12308:19:22"},"nodeType":"YulFunctionCall","src":"12308:26:22"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"12297:7:22"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12269:5:22","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"12279:7:22","type":""}],"src":"12240:100:22"},{"body":{"nodeType":"YulBlock","src":"12393:47:22","statements":[{"nodeType":"YulAssignment","src":"12403:31:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12428:5:22"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"12414:13:22"},"nodeType":"YulFunctionCall","src":"12414:20:22"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"12403:7:22"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12375:5:22","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"12385:7:22","type":""}],"src":"12346:94:22"},{"body":{"nodeType":"YulBlock","src":"12493:32:22","statements":[{"nodeType":"YulAssignment","src":"12503:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"12514:5:22"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"12503:7:22"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12475:5:22","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"12485:7:22","type":""}],"src":"12446:79:22"},{"body":{"nodeType":"YulBlock","src":"12565:142:22","statements":[{"nodeType":"YulAssignment","src":"12575:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12598:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12580:17:22"},"nodeType":"YulFunctionCall","src":"12580:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12575:1:22"}]},{"nodeType":"YulAssignment","src":"12609:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12632:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12614:17:22"},"nodeType":"YulFunctionCall","src":"12614:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12609:1:22"}]},{"body":{"nodeType":"YulBlock","src":"12656:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"12658:16:22"},"nodeType":"YulFunctionCall","src":"12658:18:22"},"nodeType":"YulExpressionStatement","src":"12658:18:22"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12653:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12646:6:22"},"nodeType":"YulFunctionCall","src":"12646:9:22"},"nodeType":"YulIf","src":"12643:35:22"},{"nodeType":"YulAssignment","src":"12687:14:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12696:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"12699:1:22"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"12692:3:22"},"nodeType":"YulFunctionCall","src":"12692:9:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"12687:1:22"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12554:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"12557:1:22","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"12563:1:22","type":""}],"src":"12531:176:22"},{"body":{"nodeType":"YulBlock","src":"12741:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12758:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12761:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12751:6:22"},"nodeType":"YulFunctionCall","src":"12751:88:22"},"nodeType":"YulExpressionStatement","src":"12751:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12855:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12858:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12848:6:22"},"nodeType":"YulFunctionCall","src":"12848:15:22"},"nodeType":"YulExpressionStatement","src":"12848:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12879:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12882:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12872:6:22"},"nodeType":"YulFunctionCall","src":"12872:15:22"},"nodeType":"YulExpressionStatement","src":"12872:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12713:180:22"},{"body":{"nodeType":"YulBlock","src":"12927:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12944:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12947:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12937:6:22"},"nodeType":"YulFunctionCall","src":"12937:88:22"},"nodeType":"YulExpressionStatement","src":"12937:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13041:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13044:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13034:6:22"},"nodeType":"YulFunctionCall","src":"13034:15:22"},"nodeType":"YulExpressionStatement","src":"13034:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13065:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13068:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13058:6:22"},"nodeType":"YulFunctionCall","src":"13058:15:22"},"nodeType":"YulExpressionStatement","src":"13058:15:22"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"12899:180:22"},{"body":{"nodeType":"YulBlock","src":"13174:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13191:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13194:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13184:6:22"},"nodeType":"YulFunctionCall","src":"13184:12:22"},"nodeType":"YulExpressionStatement","src":"13184:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"13085:117:22"},{"body":{"nodeType":"YulBlock","src":"13297:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13314:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13317:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13307:6:22"},"nodeType":"YulFunctionCall","src":"13307:12:22"},"nodeType":"YulExpressionStatement","src":"13307:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"13208:117:22"},{"body":{"nodeType":"YulBlock","src":"13379:54:22","statements":[{"nodeType":"YulAssignment","src":"13389:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13407:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"13414:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13403:3:22"},"nodeType":"YulFunctionCall","src":"13403:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13423:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13419:3:22"},"nodeType":"YulFunctionCall","src":"13419:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13399:3:22"},"nodeType":"YulFunctionCall","src":"13399:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13389:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13362:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13372:6:22","type":""}],"src":"13331:102:22"},{"body":{"nodeType":"YulBlock","src":"13481:52:22","statements":[{"nodeType":"YulAssignment","src":"13491:35:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13516:2:22","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"13520:5:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13512:3:22"},"nodeType":"YulFunctionCall","src":"13512:14:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13491:8:22"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13462:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13472:8:22","type":""}],"src":"13439:94:22"},{"body":{"nodeType":"YulBlock","src":"13590:51:22","statements":[{"nodeType":"YulAssignment","src":"13600:34:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13625:1:22","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"13628:5:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13621:3:22"},"nodeType":"YulFunctionCall","src":"13621:13:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13600:8:22"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13571:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13581:8:22","type":""}],"src":"13539:102:22"},{"body":{"nodeType":"YulBlock","src":"13753:116:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13775:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13783:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13771:3:22"},"nodeType":"YulFunctionCall","src":"13771:14:22"},{"hexValue":"756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261","kind":"string","nodeType":"YulLiteral","src":"13787:34:22","type":"","value":"unable to transferAndCall to ora"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13764:6:22"},"nodeType":"YulFunctionCall","src":"13764:58:22"},"nodeType":"YulExpressionStatement","src":"13764:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13843:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13851:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13839:3:22"},"nodeType":"YulFunctionCall","src":"13839:15:22"},{"hexValue":"636c65","kind":"string","nodeType":"YulLiteral","src":"13856:5:22","type":"","value":"cle"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13832:6:22"},"nodeType":"YulFunctionCall","src":"13832:30:22"},"nodeType":"YulExpressionStatement","src":"13832:30:22"}]},"name":"store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13745:6:22","type":""}],"src":"13647:222:22"},{"body":{"nodeType":"YulBlock","src":"13981:121:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14003:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"14011:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13999:3:22"},"nodeType":"YulFunctionCall","src":"13999:14:22"},{"hexValue":"536f75726365206d75737420626520746865206f7261636c65206f6620746865","kind":"string","nodeType":"YulLiteral","src":"14015:34:22","type":"","value":"Source must be the oracle of the"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13992:6:22"},"nodeType":"YulFunctionCall","src":"13992:58:22"},"nodeType":"YulExpressionStatement","src":"13992:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14071:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"14079:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14067:3:22"},"nodeType":"YulFunctionCall","src":"14067:15:22"},{"hexValue":"2072657175657374","kind":"string","nodeType":"YulLiteral","src":"14084:10:22","type":"","value":" request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14060:6:22"},"nodeType":"YulFunctionCall","src":"14060:35:22"},"nodeType":"YulExpressionStatement","src":"14060:35:22"}]},"name":"store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13973:6:22","type":""}],"src":"13875:227:22"},{"body":{"nodeType":"YulBlock","src":"14148:76:22","statements":[{"body":{"nodeType":"YulBlock","src":"14202:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14211:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14214:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14204:6:22"},"nodeType":"YulFunctionCall","src":"14204:12:22"},"nodeType":"YulExpressionStatement","src":"14204:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14171:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14193:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"14178:14:22"},"nodeType":"YulFunctionCall","src":"14178:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14168:2:22"},"nodeType":"YulFunctionCall","src":"14168:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14161:6:22"},"nodeType":"YulFunctionCall","src":"14161:40:22"},"nodeType":"YulIf","src":"14158:60:22"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14141:5:22","type":""}],"src":"14108:116:22"},{"body":{"nodeType":"YulBlock","src":"14273:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"14330:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14339:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14342:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14332:6:22"},"nodeType":"YulFunctionCall","src":"14332:12:22"},"nodeType":"YulExpressionStatement","src":"14332:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14296:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14321:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"14303:17:22"},"nodeType":"YulFunctionCall","src":"14303:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14293:2:22"},"nodeType":"YulFunctionCall","src":"14293:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14286:6:22"},"nodeType":"YulFunctionCall","src":"14286:43:22"},"nodeType":"YulIf","src":"14283:63:22"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14266:5:22","type":""}],"src":"14230:122:22"},{"body":{"nodeType":"YulBlock","src":"14401:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"14458:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14467:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14470:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14460:6:22"},"nodeType":"YulFunctionCall","src":"14460:12:22"},"nodeType":"YulExpressionStatement","src":"14460:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14424:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14449:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14431:17:22"},"nodeType":"YulFunctionCall","src":"14431:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14421:2:22"},"nodeType":"YulFunctionCall","src":"14421:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14414:6:22"},"nodeType":"YulFunctionCall","src":"14414:43:22"},"nodeType":"YulIf","src":"14411:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14394:5:22","type":""}],"src":"14358:122:22"}]},"contents":"{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(convert_t_contract$_ChainlinkClient_$861_to_t_address(value)))\n    }\n\n    function abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_contract$_ChainlinkClient_$861_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value7,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // underflow, if y >= 0 and x < (minValue + y)\n        if and(iszero(slt(y, 0)), slt(x, add(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if y < 0 and x > (maxValue + y)\n        if and(slt(y, 0), sgt(x, add(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ChainlinkClient_$861_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96(memPtr) {\n\n        mstore(add(memPtr, 0), \"unable to transferAndCall to ora\")\n\n        mstore(add(memPtr, 32), \"cle\")\n\n    }\n\n    function store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Source must be the oracle of the\")\n\n        mstore(add(memPtr, 32), \" request\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2980":[{"length":32,"start":881}],"2982":[{"length":32,"start":517}],"2984":[{"length":32,"start":915}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80634357855e146100515780636021abac1461006d5780638dc654a21461008b578063c618a1e414610095575b600080fd5b61006b60048036038101906100669190610e91565b6100b3565b005b6100756101fd565b60405161008291906110a9565b60405180910390f35b6100936103be565b005b61009d6103c0565b6040516100aa9190611104565b60405180910390f35b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c906110e4565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055807f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a2816006819055507f221d507243adddffe789060be0e69bff4be830996c6b265bfda5083d86f886326006546040516101f09190611104565b60405180910390a1505050565b6000806102327f000000000000000000000000000000000000000000000000000000000000000030634357855e60e01b6103c6565b90506102966040518060400160405280600381526020017f67657400000000000000000000000000000000000000000000000000000000008152506040518060800160405280604981526020016116f760499139836103f79092919063ffffffff16565b6103156040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280601881526020017f5241572c4554482c5553442c564f4c554d453234484f55520000000000000000815250836103f79092919063ffffffff16565b6000670de0b6b3a7640000905061036c6040518060400160405280600581526020017f74696d6573000000000000000000000000000000000000000000000000000000815250828461042a9092919063ffffffff16565b6103b77f0000000000000000000000000000000000000000000000000000000000000000837f000000000000000000000000000000000000000000000000000000000000000061045d565b9250505090565b565b60065481565b6103ce610d9e565b6103d6610d9e565b6103ed85858584610529909392919063ffffffff16565b9150509392505050565b61040e8284608001516105d990919063ffffffff16565b6104258184608001516105d990919063ffffffff16565b505050565b6104418284608001516105d990919063ffffffff16565b6104588184608001516105fe90919063ffffffff16565b505050565b6000806004549050600181610472919061114c565b6004819055506000634042994660e01b60008087600001513089604001518760018c60800151600001516040516024016104b3989796959493929190610fe6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905061051e868386846106ab565b925050509392505050565b610531610d9e565b610541856080015161010061084f565b508385600001818152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b6105e682600383516108b9565b6105f98183610a3e90919063ffffffff16565b505050565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811215610635576106308282610a60565b6106a7565b67ffffffffffffffff8113156106545761064f8282610ad7565b6106a6565b6000811261066d57610668826000836108b9565b6106a5565b6106a4826001837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61069f919061136d565b6108b9565b5b5b5b5050565b600030846040516020016106c0929190610fba565b604051602081830303815290604052805190602001209050846005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea08685856040518463ffffffff1660e01b81526004016107b69392919061106b565b602060405180830381600087803b1580156107d057600080fd5b505af11580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108089190610e64565b610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e906110c4565b60405180910390fd5b949350505050565b610857610e0b565b60006020836108669190611554565b14610892576020826108789190611554565b60206108849190611401565b8261088f919061114c565b91505b81836020018181525050604051808452600081528281016020016040525082905092915050565b60178167ffffffffffffffff16116108f0576108ea8160058460ff16901b60ff161784610b2390919063ffffffff16565b50610a39565b60ff8167ffffffffffffffff16116109465761091f601860058460ff16901b1784610b2390919063ffffffff16565b506109408167ffffffffffffffff16600185610b439092919063ffffffff16565b50610a38565b61ffff8167ffffffffffffffff161161099d57610976601960058460ff16901b1784610b2390919063ffffffff16565b506109978167ffffffffffffffff16600285610b439092919063ffffffff16565b50610a37565b63ffffffff8167ffffffffffffffff16116109f6576109cf601a60058460ff16901b1784610b2390919063ffffffff16565b506109f08167ffffffffffffffff16600485610b439092919063ffffffff16565b50610a36565b610a13601b60058460ff16901b1784610b2390919063ffffffff16565b50610a348167ffffffffffffffff16600885610b439092919063ffffffff16565b505b5b5b5b505050565b610a46610e0b565b610a5883846000015151848551610b65565b905092915050565b610a7e60036005600660ff16901b1783610b2390919063ffffffff16565b50610ad382827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610aaf919061136d565b604051602001610abf9190611104565b604051602081830303815290604052610c54565b5050565b610af560026005600660ff16901b1783610b2390919063ffffffff16565b50610b1f8282604051602001610b0b9190611104565b604051602081830303815290604052610c54565b5050565b610b2b610e0b565b610b3b8384600001515184610c79565b905092915050565b610b4b610e0b565b610b5c848560000151518585610cd0565b90509392505050565b610b6d610e0b565b8251821115610b7b57600080fd5b84602001518285610b8c919061114c565b1115610bc157610bc0856002610bb188602001518887610bac919061114c565b610d5e565b610bbb9190611313565b610d7a565b5b600080865180518760208301019350808887011115610be05787860182525b60208701925050505b60208410610c275780518252602082610c02919061114c565b9150602081610c11919061114c565b9050602084610c209190611401565b9350610be9565b60006001856020036101000a03905080198251168184511681811785525050508692505050949350505050565b610c6182600283516108b9565b610c748183610a3e90919063ffffffff16565b505050565b610c81610e0b565b83602001518310610ca757610ca68460028660200151610ca19190611313565b610d7a565b5b8351805160208583010184815381861415610cc3576001820183525b5050508390509392505050565b610cd8610e0b565b84602001518483610ce9919061114c565b1115610d1157610d108560028685610d01919061114c565b610d0b9190611313565b610d7a565b5b6000600183610100610d2391906111f5565b610d2d9190611401565b90508551838682010185831982511617815281518588011115610d505784870182525b505085915050949350505050565b600081831115610d7057829050610d74565b8190505b92915050565b600082600001519050610d8d838361084f565b50610d988382610a3e565b50505050565b6040518060a0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001610e05610e0b565b81525090565b604051806040016040528060608152602001600081525090565b600081519050610e34816116b1565b92915050565b600081359050610e49816116c8565b92915050565b600081359050610e5e816116df565b92915050565b600060208284031215610e7a57610e796115e3565b5b6000610e8884828501610e25565b91505092915050565b60008060408385031215610ea857610ea76115e3565b5b6000610eb685828601610e3a565b9250506020610ec785828601610e4f565b9150509250929050565b610eda81611435565b82525050565b610ee981611453565b82525050565b610ef88161145d565b82525050565b6000610f098261111f565b610f13818561112a565b9350610f238185602086016114f3565b610f2c816115e8565b840191505092915050565b610f48610f43826114bd565b611526565b82525050565b6000610f5b60238361113b565b9150610f6682611613565b604082019050919050565b6000610f7e60288361113b565b9150610f8982611662565b604082019050919050565b610f9d816114b3565b82525050565b610fb4610faf826114b3565b61154a565b82525050565b6000610fc68285610f37565b601482019150610fd68284610fa3565b6020820191508190509392505050565b600061010082019050610ffc600083018b610ed1565b611009602083018a610f94565b6110166040830189610ee0565b6110236060830188610ed1565b6110306080830187610eef565b61103d60a0830186610f94565b61104a60c0830185610f94565b81810360e083015261105c8184610efe565b90509998505050505050505050565b60006060820190506110806000830186610ed1565b61108d6020830185610f94565b818103604083015261109f8184610efe565b9050949350505050565b60006020820190506110be6000830184610ee0565b92915050565b600060208201905081810360008301526110dd81610f4e565b9050919050565b600060208201905081810360008301526110fd81610f71565b9050919050565b60006020820190506111196000830184610f94565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611157826114b3565b9150611162836114b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561119757611196611585565b5b828201905092915050565b6000808291508390505b60018511156111ec578086048111156111c8576111c7611585565b5b60018516156111d75780820291505b80810290506111e585611606565b94506111ac565b94509492505050565b6000611200826114b3565b915061120b836114b3565b92506112387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611240565b905092915050565b600082611250576001905061130c565b8161125e576000905061130c565b8160018114611274576002811461127e576112ad565b600191505061130c565b60ff8411156112905761128f611585565b5b8360020a9150848211156112a7576112a6611585565b5b5061130c565b5060208310610133831016604e8410600b84101617156112e25782820a9050838111156112dd576112dc611585565b5b61130c565b6112ef84848460016111a2565b9250905081840481111561130657611305611585565b5b81810290505b9392505050565b600061131e826114b3565b9150611329836114b3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561136257611361611585565b5b828202905092915050565b600061137882611489565b915061138383611489565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156113be576113bd611585565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156113f6576113f5611585565b5b828203905092915050565b600061140c826114b3565b9150611417836114b3565b92508282101561142a57611429611585565b5b828203905092915050565b600061144082611493565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114c8826114cf565b9050919050565b60006114da826114e1565b9050919050565b60006114ec82611493565b9050919050565b60005b838110156115115780820151818401526020810190506114f6565b83811115611520576000848401525b50505050565b600061153182611538565b9050919050565b6000611543826115f9565b9050919050565b6000819050919050565b600061155f826114b3565b915061156a836114b3565b92508261157a576115796115b4565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160011c9050919050565b7f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160008201527f636c650000000000000000000000000000000000000000000000000000000000602082015250565b7f536f75726365206d75737420626520746865206f7261636c65206f662074686560008201527f2072657175657374000000000000000000000000000000000000000000000000602082015250565b6116ba81611447565b81146116c557600080fd5b50565b6116d181611453565b81146116dc57600080fd5b50565b6116e8816114b3565b81146116f357600080fd5b5056fe68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a2646970667358221220b63fdcc30cbbe05a8dafcaa1049fd3d5c86abca5dc691e2728ac165b0aebce3464736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4357855E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6021ABAC EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x8DC654A2 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xC618A1E4 EQ PUSH2 0x95 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x3BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C SWAP1 PUSH2 0x10E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x221D507243ADDDFFE789060BE0E69BFF4BE830996C6B265BFDA5083D86F88632 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x232 PUSH32 0x0 ADDRESS PUSH4 0x4357855E PUSH1 0xE0 SHL PUSH2 0x3C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x296 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6765740000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x49 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F7 PUSH1 0x49 SWAP2 CODECOPY DUP4 PUSH2 0x3F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x315 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7061746800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5241572C4554482C5553442C564F4C554D453234484F55520000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x3F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH2 0x36C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x74696D6573000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 DUP5 PUSH2 0x42A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3B7 PUSH32 0x0 DUP4 PUSH32 0x0 PUSH2 0x45D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x3ED DUP6 DUP6 DUP6 DUP5 PUSH2 0x529 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x40E DUP3 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x5D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x425 DUP2 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x5D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x441 DUP3 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x5D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x458 DUP2 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x5FE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x1 DUP2 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH4 0x40429946 PUSH1 0xE0 SHL PUSH1 0x0 DUP1 DUP8 PUSH1 0x0 ADD MLOAD ADDRESS DUP10 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x1 DUP13 PUSH1 0x80 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4B3 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x51E DUP7 DUP4 DUP7 DUP5 PUSH2 0x6AB JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x531 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x541 DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x84F JUMP JUMPDEST POP DUP4 DUP6 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP6 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP6 PUSH1 0x40 ADD SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP POP DUP5 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5E6 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0x5F9 DUP2 DUP4 PUSH2 0xA3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP2 SLT ISZERO PUSH2 0x635 JUMPI PUSH2 0x630 DUP3 DUP3 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SGT ISZERO PUSH2 0x654 JUMPI PUSH2 0x64F DUP3 DUP3 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x66D JUMPI PUSH2 0x668 DUP3 PUSH1 0x0 DUP4 PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x6A4 DUP3 PUSH1 0x1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C0 SWAP3 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP5 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x106B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x857 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST EQ PUSH2 0x892 JUMPI PUSH1 0x20 DUP3 PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1401 JUMP JUMPDEST DUP3 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 DUP2 MSTORE DUP3 DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x8F0 JUMPI PUSH2 0x8EA DUP2 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL PUSH1 0xFF AND OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x946 JUMPI PUSH2 0x91F PUSH1 0x18 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x940 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP6 PUSH2 0xB43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA38 JUMP JUMPDEST PUSH2 0xFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x99D JUMPI PUSH2 0x976 PUSH1 0x19 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x997 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP6 PUSH2 0xB43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA37 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x9F6 JUMPI PUSH2 0x9CF PUSH1 0x1A PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x9F0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP6 PUSH2 0xB43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xA13 PUSH1 0x1B PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xA34 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP6 PUSH2 0xB43 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA46 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xA58 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0xB65 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA7E PUSH1 0x3 PUSH1 0x5 PUSH1 0x6 PUSH1 0xFF AND SWAP1 SHL OR DUP4 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xAD3 DUP3 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xC54 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAF5 PUSH1 0x2 PUSH1 0x5 PUSH1 0x6 PUSH1 0xFF AND SWAP1 SHL OR DUP4 PUSH2 0xB23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xB1F DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xC54 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xB3B DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xB5C DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xE0B JUMP JUMPDEST DUP3 MLOAD DUP3 GT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP3 DUP6 PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST GT ISZERO PUSH2 0xBC1 JUMPI PUSH2 0xBC0 DUP6 PUSH1 0x2 PUSH2 0xBB1 DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP8 PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH2 0xD5E JUMP JUMPDEST PUSH2 0xBBB SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0xBE0 JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP8 ADD SWAP3 POP POP POP JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0xC27 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 PUSH2 0xC02 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 PUSH2 0xC20 SWAP2 SWAP1 PUSH2 0x1401 JUMP JUMPDEST SWAP4 POP PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP DUP7 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC61 DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0xC74 DUP2 DUP4 PUSH2 0xA3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC81 PUSH2 0xE0B JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0xCA7 JUMPI PUSH2 0xCA6 DUP5 PUSH1 0x2 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 DUP2 DUP7 EQ ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x1 DUP3 ADD DUP4 MSTORE JUMPDEST POP POP POP DUP4 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCD8 PUSH2 0xE0B JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP4 PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST GT ISZERO PUSH2 0xD11 JUMPI PUSH2 0xD10 DUP6 PUSH1 0x2 DUP7 DUP6 PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x100 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1401 JUMP JUMPDEST SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0xD50 JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP POP DUP6 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xD70 JUMPI DUP3 SWAP1 POP PUSH2 0xD74 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH2 0xD8D DUP4 DUP4 PUSH2 0x84F JUMP JUMPDEST POP PUSH2 0xD98 DUP4 DUP3 PUSH2 0xA3E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE05 PUSH2 0xE0B JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE34 DUP2 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE49 DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5E DUP2 PUSH2 0x16DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7A JUMPI PUSH2 0xE79 PUSH2 0x15E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP5 DUP3 DUP6 ADD PUSH2 0xE25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0x15E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB6 DUP6 DUP3 DUP7 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEC7 DUP6 DUP3 DUP7 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDA DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEE9 DUP2 PUSH2 0x1453 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEF8 DUP2 PUSH2 0x145D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF09 DUP3 PUSH2 0x111F JUMP JUMPDEST PUSH2 0xF13 DUP2 DUP6 PUSH2 0x112A JUMP JUMPDEST SWAP4 POP PUSH2 0xF23 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14F3 JUMP JUMPDEST PUSH2 0xF2C DUP2 PUSH2 0x15E8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF48 PUSH2 0xF43 DUP3 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B PUSH1 0x23 DUP4 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP PUSH2 0xF66 DUP3 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7E PUSH1 0x28 DUP4 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP PUSH2 0xF89 DUP3 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9D DUP2 PUSH2 0x14B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFB4 PUSH2 0xFAF DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x154A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC6 DUP3 DUP6 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xFD6 DUP3 DUP5 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xFFC PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x1009 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x1016 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x1023 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x1030 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xEEF JUMP JUMPDEST PUSH2 0x103D PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x104A PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0xF94 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x105C DUP2 DUP5 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1080 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x108D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF94 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x109F DUP2 DUP5 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10DD DUP2 PUSH2 0xF4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FD DUP2 PUSH2 0xF71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1157 DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1162 DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1197 JUMPI PUSH2 0x1196 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x11EC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x11C8 JUMPI PUSH2 0x11C7 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x11D7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x11E5 DUP6 PUSH2 0x1606 JUMP JUMPDEST SWAP5 POP PUSH2 0x11AC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1200 DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x120B DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1238 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1250 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x130C JUMP JUMPDEST DUP2 PUSH2 0x125E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x130C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1274 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x127E JUMPI PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x130C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x12A7 JUMPI PUSH2 0x12A6 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST POP PUSH2 0x130C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x12E2 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x12DD JUMPI PUSH2 0x12DC PUSH2 0x1585 JUMP JUMPDEST JUMPDEST PUSH2 0x130C JUMP JUMPDEST PUSH2 0x12EF DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x11A2 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131E DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1329 DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1362 JUMPI PUSH2 0x1361 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1378 DUP3 PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP PUSH2 0x1383 DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 ADD DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND ISZERO PUSH2 0x13BE JUMPI PUSH2 0x13BD PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP3 SGT PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x13F6 JUMPI PUSH2 0x13F5 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140C DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1417 DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x142A JUMPI PUSH2 0x1429 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1440 DUP3 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C8 DUP3 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DA DUP3 PUSH2 0x14E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14EC DUP3 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1511 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14F6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1520 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1531 DUP3 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 PUSH2 0x15F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155F DUP3 PUSH2 0x14B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x156A DUP4 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x157A JUMPI PUSH2 0x1579 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x636C650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2072657175657374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x16BA DUP2 PUSH2 0x1447 JUMP JUMPDEST DUP2 EQ PUSH2 0x16C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x1453 JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16E8 DUP2 PUSH2 0x14B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH9 0x747470733A2F2F6D69 PUSH15 0x2D6170692E63727970746F636F6D70 PUSH2 0x7265 0x2E PUSH4 0x6F6D2F64 PUSH2 0x7461 0x2F PUSH17 0x726963656D756C746966756C6C3F667379 PUSH14 0x733D455448267473796D733D5553 DIFFICULTY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 EXTCODEHASH 0xDC 0xC3 0xC 0xBB 0xE0 GAS DUP14 0xAF 0xCA LOG1 DIV SWAP16 0xD3 0xD5 0xC8 PUSH11 0xBCA5DC691E2728AC165B0A 0xEB 0xCE CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"264:3236:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3119:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1730:1178;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3463:35;;;:::i;:::-;;354:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3119:190;3223:10;11663:17:1;:28;11681:9;11663:28;;;;;;;;;;;;;;;;;;;;;11649:42;;:10;:42;;;11641:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;11749:17;:28;11767:9;11749:28;;;;;;;;;;;;11742:35;;;;;;;;;;;11807:9;11788:29;;;;;;;;;;3258:7:16::1;3249:6;:16;;;;3280:22;3295:6;;3280:22;;;;;;:::i;:::-;;;;;;;;3119:190:::0;;;:::o;1730:1178::-;1775:17;1804:32;1839:112;1874:5;1901:4;1920:21;;;1839;:112::i;:::-;1804:147;;2015:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:11;;:129;;;;;:::i;:::-;2551:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:11;;:47;;;;;:::i;:::-;2737:18;2758:6;2737:27;;2774:36;;;;;;;;;;;;;;;;;;2798:11;2774:7;:14;;:36;;;;;:::i;:::-;2857:44;2880:6;2888:7;2897:3;2857:22;:44::i;:::-;2850:51;;;;1730:1178;:::o;3463:35::-;:::o;354:21::-;;;;:::o;1850:283:1:-;1992:24;;:::i;:::-;2024:28;;:::i;:::-;2065:63;2080:6;2088:12;2102:25;2065:3;:14;;:63;;;;;;:::i;:::-;2058:70;;;1850:283;;;;;:::o;1951:175:0:-;2061:26;2083:3;2061:4;:8;;;:21;;:26;;;;:::i;:::-;2093:28;2115:5;2093:4;:8;;;:21;;:28;;;;:::i;:::-;1951:175;;;:::o;2712:168::-;2818:26;2840:3;2818:4;:8;;;:21;;:26;;;;:::i;:::-;2850:25;2869:5;2850:4;:8;;;:18;;:25;;;;:::i;:::-;2712:168;;;:::o;3687:756:1:-;3823:17;3848:13;3864:14;;3848:30;;3909:1;3901:5;:9;;;;:::i;:::-;3884:14;:26;;;;3916:27;3976:48;;;784:1;728;4245:3;:6;;;4267:4;4280:3;:22;;;4310:5;837:1;4350:3;:7;;;:11;;;3946:421;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3916:451;;4380:58;4392:13;4407:5;4414:7;4423:14;4380:11;:58::i;:::-;4373:65;;;;3687:756;;;;;:::o;987:351:0:-;1129:24;;:::i;:::-;1161:49;1182:4;:8;;;361:3;1161:20;:49::i;:::-;;1226:5;1216:4;:7;;:15;;;;;1260:12;1237:4;:20;;:35;;;;;;;;;;;1304:12;1278:4;:23;;:38;;;;;;;;;;;;;1329:4;1322:11;;987:351;;;;;;:::o;2777:204:14:-;2875:71;2894:3;383:1;2931:5;2925:19;2875:18;:71::i;:::-;2952:24;2969:5;2952:3;:10;;:24;;;;:::i;:::-;;2777:204;;:::o;1704:446::-;1800:20;1792:5;:28;1789:357;;;1830:30;1849:3;1854:5;1830:18;:30::i;:::-;1789:357;;;1884:18;1876:5;:26;1873:273;;;1912:30;1925:3;1935:5;1912:12;:30::i;:::-;1873:273;;;1967:1;1958:5;:10;1955:191;;1978:63;1997:3;234:1;2033:5;1978:18;:63::i;:::-;1955:191;;;2062:77;2081:3;288:1;2131:5;2126:2;:10;;;;:::i;:::-;2062:18;:77::i;:::-;1955:191;1873:273;1789:357;1704:446;;:::o;6629:430:1:-;6771:17;6835:4;6841:5;6818:29;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6808:40;;;;;;6796:52;;6885:13;6854:17;:28;6872:9;6854:28;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;6928:9;6909:29;;;;;;;;;;6952:6;;;;;;;;;;;:22;;;6975:13;6990:7;6999:14;6952:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6944:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6629:430;;;;;;:::o;1001:399:13:-;1075:13;;:::i;:::-;1117:1;1111:2;1100:8;:13;;;;:::i;:::-;:18;1096:71;;1157:2;1146:8;:13;;;;:::i;:::-;1140:2;:20;;;;:::i;:::-;1128:32;;;;;:::i;:::-;;;1096:71;1229:8;1214:3;:12;;:23;;;;;1277:4;1271:11;1301:3;1296;1289:16;1324:1;1319:3;1312:14;1363:8;1358:3;1354:18;1350:2;1346:27;1340:4;1333:41;1252:128;1392:3;1385:10;;1001:399;;;;:::o;682:625:14:-;803:2;794:5;:11;;;791:512;;815:44;852:5;847:1;838:5;:10;;;;837:20;;;815:3;:15;;:44;;;;:::i;:::-;;791:512;;;885:4;876:5;:13;;;872:431;;899:41;936:2;931:1;922:5;:10;;;;921:17;899:3;:15;;:41;;;;:::i;:::-;;948:23;962:5;948:23;;969:1;948:3;:13;;:23;;;;;:::i;:::-;;872:431;;;997:6;988:5;:15;;;984:319;;1013:41;1050:2;1045:1;1036:5;:10;;;;1035:17;1013:3;:15;;:41;;;;:::i;:::-;;1062:23;1076:5;1062:23;;1083:1;1062:3;:13;;:23;;;;;:::i;:::-;;984:319;;;1111:10;1102:5;:19;;;1098:205;;1131:41;1168:2;1163:1;1154:5;:10;;;;1153:17;1131:3;:15;;:41;;;;:::i;:::-;;1180:23;1194:5;1180:23;;1201:1;1180:3;:13;;:23;;;;;:::i;:::-;;1098:205;;;1224:41;1261:2;1256:1;1247:5;:10;;;;1246:17;1224:3;:15;;:41;;;;:::i;:::-;;1273:23;1287:5;1273:23;;1294:1;1273:3;:13;;:23;;;;;:::i;:::-;;1098:205;984:319;872:431;791:512;682:625;;;:::o;4692:155:13:-;4769:13;;:::i;:::-;4797:45;4803:3;4808;:7;;;:14;4824:4;4830;:11;4797:5;:45::i;:::-;4790:52;;4692:155;;;;:::o;2547:226:14:-;2641:72;676:1;2682;520;2664:19;;;;2663:48;2641:3;:15;;:72;;;;:::i;:::-;;2719:49;2731:3;2760:5;2755:2;:10;;;;:::i;:::-;2736:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;2719:11;:49::i;:::-;2547:226;;:::o;2345:198::-;2434:63;621:1;2475;520;2457:19;;;;2456:39;2434:3;:15;;:63;;;;:::i;:::-;;2503:35;2515:3;2531:5;2520:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;2503:11;:35::i;:::-;2345:198;;:::o;6040:145:13:-;6115:13;;:::i;:::-;6143:37;6154:3;6159;:7;;;:14;6175:4;6143:10;:37::i;:::-;6136:44;;6040:145;;;;:::o;9894:177::-;9998:13;;:::i;:::-;10026:40;10035:3;10040;:7;;;:14;10056:4;10062:3;10026:8;:40::i;:::-;10019:47;;9894:177;;;;;:::o;2745:1210::-;2867:13;;:::i;:::-;2903:4;:11;2896:3;:18;;2888:27;;;;;;2938:3;:12;;;2932:3;2926;:9;;;;:::i;:::-;:24;2922:90;;;2960:45;2967:3;3003:1;2972:28;2976:3;:12;;;2996:3;2990;:9;;;;:::i;:::-;2972:3;:28::i;:::-;:32;;;;:::i;:::-;2960:6;:45::i;:::-;2922:90;3018:12;3036:11;3133:3;3127:10;3204:6;3198:13;3320:3;3315:2;3307:6;3303:15;3299:25;3291:33;;3404:6;3398:3;3393;3389:13;3386:25;3383:76;;;3446:3;3441;3437:13;3429:6;3422:29;3383:76;3483:2;3477:4;3473:13;3466:20;;3062:430;;3544:129;3558:2;3551:3;:9;3544:129;;3619:3;3613:10;3607:4;3600:24;3647:2;3639:10;;;;;:::i;:::-;;;3664:2;3657:9;;;;;:::i;:::-;;;3569:2;3562:9;;;;;:::i;:::-;;;3544:129;;;3725:12;3760:1;3752:3;3747:2;:8;3741:3;:15;3740:21;3725:36;;3823:4;3819:9;3813:3;3807:10;3803:26;3871:4;3864;3858:11;3854:22;3911:7;3901:8;3898:21;3892:4;3885:35;3778:150;;;3947:3;3940:10;;;;2745:1210;;;;;;:::o;2154:187:14:-;2250:63;2269:3;335:1;2299:5;:12;2250:18;:63::i;:::-;2319:17;2330:5;2319:3;:10;;:17;;;;:::i;:::-;;2154:187;;:::o;5148:639:13:-;5251:13;;:::i;:::-;5283:3;:12;;;5276:3;:19;5272:69;;5305:29;5312:3;5332:1;5317:3;:12;;;:16;;;;:::i;:::-;5305:6;:29::i;:::-;5272:69;5427:3;5421:10;5498:6;5492:13;5610:2;5604:3;5596:6;5592:16;5588:25;5634:4;5628;5620:19;5705:6;5700:3;5697:15;5694:67;;;5750:1;5742:6;5738:14;5730:6;5723:30;5694:67;5356:411;;;5779:3;5772:10;;5148:639;;;;;:::o;8974:675::-;9093:13;;:::i;:::-;9130:3;:12;;;9124:3;9118;:9;;;;:::i;:::-;:24;9114:73;;;9152:28;9159:3;9178:1;9171:3;9165;:9;;;;:::i;:::-;9164:15;;;;:::i;:::-;9152:6;:28::i;:::-;9114:73;9193:12;9221:1;9214:3;9209;:8;;;;:::i;:::-;9208:14;;;;:::i;:::-;9193:29;;9308:3;9302:10;9423:3;9417;9409:6;9405:16;9401:26;9479:4;9471;9467:9;9460:4;9454:11;9450:27;9447:37;9441:4;9434:51;9567:6;9561:13;9555:3;9550;9546:13;9543:32;9540:83;;;9610:3;9605;9601:13;9593:6;9586:29;9540:83;9237:392;;9641:3;9634:10;;;8974:675;;;;;;:::o;1961:124::-;2018:7;2041:1;2037;:5;2033:34;;;2059:1;2052:8;;;;2033:34;2079:1;2072:8;;1961:124;;;;;:::o;1801:156::-;1873:19;1895:3;:7;;;1873:29;;1908:19;1913:3;1918:8;1908:4;:19::i;:::-;;1933;1940:3;1945:6;1933;:19::i;:::-;;1867:90;1801:156;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;7:137:22:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:345::-;507:6;556:2;544:9;535:7;531:23;527:32;524:119;;;562:79;;:::i;:::-;524:119;682:1;707:61;760:7;751:6;740:9;736:22;707:61;:::i;:::-;697:71;;653:125;440:345;;;;:::o;791:474::-;859:6;867;916:2;904:9;895:7;891:23;887:32;884:119;;;922:79;;:::i;:::-;884:119;1042:1;1067:53;1112:7;1103:6;1092:9;1088:22;1067:53;:::i;:::-;1057:63;;1013:117;1169:2;1195:53;1240:7;1231:6;1220:9;1216:22;1195:53;:::i;:::-;1185:63;;1140:118;791:474;;;;;:::o;1271:118::-;1358:24;1376:5;1358:24;:::i;:::-;1353:3;1346:37;1271:118;;:::o;1395:::-;1482:24;1500:5;1482:24;:::i;:::-;1477:3;1470:37;1395:118;;:::o;1519:115::-;1604:23;1621:5;1604:23;:::i;:::-;1599:3;1592:36;1519:115;;:::o;1640:360::-;1726:3;1754:38;1786:5;1754:38;:::i;:::-;1808:70;1871:6;1866:3;1808:70;:::i;:::-;1801:77;;1887:52;1932:6;1927:3;1920:4;1913:5;1909:16;1887:52;:::i;:::-;1964:29;1986:6;1964:29;:::i;:::-;1959:3;1955:39;1948:46;;1730:270;1640:360;;;;:::o;2006:216::-;2134:81;2154:60;2208:5;2154:60;:::i;:::-;2134:81;:::i;:::-;2129:3;2122:94;2006:216;;:::o;2228:366::-;2370:3;2391:67;2455:2;2450:3;2391:67;:::i;:::-;2384:74;;2467:93;2556:3;2467:93;:::i;:::-;2585:2;2580:3;2576:12;2569:19;;2228:366;;;:::o;2600:::-;2742:3;2763:67;2827:2;2822:3;2763:67;:::i;:::-;2756:74;;2839:93;2928:3;2839:93;:::i;:::-;2957:2;2952:3;2948:12;2941:19;;2600:366;;;:::o;2972:118::-;3059:24;3077:5;3059:24;:::i;:::-;3054:3;3047:37;2972:118;;:::o;3096:157::-;3201:45;3221:24;3239:5;3221:24;:::i;:::-;3201:45;:::i;:::-;3196:3;3189:58;3096:157;;:::o;3259:443::-;3422:3;3437:98;3531:3;3522:6;3437:98;:::i;:::-;3560:2;3555:3;3551:12;3544:19;;3573:75;3644:3;3635:6;3573:75;:::i;:::-;3673:2;3668:3;3664:12;3657:19;;3693:3;3686:10;;3259:443;;;;;:::o;3708:1080::-;4013:4;4051:3;4040:9;4036:19;4028:27;;4065:71;4133:1;4122:9;4118:17;4109:6;4065:71;:::i;:::-;4146:72;4214:2;4203:9;4199:18;4190:6;4146:72;:::i;:::-;4228;4296:2;4285:9;4281:18;4272:6;4228:72;:::i;:::-;4310;4378:2;4367:9;4363:18;4354:6;4310:72;:::i;:::-;4392:71;4458:3;4447:9;4443:19;4434:6;4392:71;:::i;:::-;4473:73;4541:3;4530:9;4526:19;4517:6;4473:73;:::i;:::-;4556;4624:3;4613:9;4609:19;4600:6;4556:73;:::i;:::-;4677:9;4671:4;4667:20;4661:3;4650:9;4646:19;4639:49;4705:76;4776:4;4767:6;4705:76;:::i;:::-;4697:84;;3708:1080;;;;;;;;;;;:::o;4794:529::-;4961:4;4999:2;4988:9;4984:18;4976:26;;5012:71;5080:1;5069:9;5065:17;5056:6;5012:71;:::i;:::-;5093:72;5161:2;5150:9;5146:18;5137:6;5093:72;:::i;:::-;5212:9;5206:4;5202:20;5197:2;5186:9;5182:18;5175:48;5240:76;5311:4;5302:6;5240:76;:::i;:::-;5232:84;;4794:529;;;;;;:::o;5329:222::-;5422:4;5460:2;5449:9;5445:18;5437:26;;5473:71;5541:1;5530:9;5526:17;5517:6;5473:71;:::i;:::-;5329:222;;;;:::o;5557:419::-;5723:4;5761:2;5750:9;5746:18;5738:26;;5810:9;5804:4;5800:20;5796:1;5785:9;5781:17;5774:47;5838:131;5964:4;5838:131;:::i;:::-;5830:139;;5557:419;;;:::o;5982:::-;6148:4;6186:2;6175:9;6171:18;6163:26;;6235:9;6229:4;6225:20;6221:1;6210:9;6206:17;6199:47;6263:131;6389:4;6263:131;:::i;:::-;6255:139;;5982:419;;;:::o;6407:222::-;6500:4;6538:2;6527:9;6523:18;6515:26;;6551:71;6619:1;6608:9;6604:17;6595:6;6551:71;:::i;:::-;6407:222;;;;:::o;6716:98::-;6767:6;6801:5;6795:12;6785:22;;6716:98;;;:::o;6820:168::-;6903:11;6937:6;6932:3;6925:19;6977:4;6972:3;6968:14;6953:29;;6820:168;;;;:::o;6994:169::-;7078:11;7112:6;7107:3;7100:19;7152:4;7147:3;7143:14;7128:29;;6994:169;;;;:::o;7169:305::-;7209:3;7228:20;7246:1;7228:20;:::i;:::-;7223:25;;7262:20;7280:1;7262:20;:::i;:::-;7257:25;;7416:1;7348:66;7344:74;7341:1;7338:81;7335:107;;;7422:18;;:::i;:::-;7335:107;7466:1;7463;7459:9;7452:16;;7169:305;;;;:::o;7480:848::-;7541:5;7548:4;7572:6;7563:15;;7596:5;7587:14;;7610:712;7631:1;7621:8;7618:15;7610:712;;;7726:4;7721:3;7717:14;7711:4;7708:24;7705:50;;;7735:18;;:::i;:::-;7705:50;7785:1;7775:8;7771:16;7768:451;;;8200:4;8193:5;8189:16;8180:25;;7768:451;8250:4;8244;8240:15;8232:23;;8280:32;8303:8;8280:32;:::i;:::-;8268:44;;7610:712;;;7480:848;;;;;;;:::o;8334:285::-;8394:5;8418:23;8436:4;8418:23;:::i;:::-;8410:31;;8462:27;8480:8;8462:27;:::i;:::-;8450:39;;8508:104;8545:66;8535:8;8529:4;8508:104;:::i;:::-;8499:113;;8334:285;;;;:::o;8625:1073::-;8679:5;8870:8;8860:40;;8891:1;8882:10;;8893:5;;8860:40;8919:4;8909:36;;8936:1;8927:10;;8938:5;;8909:36;9005:4;9053:1;9048:27;;;;9089:1;9084:191;;;;8998:277;;9048:27;9066:1;9057:10;;9068:5;;;9084:191;9129:3;9119:8;9116:17;9113:43;;;9136:18;;:::i;:::-;9113:43;9185:8;9182:1;9178:16;9169:25;;9220:3;9213:5;9210:14;9207:40;;;9227:18;;:::i;:::-;9207:40;9260:5;;;8998:277;;9384:2;9374:8;9371:16;9365:3;9359:4;9356:13;9352:36;9334:2;9324:8;9321:16;9316:2;9310:4;9307:12;9303:35;9287:111;9284:246;;;9440:8;9434:4;9430:19;9421:28;;9475:3;9468:5;9465:14;9462:40;;;9482:18;;:::i;:::-;9462:40;9515:5;;9284:246;9555:42;9593:3;9583:8;9577:4;9574:1;9555:42;:::i;:::-;9540:57;;;;9629:4;9624:3;9620:14;9613:5;9610:25;9607:51;;;9638:18;;:::i;:::-;9607:51;9687:4;9680:5;9676:16;9667:25;;8625:1073;;;;;;:::o;9704:348::-;9744:7;9767:20;9785:1;9767:20;:::i;:::-;9762:25;;9801:20;9819:1;9801:20;:::i;:::-;9796:25;;9989:1;9921:66;9917:74;9914:1;9911:81;9906:1;9899:9;9892:17;9888:105;9885:131;;;9996:18;;:::i;:::-;9885:131;10044:1;10041;10037:9;10026:20;;9704:348;;;;:::o;10058:527::-;10097:4;10117:19;10134:1;10117:19;:::i;:::-;10112:24;;10150:19;10167:1;10150:19;:::i;:::-;10145:24;;10339:1;10271:66;10267:74;10264:1;10260:82;10255:1;10252;10248:9;10241:17;10237:106;10234:132;;;10346:18;;:::i;:::-;10234:132;10525:1;10457:66;10453:74;10450:1;10446:82;10442:1;10439;10435:9;10431:98;10428:124;;;10532:18;;:::i;:::-;10428:124;10577:1;10574;10570:9;10562:17;;10058:527;;;;:::o;10591:191::-;10631:4;10651:20;10669:1;10651:20;:::i;:::-;10646:25;;10685:20;10703:1;10685:20;:::i;:::-;10680:25;;10724:1;10721;10718:8;10715:34;;;10729:18;;:::i;:::-;10715:34;10774:1;10771;10767:9;10759:17;;10591:191;;;;:::o;10788:96::-;10825:7;10854:24;10872:5;10854:24;:::i;:::-;10843:35;;10788:96;;;:::o;10890:90::-;10924:7;10967:5;10960:13;10953:21;10942:32;;10890:90;;;:::o;10986:77::-;11023:7;11052:5;11041:16;;10986:77;;;:::o;11069:149::-;11105:7;11145:66;11138:5;11134:78;11123:89;;11069:149;;;:::o;11224:76::-;11260:7;11289:5;11278:16;;11224:76;;;:::o;11306:126::-;11343:7;11383:42;11376:5;11372:54;11361:65;;11306:126;;;:::o;11438:77::-;11475:7;11504:5;11493:16;;11438:77;;;:::o;11521:149::-;11594:9;11627:37;11658:5;11627:37;:::i;:::-;11614:50;;11521:149;;;:::o;11676:126::-;11726:9;11759:37;11790:5;11759:37;:::i;:::-;11746:50;;11676:126;;;:::o;11808:113::-;11858:9;11891:24;11909:5;11891:24;:::i;:::-;11878:37;;11808:113;;;:::o;11927:307::-;11995:1;12005:113;12019:6;12016:1;12013:13;12005:113;;;12104:1;12099:3;12095:11;12089:18;12085:1;12080:3;12076:11;12069:39;12041:2;12038:1;12034:10;12029:15;;12005:113;;;12136:6;12133:1;12130:13;12127:101;;;12216:1;12207:6;12202:3;12198:16;12191:27;12127:101;11976:258;11927:307;;;:::o;12240:100::-;12279:7;12308:26;12328:5;12308:26;:::i;:::-;12297:37;;12240:100;;;:::o;12346:94::-;12385:7;12414:20;12428:5;12414:20;:::i;:::-;12403:31;;12346:94;;;:::o;12446:79::-;12485:7;12514:5;12503:16;;12446:79;;;:::o;12531:176::-;12563:1;12580:20;12598:1;12580:20;:::i;:::-;12575:25;;12614:20;12632:1;12614:20;:::i;:::-;12609:25;;12653:1;12643:35;;12658:18;;:::i;:::-;12643:35;12699:1;12696;12692:9;12687:14;;12531:176;;;;:::o;12713:180::-;12761:77;12758:1;12751:88;12858:4;12855:1;12848:15;12882:4;12879:1;12872:15;12899:180;12947:77;12944:1;12937:88;13044:4;13041:1;13034:15;13068:4;13065:1;13058:15;13208:117;13317:1;13314;13307:12;13331:102;13372:6;13423:2;13419:7;13414:2;13407:5;13403:14;13399:28;13389:38;;13331:102;;;:::o;13439:94::-;13472:8;13520:5;13516:2;13512:14;13491:35;;13439:94;;;:::o;13539:102::-;13581:8;13628:5;13625:1;13621:13;13600:34;;13539:102;;;:::o;13647:222::-;13787:34;13783:1;13775:6;13771:14;13764:58;13856:5;13851:2;13843:6;13839:15;13832:30;13647:222;:::o;13875:227::-;14015:34;14011:1;14003:6;13999:14;13992:58;14084:10;14079:2;14071:6;14067:15;14060:35;13875:227;:::o;14108:116::-;14178:21;14193:5;14178:21;:::i;:::-;14171:5;14168:32;14158:60;;14214:1;14211;14204:12;14158:60;14108:116;:::o;14230:122::-;14303:24;14321:5;14303:24;:::i;:::-;14296:5;14293:35;14283:63;;14342:1;14339;14332:12;14283:63;14230:122;:::o;14358:::-;14431:24;14449:5;14431:24;:::i;:::-;14424:5;14421:35;14411:63;;14470:1;14467;14460:12;14411:63;14358:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1201000","executionCost":"infinite","totalCost":"infinite"},"external":{"fulfill(bytes32,uint256)":"infinite","requestVolumeData()":"infinite","volume()":"2473","withdrawLink()":"166"}},"methodIdentifiers":{"fulfill(bytes32,uint256)":"4357855e","requestVolumeData()":"6021abac","volume()":"c618a1e4","withdrawLink()":"8dc654a2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_jobId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"name\":\"DataFullfilled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_volume\",\"type\":\"uint256\"}],\"name\":\"fulfill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestVolumeData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"volume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_fee\":\"- node operator price per API call / data request\",\"_jobId\":\"- specific job for :_oracle: to run; each job is unique and returns different types of data\",\"_link\":\"- LINK token address on the corresponding network Network: Goerli Oracle: 0xCC79157eb46F5624204f47AB42b3906cAA40eaB7 Job ID: ca98366cc7314957b8c012c72f05aeeb Fee: 0.1 LINK\",\"_oracle\":\"- address of the specific Chainlink node that a contract makes an API call from\"}},\"fulfill(bytes32,uint256)\":{\"params\":{\"_requestId\":\"- id of the request\",\"_volume\":\"- response; requested 24h trading volume of ETH in USD\"}},\"requestVolumeData()\":{\"returns\":{\"requestId\":\"- id of the request\"}},\"withdrawLink()\":{\"details\":\"Implement a withdraw function to avoid locking your LINK in the contract\"}},\"title\":\"The APIConsumer contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Executes once when a contract is created to initialize state variables\"},\"fulfill(bytes32,uint256)\":{\"notice\":\"Receives the response in the form of uint256\"},\"requestVolumeData()\":{\"notice\":\"Creates a Chainlink request to retrieve API response, find the target data, then multiply by 1000000000000000000 (to remove decimal places from data).\"},\"withdrawLink()\":{\"notice\":\"Witdraws LINK from the contract\"}},\"notice\":\"An API Consumer contract that makes GET requests to obtain 24h trading volume of ETH in USD\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/APIConsumer.sol\":\"APIConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {CBORChainlink} from \\\"./vendor/CBORChainlink.sol\\\";\\nimport {BufferChainlink} from \\\"./vendor/BufferChainlink.sol\\\";\\n\\n/**\\n * @title Library for common Chainlink functions\\n * @dev Uses imported CBOR library for encoding to buffer\\n */\\nlibrary Chainlink {\\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\\n\\n  using CBORChainlink for BufferChainlink.buffer;\\n\\n  struct Request {\\n    bytes32 id;\\n    address callbackAddress;\\n    bytes4 callbackFunctionId;\\n    uint256 nonce;\\n    BufferChainlink.buffer buf;\\n  }\\n\\n  /**\\n   * @notice Initializes a Chainlink request\\n   * @dev Sets the ID, callback address, and callback function signature on the request\\n   * @param self The uninitialized request\\n   * @param jobId The Job Specification ID\\n   * @param callbackAddr The callback address\\n   * @param callbackFunc The callback function signature\\n   * @return The initialized request\\n   */\\n  function initialize(\\n    Request memory self,\\n    bytes32 jobId,\\n    address callbackAddr,\\n    bytes4 callbackFunc\\n  ) internal pure returns (Chainlink.Request memory) {\\n    BufferChainlink.init(self.buf, defaultBufferSize);\\n    self.id = jobId;\\n    self.callbackAddress = callbackAddr;\\n    self.callbackFunctionId = callbackFunc;\\n    return self;\\n  }\\n\\n  /**\\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\\n   * @param self The initialized request\\n   * @param data The CBOR data\\n   */\\n  function setBuffer(Request memory self, bytes memory data) internal pure {\\n    BufferChainlink.init(self.buf, data.length);\\n    BufferChainlink.append(self.buf, data);\\n  }\\n\\n  /**\\n   * @notice Adds a string value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The string value to add\\n   */\\n  function add(\\n    Request memory self,\\n    string memory key,\\n    string memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeString(value);\\n  }\\n\\n  /**\\n   * @notice Adds a bytes value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The bytes value to add\\n   */\\n  function addBytes(\\n    Request memory self,\\n    string memory key,\\n    bytes memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeBytes(value);\\n  }\\n\\n  /**\\n   * @notice Adds a int256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The int256 value to add\\n   */\\n  function addInt(\\n    Request memory self,\\n    string memory key,\\n    int256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds a uint256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The uint256 value to add\\n   */\\n  function addUint(\\n    Request memory self,\\n    string memory key,\\n    uint256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeUInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds an array of strings to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param values The array of string values to add\\n   */\\n  function addStringArray(\\n    Request memory self,\\n    string memory key,\\n    string[] memory values\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.startArray();\\n    for (uint256 i = 0; i < values.length; i++) {\\n      self.buf.encodeString(values[i]);\\n    }\\n    self.buf.endSequence();\\n  }\\n}\\n\",\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Chainlink.sol\\\";\\nimport \\\"./interfaces/ENSInterface.sol\\\";\\nimport \\\"./interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"./interfaces/ChainlinkRequestInterface.sol\\\";\\nimport \\\"./interfaces/OperatorInterface.sol\\\";\\nimport \\\"./interfaces/PointerInterface.sol\\\";\\nimport {ENSResolver as ENSResolver_Chainlink} from \\\"./vendor/ENSResolver.sol\\\";\\n\\n/**\\n * @title The ChainlinkClient contract\\n * @notice Contract writers can inherit this contract in order to create requests for the\\n * Chainlink network\\n */\\nabstract contract ChainlinkClient {\\n  using Chainlink for Chainlink.Request;\\n\\n  uint256 internal constant LINK_DIVISIBILITY = 10**18;\\n  uint256 private constant AMOUNT_OVERRIDE = 0;\\n  address private constant SENDER_OVERRIDE = address(0);\\n  uint256 private constant ORACLE_ARGS_VERSION = 1;\\n  uint256 private constant OPERATOR_ARGS_VERSION = 2;\\n  bytes32 private constant ENS_TOKEN_SUBNAME = keccak256(\\\"link\\\");\\n  bytes32 private constant ENS_ORACLE_SUBNAME = keccak256(\\\"oracle\\\");\\n  address private constant LINK_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\\n\\n  ENSInterface private s_ens;\\n  bytes32 private s_ensNode;\\n  LinkTokenInterface private s_link;\\n  OperatorInterface private s_oracle;\\n  uint256 private s_requestCount = 1;\\n  mapping(bytes32 => address) private s_pendingRequests;\\n\\n  event ChainlinkRequested(bytes32 indexed id);\\n  event ChainlinkFulfilled(bytes32 indexed id);\\n  event ChainlinkCancelled(bytes32 indexed id);\\n\\n  /**\\n   * @notice Creates a request that can hold additional parameters\\n   * @param specId The Job Specification ID that the request will be created for\\n   * @param callbackAddr address to operate the callback on\\n   * @param callbackFunctionSignature function signature to use for the callback\\n   * @return A Chainlink Request struct in memory\\n   */\\n  function buildChainlinkRequest(\\n    bytes32 specId,\\n    address callbackAddr,\\n    bytes4 callbackFunctionSignature\\n  ) internal pure returns (Chainlink.Request memory) {\\n    Chainlink.Request memory req;\\n    return req.initialize(specId, callbackAddr, callbackFunctionSignature);\\n  }\\n\\n  /**\\n   * @notice Creates a request that can hold additional parameters\\n   * @param specId The Job Specification ID that the request will be created for\\n   * @param callbackFunctionSignature function signature to use for the callback\\n   * @return A Chainlink Request struct in memory\\n   */\\n  function buildOperatorRequest(bytes32 specId, bytes4 callbackFunctionSignature)\\n    internal\\n    view\\n    returns (Chainlink.Request memory)\\n  {\\n    Chainlink.Request memory req;\\n    return req.initialize(specId, address(this), callbackFunctionSignature);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the stored oracle address\\n   * @dev Calls `chainlinkRequestTo` with the stored oracle address\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendChainlinkRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\\n    return sendChainlinkRequestTo(address(s_oracle), req, payment);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the specified oracle address\\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\\n   * send LINK which creates a request on the target oracle contract.\\n   * Emits ChainlinkRequested event.\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendChainlinkRequestTo(\\n    address oracleAddress,\\n    Chainlink.Request memory req,\\n    uint256 payment\\n  ) internal returns (bytes32 requestId) {\\n    uint256 nonce = s_requestCount;\\n    s_requestCount = nonce + 1;\\n    bytes memory encodedRequest = abi.encodeWithSelector(\\n      ChainlinkRequestInterface.oracleRequest.selector,\\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\\n      req.id,\\n      address(this),\\n      req.callbackFunctionId,\\n      nonce,\\n      ORACLE_ARGS_VERSION,\\n      req.buf.buf\\n    );\\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the stored oracle address\\n   * @dev This function supports multi-word response\\n   * @dev Calls `sendOperatorRequestTo` with the stored oracle address\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendOperatorRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\\n    return sendOperatorRequestTo(address(s_oracle), req, payment);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the specified oracle address\\n   * @dev This function supports multi-word response\\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\\n   * send LINK which creates a request on the target oracle contract.\\n   * Emits ChainlinkRequested event.\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendOperatorRequestTo(\\n    address oracleAddress,\\n    Chainlink.Request memory req,\\n    uint256 payment\\n  ) internal returns (bytes32 requestId) {\\n    uint256 nonce = s_requestCount;\\n    s_requestCount = nonce + 1;\\n    bytes memory encodedRequest = abi.encodeWithSelector(\\n      OperatorInterface.operatorRequest.selector,\\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\\n      req.id,\\n      req.callbackFunctionId,\\n      nonce,\\n      OPERATOR_ARGS_VERSION,\\n      req.buf.buf\\n    );\\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\\n  }\\n\\n  /**\\n   * @notice Make a request to an oracle\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param nonce used to generate the request ID\\n   * @param payment The amount of LINK to send for the request\\n   * @param encodedRequest data encoded for request type specific format\\n   * @return requestId The request ID\\n   */\\n  function _rawRequest(\\n    address oracleAddress,\\n    uint256 nonce,\\n    uint256 payment,\\n    bytes memory encodedRequest\\n  ) private returns (bytes32 requestId) {\\n    requestId = keccak256(abi.encodePacked(this, nonce));\\n    s_pendingRequests[requestId] = oracleAddress;\\n    emit ChainlinkRequested(requestId);\\n    require(s_link.transferAndCall(oracleAddress, payment, encodedRequest), \\\"unable to transferAndCall to oracle\\\");\\n  }\\n\\n  /**\\n   * @notice Allows a request to be cancelled if it has not been fulfilled\\n   * @dev Requires keeping track of the expiration value emitted from the oracle contract.\\n   * Deletes the request from the `pendingRequests` mapping.\\n   * Emits ChainlinkCancelled event.\\n   * @param requestId The request ID\\n   * @param payment The amount of LINK sent for the request\\n   * @param callbackFunc The callback function specified for the request\\n   * @param expiration The time of the expiration for the request\\n   */\\n  function cancelChainlinkRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunc,\\n    uint256 expiration\\n  ) internal {\\n    OperatorInterface requested = OperatorInterface(s_pendingRequests[requestId]);\\n    delete s_pendingRequests[requestId];\\n    emit ChainlinkCancelled(requestId);\\n    requested.cancelOracleRequest(requestId, payment, callbackFunc, expiration);\\n  }\\n\\n  /**\\n   * @notice the next request count to be used in generating a nonce\\n   * @dev starts at 1 in order to ensure consistent gas cost\\n   * @return returns the next request count to be used in a nonce\\n   */\\n  function getNextRequestCount() internal view returns (uint256) {\\n    return s_requestCount;\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle address\\n   * @param oracleAddress The address of the oracle contract\\n   */\\n  function setChainlinkOracle(address oracleAddress) internal {\\n    s_oracle = OperatorInterface(oracleAddress);\\n  }\\n\\n  /**\\n   * @notice Sets the LINK token address\\n   * @param linkAddress The address of the LINK token contract\\n   */\\n  function setChainlinkToken(address linkAddress) internal {\\n    s_link = LinkTokenInterface(linkAddress);\\n  }\\n\\n  /**\\n   * @notice Sets the Chainlink token address for the public\\n   * network as given by the Pointer contract\\n   */\\n  function setPublicChainlinkToken() internal {\\n    setChainlinkToken(PointerInterface(LINK_TOKEN_POINTER).getAddress());\\n  }\\n\\n  /**\\n   * @notice Retrieves the stored address of the LINK token\\n   * @return The address of the LINK token\\n   */\\n  function chainlinkTokenAddress() internal view returns (address) {\\n    return address(s_link);\\n  }\\n\\n  /**\\n   * @notice Retrieves the stored address of the oracle contract\\n   * @return The address of the oracle contract\\n   */\\n  function chainlinkOracleAddress() internal view returns (address) {\\n    return address(s_oracle);\\n  }\\n\\n  /**\\n   * @notice Allows for a request which was created on another contract to be fulfilled\\n   * on this contract\\n   * @param oracleAddress The address of the oracle contract that will fulfill the request\\n   * @param requestId The request ID used for the response\\n   */\\n  function addChainlinkExternalRequest(address oracleAddress, bytes32 requestId) internal notPendingRequest(requestId) {\\n    s_pendingRequests[requestId] = oracleAddress;\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\\n   * @dev Accounts for subnodes having different resolvers\\n   * @param ensAddress The address of the ENS contract\\n   * @param node The ENS node hash\\n   */\\n  function useChainlinkWithENS(address ensAddress, bytes32 node) internal {\\n    s_ens = ENSInterface(ensAddress);\\n    s_ensNode = node;\\n    bytes32 linkSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_TOKEN_SUBNAME));\\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(linkSubnode));\\n    setChainlinkToken(resolver.addr(linkSubnode));\\n    updateChainlinkOracleWithENS();\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle contract with the address resolved by ENS\\n   * @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously\\n   */\\n  function updateChainlinkOracleWithENS() internal {\\n    bytes32 oracleSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_ORACLE_SUBNAME));\\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(oracleSubnode));\\n    setChainlinkOracle(resolver.addr(oracleSubnode));\\n  }\\n\\n  /**\\n   * @notice Ensures that the fulfillment is valid for this contract\\n   * @dev Use if the contract developer prefers methods instead of modifiers for validation\\n   * @param requestId The request ID for fulfillment\\n   */\\n  function validateChainlinkCallback(bytes32 requestId)\\n    internal\\n    recordChainlinkFulfillment(requestId)\\n  // solhint-disable-next-line no-empty-blocks\\n  {\\n\\n  }\\n\\n  /**\\n   * @dev Reverts if the sender is not the oracle of the request.\\n   * Emits ChainlinkFulfilled event.\\n   * @param requestId The request ID for fulfillment\\n   */\\n  modifier recordChainlinkFulfillment(bytes32 requestId) {\\n    require(msg.sender == s_pendingRequests[requestId], \\\"Source must be the oracle of the request\\\");\\n    delete s_pendingRequests[requestId];\\n    emit ChainlinkFulfilled(requestId);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Reverts if the request is already pending\\n   * @param requestId The request ID for fulfillment\\n   */\\n  modifier notPendingRequest(bytes32 requestId) {\\n    require(s_pendingRequests[requestId] == address(0), \\\"Request is already pending\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa221ccfa4763977cc78c57e3a83d47f5aaf7c15535a2c20dba5f46af80fb3bd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ChainlinkRequestInterface {\\n  function oracleRequest(\\n    address sender,\\n    uint256 requestPrice,\\n    bytes32 serviceAgreementID,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function cancelOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration\\n  ) external;\\n}\\n\",\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ENSInterface {\\n  // Logged when the owner of a node assigns a new owner to a subnode.\\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n  // Logged when the owner of a node transfers ownership to a new account.\\n  event Transfer(bytes32 indexed node, address owner);\\n\\n  // Logged when the resolver for a node changes.\\n  event NewResolver(bytes32 indexed node, address resolver);\\n\\n  // Logged when the TTL of a node changes\\n  event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n  function setSubnodeOwner(\\n    bytes32 node,\\n    bytes32 label,\\n    address owner\\n  ) external;\\n\\n  function setResolver(bytes32 node, address resolver) external;\\n\\n  function setOwner(bytes32 node, address owner) external;\\n\\n  function setTTL(bytes32 node, uint64 ttl) external;\\n\\n  function owner(bytes32 node) external view returns (address);\\n\\n  function resolver(bytes32 node) external view returns (address);\\n\\n  function ttl(bytes32 node) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OracleInterface.sol\\\";\\nimport \\\"./ChainlinkRequestInterface.sol\\\";\\n\\ninterface OperatorInterface is OracleInterface, ChainlinkRequestInterface {\\n  function operatorRequest(\\n    address sender,\\n    uint256 payment,\\n    bytes32 specId,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function fulfillOracleRequest2(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes calldata data\\n  ) external returns (bool);\\n\\n  function ownerTransferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function distributeFunds(address payable[] calldata receivers, uint256[] calldata amounts) external payable;\\n\\n  function getAuthorizedSenders() external returns (address[] memory);\\n\\n  function setAuthorizedSenders(address[] calldata senders) external;\\n\\n  function getForwarder() external returns (address);\\n}\\n\",\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OracleInterface {\\n  function fulfillOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes32 data\\n  ) external returns (bool);\\n\\n  function isAuthorizedSender(address node) external view returns (bool);\\n\\n  function withdraw(address recipient, uint256 amount) external;\\n\\n  function withdrawable() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface PointerInterface {\\n  function getAddress() external view returns (address);\\n}\\n\",\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.19;\\n\\nimport {BufferChainlink} from \\\"./BufferChainlink.sol\\\";\\n\\nlibrary CBORChainlink {\\n  using BufferChainlink for BufferChainlink.buffer;\\n\\n  uint8 private constant MAJOR_TYPE_INT = 0;\\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\\n  uint8 private constant MAJOR_TYPE_STRING = 3;\\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n  uint8 private constant MAJOR_TYPE_MAP = 5;\\n  uint8 private constant MAJOR_TYPE_TAG = 6;\\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\\n    if(value <= 23) {\\n      buf.appendUint8(uint8((major << 5) | value));\\n    } else if (value <= 0xFF) {\\n      buf.appendUint8(uint8((major << 5) | 24));\\n      buf.appendInt(value, 1);\\n    } else if (value <= 0xFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 25));\\n      buf.appendInt(value, 2);\\n    } else if (value <= 0xFFFFFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 26));\\n      buf.appendInt(value, 4);\\n    } else {\\n      buf.appendUint8(uint8((major << 5) | 27));\\n      buf.appendInt(value, 8);\\n    }\\n  }\\n\\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\\n    buf.appendUint8(uint8((major << 5) | 31));\\n  }\\n\\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, value);\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n    }\\n  }\\n\\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\\n    if(value < -0x10000000000000000) {\\n      encodeSignedBigNum(buf, value);\\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, uint(value));\\n    } else if(value >= 0) {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\\n    }\\n  }\\n\\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n    buf.append(value);\\n  }\\n\\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n    encodeBytes(buf, abi.encode(value));\\n  }\\n\\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\\n  }\\n\\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n    buf.append(bytes(value));\\n  }\\n\\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n  }\\n\\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n  }\\n\\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n  }\\n}\\n\",\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract ENSResolver {\\n  function addr(bytes32 node) public view virtual returns (address);\\n}\\n\",\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\"},\"contracts/APIConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\\\";\\n\\n/**\\n * @title The APIConsumer contract\\n * @notice An API Consumer contract that makes GET requests to obtain 24h trading volume of ETH in USD\\n */\\ncontract APIConsumer is ChainlinkClient {\\n    using Chainlink for Chainlink.Request;\\n\\n    uint256 public volume;\\n    address private immutable oracle;\\n    bytes32 private immutable jobId;\\n    uint256 private immutable fee;\\n\\n    event DataFullfilled(uint256 volume);\\n\\n    /**\\n     * @notice Executes once when a contract is created to initialize state variables\\n     *\\n     * @param _oracle - address of the specific Chainlink node that a contract makes an API call from\\n     * @param _jobId - specific job for :_oracle: to run; each job is unique and returns different types of data\\n     * @param _fee - node operator price per API call / data request\\n     * @param _link - LINK token address on the corresponding network\\n     *\\n     * Network: Goerli\\n     * Oracle: 0xCC79157eb46F5624204f47AB42b3906cAA40eaB7\\n     * Job ID: ca98366cc7314957b8c012c72f05aeeb\\n     * Fee: 0.1 LINK\\n     */\\n    constructor(\\n        address _oracle,\\n        bytes32 _jobId,\\n        uint256 _fee,\\n        address _link\\n    ) {\\n        if (_link == address(0)) {\\n            setPublicChainlinkToken();\\n        } else {\\n            setChainlinkToken(_link);\\n        }\\n        oracle = _oracle;\\n        jobId = _jobId;\\n        fee = _fee;\\n    }\\n\\n    /**\\n     * @notice Creates a Chainlink request to retrieve API response, find the target\\n     * data, then multiply by 1000000000000000000 (to remove decimal places from data).\\n     *\\n     * @return requestId - id of the request\\n     */\\n    function requestVolumeData() public returns (bytes32 requestId) {\\n        Chainlink.Request memory request = buildChainlinkRequest(\\n            jobId,\\n            address(this),\\n            this.fulfill.selector\\n        );\\n\\n        // Set the URL to perform the GET request on\\n        request.add(\\n            \\\"get\\\",\\n            \\\"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD\\\"\\n        );\\n\\n        // Set the path to find the desired data in the API response, where the response format is:\\n        // {\\\"RAW\\\":\\n        //   {\\\"ETH\\\":\\n        //    {\\\"USD\\\":\\n        //     {\\n        //      \\\"VOLUME24HOUR\\\": xxx.xxx,\\n        //     }\\n        //    }\\n        //   }\\n        //  }\\n        // request.add(\\\"path\\\", \\\"RAW.ETH.USD.VOLUME24HOUR\\\"); // Chainlink nodes prior to 1.0.0 support this format\\n        request.add(\\\"path\\\", \\\"RAW,ETH,USD,VOLUME24HOUR\\\"); // Chainlink nodes 1.0.0 and later support this format\\n\\n        // Multiply the result by 1000000000000000000 to remove decimals\\n        int256 timesAmount = 10**18;\\n        request.addInt(\\\"times\\\", timesAmount);\\n\\n        // Sends the request\\n        return sendChainlinkRequestTo(oracle, request, fee);\\n    }\\n\\n    /**\\n     * @notice Receives the response in the form of uint256\\n     *\\n     * @param _requestId - id of the request\\n     * @param _volume - response; requested 24h trading volume of ETH in USD\\n     */\\n    function fulfill(bytes32 _requestId, uint256 _volume)\\n        public\\n        recordChainlinkFulfillment(_requestId)\\n    {\\n        volume = _volume;\\n        emit DataFullfilled(volume);\\n    }\\n\\n    /**\\n     * @notice Witdraws LINK from the contract\\n     * @dev Implement a withdraw function to avoid locking your LINK in the contract\\n     */\\n    function withdrawLink() external {}\\n}\\n\",\"keccak256\":\"0xe091a28c7f8490e632fd0b062766ccfec4d57dccee6b6a2c7418bd541760c587\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":319,"contract":"contracts/APIConsumer.sol:APIConsumer","label":"s_ens","offset":0,"slot":"0","type":"t_contract(ENSInterface)1078"},{"astId":321,"contract":"contracts/APIConsumer.sol:APIConsumer","label":"s_ensNode","offset":0,"slot":"1","type":"t_bytes32"},{"astId":324,"contract":"contracts/APIConsumer.sol:APIConsumer","label":"s_link","offset":0,"slot":"2","type":"t_contract(LinkTokenInterface)1192"},{"astId":327,"contract":"contracts/APIConsumer.sol:APIConsumer","label":"s_oracle","offset":0,"slot":"3","type":"t_contract(OperatorInterface)1272"},{"astId":330,"contract":"contracts/APIConsumer.sol:APIConsumer","label":"s_requestCount","offset":0,"slot":"4","type":"t_uint256"},{"astId":334,"contract":"contracts/APIConsumer.sol:APIConsumer","label":"s_pendingRequests","offset":0,"slot":"5","type":"t_mapping(t_bytes32,t_address)"},{"astId":2978,"contract":"contracts/APIConsumer.sol:APIConsumer","label":"volume","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(ENSInterface)1078":{"encoding":"inplace","label":"contract ENSInterface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)1192":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_contract(OperatorInterface)1272":{"encoding":"inplace","label":"contract OperatorInterface","numberOfBytes":"20"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Executes once when a contract is created to initialize state variables"},"fulfill(bytes32,uint256)":{"notice":"Receives the response in the form of uint256"},"requestVolumeData()":{"notice":"Creates a Chainlink request to retrieve API response, find the target data, then multiply by 1000000000000000000 (to remove decimal places from data)."},"withdrawLink()":{"notice":"Witdraws LINK from the contract"}},"notice":"An API Consumer contract that makes GET requests to obtain 24h trading volume of ETH in USD","version":1}}},"contracts/KeepersCounter.sol":{"KeepersCounter":{"abi":[{"inputs":[{"internalType":"uint256","name":"updateInterval","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"counter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"interval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"updateInterval":"- Period of time between two counter increments expressed as UNIX timestamp value"}}},"title":"The Counter contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_3145":{"entryPoint":null,"id":3145,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":78,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":99,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":144,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":154,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":159,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1048:22","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:22","statements":[{"nodeType":"YulAssignment","src":"80:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:22"},"nodeType":"YulFunctionCall","src":"89:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"111:26:22"},"nodeType":"YulFunctionCall","src":"111:33:22"},"nodeType":"YulExpressionStatement","src":"111:33:22"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:22","type":""}],"src":"7:143:22"},{"body":{"nodeType":"YulBlock","src":"233:274:22","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:22"},"nodeType":"YulFunctionCall","src":"281:79:22"},"nodeType":"YulExpressionStatement","src":"281:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:22"},"nodeType":"YulFunctionCall","src":"250:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:22"},"nodeType":"YulFunctionCall","src":"246:32:22"},"nodeType":"YulIf","src":"243:119:22"},{"nodeType":"YulBlock","src":"372:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:22","type":""}]},{"nodeType":"YulAssignment","src":"416:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:22"},"nodeType":"YulFunctionCall","src":"458:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"426:31:22"},"nodeType":"YulFunctionCall","src":"426:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:22","type":""}],"src":"156:351:22"},{"body":{"nodeType":"YulBlock","src":"553:35:22","statements":[{"nodeType":"YulAssignment","src":"563:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"579:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"573:5:22"},"nodeType":"YulFunctionCall","src":"573:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"563:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"546:6:22","type":""}],"src":"513:75:22"},{"body":{"nodeType":"YulBlock","src":"639:32:22","statements":[{"nodeType":"YulAssignment","src":"649:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"660:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"649:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"621:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"631:7:22","type":""}],"src":"594:77:22"},{"body":{"nodeType":"YulBlock","src":"766:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"783:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"786:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"776:6:22"},"nodeType":"YulFunctionCall","src":"776:12:22"},"nodeType":"YulExpressionStatement","src":"776:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"677:117:22"},{"body":{"nodeType":"YulBlock","src":"889:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"906:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"909:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"899:6:22"},"nodeType":"YulFunctionCall","src":"899:12:22"},"nodeType":"YulExpressionStatement","src":"899:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"800:117:22"},{"body":{"nodeType":"YulBlock","src":"966:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"1023:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1032:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1035:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1025:6:22"},"nodeType":"YulFunctionCall","src":"1025:12:22"},"nodeType":"YulExpressionStatement","src":"1025:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"989:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1014:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"996:17:22"},"nodeType":"YulFunctionCall","src":"996:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"986:2:22"},"nodeType":"YulFunctionCall","src":"986:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"979:6:22"},"nodeType":"YulFunctionCall","src":"979:43:22"},"nodeType":"YulIf","src":"976:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"959:5:22","type":""}],"src":"923:122:22"}]},"contents":"{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161078738038061078783398181016040528101906100329190610063565b80608081815250504260018190555060008081905550506100b6565b60008151905061005d8161009f565b92915050565b6000602082840312156100795761007861009a565b5b60006100878482850161004e565b91505092915050565b6000819050919050565b600080fd5b6100a881610090565b81146100b357600080fd5b50565b6080516106af6100d86000396000818161019301526101ca01526106af6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633f3b3b271461005c5780634585e33b1461007a57806361bc221a146100965780636e04ff0d146100b4578063947a36fb146100e5575b600080fd5b610064610103565b6040516100719190610412565b60405180910390f35b610094600480360381019061008f91906102b2565b610109565b005b61009e610187565b6040516100ab9190610412565b60405180910390f35b6100ce60048036038101906100c991906102ff565b61018d565b6040516100dc9291906103c2565b60405180910390f35b6100ed6101c8565b6040516100fa9190610412565b60405180910390f35b60015481565b60006101236040518060200160405280600081525061018d565b50905080610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d906103f2565b60405180910390fd5b42600181905550600160005461017c91906104b0565b600081905550505050565b60005481565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426101c09190610506565b119150915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006101ff6101fa84610452565b61042d565b90508281526020810184848401111561021b5761021a610630565b5b610226848285610550565b509392505050565b60008083601f84011261024457610243610626565b5b8235905067ffffffffffffffff81111561026157610260610621565b5b60208301915083600182028301111561027d5761027c61062b565b5b9250929050565b600082601f83011261029957610298610626565b5b81356102a98482602086016101ec565b91505092915050565b600080602083850312156102c9576102c861063a565b5b600083013567ffffffffffffffff8111156102e7576102e6610635565b5b6102f38582860161022e565b92509250509250929050565b6000602082840312156103155761031461063a565b5b600082013567ffffffffffffffff81111561033357610332610635565b5b61033f84828501610284565b91505092915050565b6103518161053a565b82525050565b600061036282610483565b61036c818561048e565b935061037c81856020860161055f565b6103858161063f565b840191505092915050565b600061039d60158361049f565b91506103a882610650565b602082019050919050565b6103bc81610546565b82525050565b60006040820190506103d76000830185610348565b81810360208301526103e98184610357565b90509392505050565b6000602082019050818103600083015261040b81610390565b9050919050565b600060208201905061042760008301846103b3565b92915050565b6000610437610448565b90506104438282610592565b919050565b6000604051905090565b600067ffffffffffffffff82111561046d5761046c6105f2565b5b6104768261063f565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006104bb82610546565b91506104c683610546565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104fb576104fa6105c3565b5b828201905092915050565b600061051182610546565b915061051c83610546565b92508282101561052f5761052e6105c3565b5b828203905092915050565b60008115159050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561057d578082015181840152602081019050610562565b8381111561058c576000848401525b50505050565b61059b8261063f565b810181811067ffffffffffffffff821117156105ba576105b96105f2565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f54696d6520696e74657276616c206e6f74206d6574000000000000000000000060008201525056fea26469706673582212208bfb5eef2e1b6387d7fd77e72b208a16b4f459bc7e25442d0bb714882edb0b5864736f6c63430008070033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x787 CODESIZE SUB DUP1 PUSH2 0x787 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x63 JUMP JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP POP PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5D DUP2 PUSH2 0x9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x79 JUMPI PUSH2 0x78 PUSH2 0x9A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x87 DUP5 DUP3 DUP6 ADD PUSH2 0x4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8 DUP2 PUSH2 0x90 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x6AF PUSH2 0xD8 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x193 ADD MSTORE PUSH2 0x1CA ADD MSTORE PUSH2 0x6AF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP3 SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18D JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x506 JUMP JUMPDEST GT SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF PUSH2 0x1FA DUP5 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21B JUMPI PUSH2 0x21A PUSH2 0x630 JUMP JUMPDEST JUMPDEST PUSH2 0x226 DUP5 DUP3 DUP6 PUSH2 0x550 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0x626 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x261 JUMPI PUSH2 0x260 PUSH2 0x621 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x27D JUMPI PUSH2 0x27C PUSH2 0x62B JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x299 JUMPI PUSH2 0x298 PUSH2 0x626 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C9 JUMPI PUSH2 0x2C8 PUSH2 0x63A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E7 JUMPI PUSH2 0x2E6 PUSH2 0x635 JUMP JUMPDEST JUMPDEST PUSH2 0x2F3 DUP6 DUP3 DUP7 ADD PUSH2 0x22E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0x63A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x333 JUMPI PUSH2 0x332 PUSH2 0x635 JUMP JUMPDEST JUMPDEST PUSH2 0x33F DUP5 DUP3 DUP6 ADD PUSH2 0x284 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x351 DUP2 PUSH2 0x53A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362 DUP3 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x36C DUP2 DUP6 PUSH2 0x48E JUMP JUMPDEST SWAP4 POP PUSH2 0x37C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x55F JUMP JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x63F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D PUSH1 0x15 DUP4 PUSH2 0x49F JUMP JUMPDEST SWAP2 POP PUSH2 0x3A8 DUP3 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BC DUP2 PUSH2 0x546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x348 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3E9 DUP2 DUP5 PUSH2 0x357 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40B DUP2 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x427 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x437 PUSH2 0x448 JUMP JUMPDEST SWAP1 POP PUSH2 0x443 DUP3 DUP3 PUSH2 0x592 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x46D JUMPI PUSH2 0x46C PUSH2 0x5F2 JUMP JUMPDEST JUMPDEST PUSH2 0x476 DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP3 PUSH2 0x546 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C6 DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4FA PUSH2 0x5C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x511 DUP3 PUSH2 0x546 JUMP JUMPDEST SWAP2 POP PUSH2 0x51C DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x52F JUMPI PUSH2 0x52E PUSH2 0x5C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x57D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x562 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x59B DUP3 PUSH2 0x63F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5B9 PUSH2 0x5F2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D6520696E74657276616C206E6F74206D65740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xFB 0x5E 0xEF 0x2E SHL PUSH4 0x87D7FD77 0xE7 0x2B KECCAK256 DUP11 AND 0xB4 DELEGATECALL MSIZE 0xBC PUSH31 0x25442D0BB714882EDB0B5864736F6C63430008070033000000000000000000 ","sourceMap":"276:1703:17:-:0;;;799:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;856:14;845:25;;;;;;896:15;880:13;:31;;;;932:1;922:7;:11;;;;799:141;276:1703;;7:143:22;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:77::-;631:7;660:5;649:16;;594:77;;;:::o;800:117::-;909:1;906;899:12;923:122;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;276:1703:17:-;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkUpkeep_3167":{"entryPoint":397,"id":3167,"parameterSlots":1,"returnSlots":2},"@counter_3120":{"entryPoint":391,"id":3120,"parameterSlots":0,"returnSlots":0},"@interval_3123":{"entryPoint":456,"id":3123,"parameterSlots":0,"returnSlots":0},"@lastTimeStamp_3125":{"entryPoint":259,"id":3125,"parameterSlots":0,"returnSlots":0},"@performUpkeep_3197":{"entryPoint":265,"id":3197,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":492,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":558,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":690,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":767,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":840,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack":{"entryPoint":912,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":947,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":962,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1042,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1069,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1096,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1106,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1155,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":1166,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1183,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1200,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1286,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1338,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1350,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":1360,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":1375,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1426,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":1475,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1522,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":1569,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1574,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1579,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1584,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1589,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1594,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1599,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4":{"entryPoint":1616,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8261:22","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:22","statements":[{"nodeType":"YulAssignment","src":"100:74:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:22"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:22"},"nodeType":"YulFunctionCall","src":"125:48:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:22"},"nodeType":"YulFunctionCall","src":"109:65:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:22"},"nodeType":"YulFunctionCall","src":"183:21:22"},"nodeType":"YulExpressionStatement","src":"183:21:22"},{"nodeType":"YulVariableDeclaration","src":"213:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:22"},"nodeType":"YulFunctionCall","src":"224:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:22"},"nodeType":"YulFunctionCall","src":"280:79:22"},"nodeType":"YulExpressionStatement","src":"280:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:22"},"nodeType":"YulFunctionCall","src":"255:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:22"},"nodeType":"YulFunctionCall","src":"252:25:22"},"nodeType":"YulIf","src":"249:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:22"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:22"},"nodeType":"YulFunctionCall","src":"370:41:22"},"nodeType":"YulExpressionStatement","src":"370:41:22"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:22","type":""}],"src":"7:410:22"},{"body":{"nodeType":"YulBlock","src":"510:478:22","statements":[{"body":{"nodeType":"YulBlock","src":"559:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"561:77:22"},"nodeType":"YulFunctionCall","src":"561:79:22"},"nodeType":"YulExpressionStatement","src":"561:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"538:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"546:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"534:3:22"},"nodeType":"YulFunctionCall","src":"534:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"553:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"530:3:22"},"nodeType":"YulFunctionCall","src":"530:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"523:6:22"},"nodeType":"YulFunctionCall","src":"523:35:22"},"nodeType":"YulIf","src":"520:122:22"},{"nodeType":"YulAssignment","src":"651:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"674:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"661:12:22"},"nodeType":"YulFunctionCall","src":"661:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"651:6:22"}]},{"body":{"nodeType":"YulBlock","src":"724:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"726:77:22"},"nodeType":"YulFunctionCall","src":"726:79:22"},"nodeType":"YulExpressionStatement","src":"726:79:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"696:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"704:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"693:2:22"},"nodeType":"YulFunctionCall","src":"693:30:22"},"nodeType":"YulIf","src":"690:117:22"},{"nodeType":"YulAssignment","src":"816:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"832:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"840:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"828:3:22"},"nodeType":"YulFunctionCall","src":"828:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"816:8:22"}]},{"body":{"nodeType":"YulBlock","src":"899:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"901:77:22"},"nodeType":"YulFunctionCall","src":"901:79:22"},"nodeType":"YulExpressionStatement","src":"901:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"864:8:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"878:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"886:4:22","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"874:3:22"},"nodeType":"YulFunctionCall","src":"874:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"860:3:22"},"nodeType":"YulFunctionCall","src":"860:32:22"},{"name":"end","nodeType":"YulIdentifier","src":"894:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"857:2:22"},"nodeType":"YulFunctionCall","src":"857:41:22"},"nodeType":"YulIf","src":"854:128:22"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"477:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"485:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"493:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"503:6:22","type":""}],"src":"436:552:22"},{"body":{"nodeType":"YulBlock","src":"1068:277:22","statements":[{"body":{"nodeType":"YulBlock","src":"1117:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1119:77:22"},"nodeType":"YulFunctionCall","src":"1119:79:22"},"nodeType":"YulExpressionStatement","src":"1119:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1096:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1104:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1092:3:22"},"nodeType":"YulFunctionCall","src":"1092:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"1111:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1088:3:22"},"nodeType":"YulFunctionCall","src":"1088:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1081:6:22"},"nodeType":"YulFunctionCall","src":"1081:35:22"},"nodeType":"YulIf","src":"1078:122:22"},{"nodeType":"YulVariableDeclaration","src":"1209:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1236:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1223:12:22"},"nodeType":"YulFunctionCall","src":"1223:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1213:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1252:87:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1312:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1320:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1308:3:22"},"nodeType":"YulFunctionCall","src":"1308:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"1327:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"1335:3:22"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1261:46:22"},"nodeType":"YulFunctionCall","src":"1261:78:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1252:5:22"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1046:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1054:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1062:5:22","type":""}],"src":"1007:338:22"},{"body":{"nodeType":"YulBlock","src":"1436:442:22","statements":[{"body":{"nodeType":"YulBlock","src":"1482:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1484:77:22"},"nodeType":"YulFunctionCall","src":"1484:79:22"},"nodeType":"YulExpressionStatement","src":"1484:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1457:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1466:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1453:3:22"},"nodeType":"YulFunctionCall","src":"1453:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1478:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1449:3:22"},"nodeType":"YulFunctionCall","src":"1449:32:22"},"nodeType":"YulIf","src":"1446:119:22"},{"nodeType":"YulBlock","src":"1575:296:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1590:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1621:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1632:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1617:3:22"},"nodeType":"YulFunctionCall","src":"1617:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1604:12:22"},"nodeType":"YulFunctionCall","src":"1604:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1594:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1684:77:22"},"nodeType":"YulFunctionCall","src":"1684:79:22"},"nodeType":"YulExpressionStatement","src":"1684:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1654:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1662:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1651:2:22"},"nodeType":"YulFunctionCall","src":"1651:30:22"},"nodeType":"YulIf","src":"1648:117:22"},{"nodeType":"YulAssignment","src":"1779:82:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1833:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1844:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1829:3:22"},"nodeType":"YulFunctionCall","src":"1829:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1853:7:22"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"1797:31:22"},"nodeType":"YulFunctionCall","src":"1797:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1779:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"1787:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1398:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1409:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1421:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1429:6:22","type":""}],"src":"1351:527:22"},{"body":{"nodeType":"YulBlock","src":"1959:432:22","statements":[{"body":{"nodeType":"YulBlock","src":"2005:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2007:77:22"},"nodeType":"YulFunctionCall","src":"2007:79:22"},"nodeType":"YulExpressionStatement","src":"2007:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1980:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1989:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1976:3:22"},"nodeType":"YulFunctionCall","src":"1976:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2001:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1972:3:22"},"nodeType":"YulFunctionCall","src":"1972:32:22"},"nodeType":"YulIf","src":"1969:119:22"},{"nodeType":"YulBlock","src":"2098:286:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2113:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2144:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2155:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2140:3:22"},"nodeType":"YulFunctionCall","src":"2140:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2127:12:22"},"nodeType":"YulFunctionCall","src":"2127:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2117:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2205:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2207:77:22"},"nodeType":"YulFunctionCall","src":"2207:79:22"},"nodeType":"YulExpressionStatement","src":"2207:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2177:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2185:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2174:2:22"},"nodeType":"YulFunctionCall","src":"2174:30:22"},"nodeType":"YulIf","src":"2171:117:22"},{"nodeType":"YulAssignment","src":"2302:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2346:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2357:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2342:3:22"},"nodeType":"YulFunctionCall","src":"2342:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2366:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2312:29:22"},"nodeType":"YulFunctionCall","src":"2312:62:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2302:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1929:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1940:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1952:6:22","type":""}],"src":"1884:507:22"},{"body":{"nodeType":"YulBlock","src":"2456:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2473:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2493:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2478:14:22"},"nodeType":"YulFunctionCall","src":"2478:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2466:6:22"},"nodeType":"YulFunctionCall","src":"2466:34:22"},"nodeType":"YulExpressionStatement","src":"2466:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2444:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2451:3:22","type":""}],"src":"2397:109:22"},{"body":{"nodeType":"YulBlock","src":"2602:270:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2612:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2658:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2626:31:22"},"nodeType":"YulFunctionCall","src":"2626:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2616:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2673:77:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2738:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2743:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2680:57:22"},"nodeType":"YulFunctionCall","src":"2680:70:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2673:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2785:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2792:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2781:3:22"},"nodeType":"YulFunctionCall","src":"2781:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"2799:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2804:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2759:21:22"},"nodeType":"YulFunctionCall","src":"2759:52:22"},"nodeType":"YulExpressionStatement","src":"2759:52:22"},{"nodeType":"YulAssignment","src":"2820:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2831:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2858:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2836:21:22"},"nodeType":"YulFunctionCall","src":"2836:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2827:3:22"},"nodeType":"YulFunctionCall","src":"2827:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2820:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2583:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2590:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2598:3:22","type":""}],"src":"2512:360:22"},{"body":{"nodeType":"YulBlock","src":"3024:220:22","statements":[{"nodeType":"YulAssignment","src":"3034:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3100:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3105:2:22","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3041:58:22"},"nodeType":"YulFunctionCall","src":"3041:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3034:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3206:3:22"}],"functionName":{"name":"store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4","nodeType":"YulIdentifier","src":"3117:88:22"},"nodeType":"YulFunctionCall","src":"3117:93:22"},"nodeType":"YulExpressionStatement","src":"3117:93:22"},{"nodeType":"YulAssignment","src":"3219:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3230:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3235:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3226:3:22"},"nodeType":"YulFunctionCall","src":"3226:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3219:3:22"}]}]},"name":"abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3012:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3020:3:22","type":""}],"src":"2878:366:22"},{"body":{"nodeType":"YulBlock","src":"3315:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3332:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3355:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3337:17:22"},"nodeType":"YulFunctionCall","src":"3337:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3325:6:22"},"nodeType":"YulFunctionCall","src":"3325:37:22"},"nodeType":"YulExpressionStatement","src":"3325:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3303:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3310:3:22","type":""}],"src":"3250:118:22"},{"body":{"nodeType":"YulBlock","src":"3512:269:22","statements":[{"nodeType":"YulAssignment","src":"3522:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3534:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3545:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:22"},"nodeType":"YulFunctionCall","src":"3530:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3522:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3596:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3609:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3620:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3605:3:22"},"nodeType":"YulFunctionCall","src":"3605:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3558:37:22"},"nodeType":"YulFunctionCall","src":"3558:65:22"},"nodeType":"YulExpressionStatement","src":"3558:65:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3644:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3655:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3640:3:22"},"nodeType":"YulFunctionCall","src":"3640:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3664:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3670:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3660:3:22"},"nodeType":"YulFunctionCall","src":"3660:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3633:6:22"},"nodeType":"YulFunctionCall","src":"3633:48:22"},"nodeType":"YulExpressionStatement","src":"3633:48:22"},{"nodeType":"YulAssignment","src":"3690:84:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3760:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"3769:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3698:61:22"},"nodeType":"YulFunctionCall","src":"3698:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3690:4:22"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3476:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3488:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3496:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3507:4:22","type":""}],"src":"3374:407:22"},{"body":{"nodeType":"YulBlock","src":"3958:248:22","statements":[{"nodeType":"YulAssignment","src":"3968:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3980:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3991:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3976:3:22"},"nodeType":"YulFunctionCall","src":"3976:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3968:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4015:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4026:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4011:3:22"},"nodeType":"YulFunctionCall","src":"4011:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4034:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4040:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4030:3:22"},"nodeType":"YulFunctionCall","src":"4030:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4004:6:22"},"nodeType":"YulFunctionCall","src":"4004:47:22"},"nodeType":"YulExpressionStatement","src":"4004:47:22"},{"nodeType":"YulAssignment","src":"4060:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4194:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4068:124:22"},"nodeType":"YulFunctionCall","src":"4068:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4060:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3938:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3953:4:22","type":""}],"src":"3787:419:22"},{"body":{"nodeType":"YulBlock","src":"4310:124:22","statements":[{"nodeType":"YulAssignment","src":"4320:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4332:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4343:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4328:3:22"},"nodeType":"YulFunctionCall","src":"4328:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4320:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4400:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4413:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4424:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4409:3:22"},"nodeType":"YulFunctionCall","src":"4409:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4356:43:22"},"nodeType":"YulFunctionCall","src":"4356:71:22"},"nodeType":"YulExpressionStatement","src":"4356:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4282:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4294:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4305:4:22","type":""}],"src":"4212:222:22"},{"body":{"nodeType":"YulBlock","src":"4481:88:22","statements":[{"nodeType":"YulAssignment","src":"4491:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4501:18:22"},"nodeType":"YulFunctionCall","src":"4501:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4491:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4550:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"4558:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4530:19:22"},"nodeType":"YulFunctionCall","src":"4530:33:22"},"nodeType":"YulExpressionStatement","src":"4530:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4465:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4474:6:22","type":""}],"src":"4440:129:22"},{"body":{"nodeType":"YulBlock","src":"4615:35:22","statements":[{"nodeType":"YulAssignment","src":"4625:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4641:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4635:5:22"},"nodeType":"YulFunctionCall","src":"4635:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4625:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4608:6:22","type":""}],"src":"4575:75:22"},{"body":{"nodeType":"YulBlock","src":"4722:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"4827:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4829:16:22"},"nodeType":"YulFunctionCall","src":"4829:18:22"},"nodeType":"YulExpressionStatement","src":"4829:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4799:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4807:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4796:2:22"},"nodeType":"YulFunctionCall","src":"4796:30:22"},"nodeType":"YulIf","src":"4793:56:22"},{"nodeType":"YulAssignment","src":"4859:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4889:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4867:21:22"},"nodeType":"YulFunctionCall","src":"4867:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4859:4:22"}]},{"nodeType":"YulAssignment","src":"4933:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4945:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"4951:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4941:3:22"},"nodeType":"YulFunctionCall","src":"4941:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4933:4:22"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4706:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4717:4:22","type":""}],"src":"4656:307:22"},{"body":{"nodeType":"YulBlock","src":"5027:40:22","statements":[{"nodeType":"YulAssignment","src":"5038:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5054:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5048:5:22"},"nodeType":"YulFunctionCall","src":"5048:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5038:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5010:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5020:6:22","type":""}],"src":"4969:98:22"},{"body":{"nodeType":"YulBlock","src":"5168:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5185:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5190:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5178:6:22"},"nodeType":"YulFunctionCall","src":"5178:19:22"},"nodeType":"YulExpressionStatement","src":"5178:19:22"},{"nodeType":"YulAssignment","src":"5206:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5225:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"5230:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5221:3:22"},"nodeType":"YulFunctionCall","src":"5221:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5206:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5140:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"5145:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5156:11:22","type":""}],"src":"5073:168:22"},{"body":{"nodeType":"YulBlock","src":"5343:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5360:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5365:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5353:6:22"},"nodeType":"YulFunctionCall","src":"5353:19:22"},"nodeType":"YulExpressionStatement","src":"5353:19:22"},{"nodeType":"YulAssignment","src":"5381:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5400:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"5405:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5396:3:22"},"nodeType":"YulFunctionCall","src":"5396:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5381:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5315:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"5320:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5331:11:22","type":""}],"src":"5247:169:22"},{"body":{"nodeType":"YulBlock","src":"5466:261:22","statements":[{"nodeType":"YulAssignment","src":"5476:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5499:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5481:17:22"},"nodeType":"YulFunctionCall","src":"5481:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5476:1:22"}]},{"nodeType":"YulAssignment","src":"5510:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5533:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5515:17:22"},"nodeType":"YulFunctionCall","src":"5515:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5510:1:22"}]},{"body":{"nodeType":"YulBlock","src":"5673:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5675:16:22"},"nodeType":"YulFunctionCall","src":"5675:18:22"},"nodeType":"YulExpressionStatement","src":"5675:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5594:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5601:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"5669:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5597:3:22"},"nodeType":"YulFunctionCall","src":"5597:74:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5591:2:22"},"nodeType":"YulFunctionCall","src":"5591:81:22"},"nodeType":"YulIf","src":"5588:107:22"},{"nodeType":"YulAssignment","src":"5705:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5716:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"5719:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5712:3:22"},"nodeType":"YulFunctionCall","src":"5712:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5705:3:22"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5453:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"5456:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5462:3:22","type":""}],"src":"5422:305:22"},{"body":{"nodeType":"YulBlock","src":"5778:146:22","statements":[{"nodeType":"YulAssignment","src":"5788:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5811:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5793:17:22"},"nodeType":"YulFunctionCall","src":"5793:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5788:1:22"}]},{"nodeType":"YulAssignment","src":"5822:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5845:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5827:17:22"},"nodeType":"YulFunctionCall","src":"5827:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5822:1:22"}]},{"body":{"nodeType":"YulBlock","src":"5869:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5871:16:22"},"nodeType":"YulFunctionCall","src":"5871:18:22"},"nodeType":"YulExpressionStatement","src":"5871:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5863:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"5866:1:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5860:2:22"},"nodeType":"YulFunctionCall","src":"5860:8:22"},"nodeType":"YulIf","src":"5857:34:22"},{"nodeType":"YulAssignment","src":"5901:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5913:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"5916:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5909:3:22"},"nodeType":"YulFunctionCall","src":"5909:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5901:4:22"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5764:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"5767:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5773:4:22","type":""}],"src":"5733:191:22"},{"body":{"nodeType":"YulBlock","src":"5972:48:22","statements":[{"nodeType":"YulAssignment","src":"5982:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6007:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6000:6:22"},"nodeType":"YulFunctionCall","src":"6000:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5993:6:22"},"nodeType":"YulFunctionCall","src":"5993:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5982:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5954:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5964:7:22","type":""}],"src":"5930:90:22"},{"body":{"nodeType":"YulBlock","src":"6071:32:22","statements":[{"nodeType":"YulAssignment","src":"6081:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"6092:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6081:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6053:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6063:7:22","type":""}],"src":"6026:77:22"},{"body":{"nodeType":"YulBlock","src":"6160:103:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6183:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"6188:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6193:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6170:12:22"},"nodeType":"YulFunctionCall","src":"6170:30:22"},"nodeType":"YulExpressionStatement","src":"6170:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6241:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6246:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6237:3:22"},"nodeType":"YulFunctionCall","src":"6237:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"6255:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6230:6:22"},"nodeType":"YulFunctionCall","src":"6230:27:22"},"nodeType":"YulExpressionStatement","src":"6230:27:22"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6142:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6147:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"6152:6:22","type":""}],"src":"6109:154:22"},{"body":{"nodeType":"YulBlock","src":"6318:258:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6328:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6337:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6332:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6397:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6422:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"6427:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6418:3:22"},"nodeType":"YulFunctionCall","src":"6418:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6441:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"6446:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6437:3:22"},"nodeType":"YulFunctionCall","src":"6437:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6431:5:22"},"nodeType":"YulFunctionCall","src":"6431:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6411:6:22"},"nodeType":"YulFunctionCall","src":"6411:39:22"},"nodeType":"YulExpressionStatement","src":"6411:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6358:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"6361:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6355:2:22"},"nodeType":"YulFunctionCall","src":"6355:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6369:19:22","statements":[{"nodeType":"YulAssignment","src":"6371:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6380:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"6383:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6376:3:22"},"nodeType":"YulFunctionCall","src":"6376:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6371:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"6351:3:22","statements":[]},"src":"6347:113:22"},{"body":{"nodeType":"YulBlock","src":"6494:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6544:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6549:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6540:3:22"},"nodeType":"YulFunctionCall","src":"6540:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"6558:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6533:6:22"},"nodeType":"YulFunctionCall","src":"6533:27:22"},"nodeType":"YulExpressionStatement","src":"6533:27:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6475:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"6478:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6472:2:22"},"nodeType":"YulFunctionCall","src":"6472:13:22"},"nodeType":"YulIf","src":"6469:101:22"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6300:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6305:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"6310:6:22","type":""}],"src":"6269:307:22"},{"body":{"nodeType":"YulBlock","src":"6625:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6635:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6657:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6687:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6665:21:22"},"nodeType":"YulFunctionCall","src":"6665:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6653:3:22"},"nodeType":"YulFunctionCall","src":"6653:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6639:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6804:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6806:16:22"},"nodeType":"YulFunctionCall","src":"6806:18:22"},"nodeType":"YulExpressionStatement","src":"6806:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6747:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"6759:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6744:2:22"},"nodeType":"YulFunctionCall","src":"6744:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6783:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6795:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6780:2:22"},"nodeType":"YulFunctionCall","src":"6780:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6741:2:22"},"nodeType":"YulFunctionCall","src":"6741:62:22"},"nodeType":"YulIf","src":"6738:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6842:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6846:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6835:6:22"},"nodeType":"YulFunctionCall","src":"6835:22:22"},"nodeType":"YulExpressionStatement","src":"6835:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6611:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"6619:4:22","type":""}],"src":"6582:281:22"},{"body":{"nodeType":"YulBlock","src":"6897:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6914:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6917:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6907:6:22"},"nodeType":"YulFunctionCall","src":"6907:88:22"},"nodeType":"YulExpressionStatement","src":"6907:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7011:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7014:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7004:6:22"},"nodeType":"YulFunctionCall","src":"7004:15:22"},"nodeType":"YulExpressionStatement","src":"7004:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7035:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7038:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7028:6:22"},"nodeType":"YulFunctionCall","src":"7028:15:22"},"nodeType":"YulExpressionStatement","src":"7028:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6869:180:22"},{"body":{"nodeType":"YulBlock","src":"7083:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7100:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7103:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7093:6:22"},"nodeType":"YulFunctionCall","src":"7093:88:22"},"nodeType":"YulExpressionStatement","src":"7093:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7197:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7200:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7190:6:22"},"nodeType":"YulFunctionCall","src":"7190:15:22"},"nodeType":"YulExpressionStatement","src":"7190:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7221:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7224:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7214:6:22"},"nodeType":"YulFunctionCall","src":"7214:15:22"},"nodeType":"YulExpressionStatement","src":"7214:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7055:180:22"},{"body":{"nodeType":"YulBlock","src":"7330:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7347:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7350:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7340:6:22"},"nodeType":"YulFunctionCall","src":"7340:12:22"},"nodeType":"YulExpressionStatement","src":"7340:12:22"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"7241:117:22"},{"body":{"nodeType":"YulBlock","src":"7453:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7470:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7473:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7463:6:22"},"nodeType":"YulFunctionCall","src":"7463:12:22"},"nodeType":"YulExpressionStatement","src":"7463:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7364:117:22"},{"body":{"nodeType":"YulBlock","src":"7576:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7593:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7596:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7586:6:22"},"nodeType":"YulFunctionCall","src":"7586:12:22"},"nodeType":"YulExpressionStatement","src":"7586:12:22"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7487:117:22"},{"body":{"nodeType":"YulBlock","src":"7699:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7716:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7719:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7709:6:22"},"nodeType":"YulFunctionCall","src":"7709:12:22"},"nodeType":"YulExpressionStatement","src":"7709:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7610:117:22"},{"body":{"nodeType":"YulBlock","src":"7822:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7839:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7842:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7832:6:22"},"nodeType":"YulFunctionCall","src":"7832:12:22"},"nodeType":"YulExpressionStatement","src":"7832:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"7733:117:22"},{"body":{"nodeType":"YulBlock","src":"7945:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7962:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7965:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7955:6:22"},"nodeType":"YulFunctionCall","src":"7955:12:22"},"nodeType":"YulExpressionStatement","src":"7955:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"7856:117:22"},{"body":{"nodeType":"YulBlock","src":"8027:54:22","statements":[{"nodeType":"YulAssignment","src":"8037:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8055:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"8062:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8051:3:22"},"nodeType":"YulFunctionCall","src":"8051:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8071:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8067:3:22"},"nodeType":"YulFunctionCall","src":"8067:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8047:3:22"},"nodeType":"YulFunctionCall","src":"8047:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8037:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8010:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8020:6:22","type":""}],"src":"7979:102:22"},{"body":{"nodeType":"YulBlock","src":"8193:65:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8215:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8223:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8211:3:22"},"nodeType":"YulFunctionCall","src":"8211:14:22"},{"hexValue":"54696d6520696e74657276616c206e6f74206d6574","kind":"string","nodeType":"YulLiteral","src":"8227:23:22","type":"","value":"Time interval not met"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8204:6:22"},"nodeType":"YulFunctionCall","src":"8204:47:22"},"nodeType":"YulExpressionStatement","src":"8204:47:22"}]},"name":"store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8185:6:22","type":""}],"src":"8087:171:22"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Time interval not met\")\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3123":[{"length":32,"start":403},{"length":32,"start":458}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80633f3b3b271461005c5780634585e33b1461007a57806361bc221a146100965780636e04ff0d146100b4578063947a36fb146100e5575b600080fd5b610064610103565b6040516100719190610412565b60405180910390f35b610094600480360381019061008f91906102b2565b610109565b005b61009e610187565b6040516100ab9190610412565b60405180910390f35b6100ce60048036038101906100c991906102ff565b61018d565b6040516100dc9291906103c2565b60405180910390f35b6100ed6101c8565b6040516100fa9190610412565b60405180910390f35b60015481565b60006101236040518060200160405280600081525061018d565b50905080610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d906103f2565b60405180910390fd5b42600181905550600160005461017c91906104b0565b600081905550505050565b60005481565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426101c09190610506565b119150915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006101ff6101fa84610452565b61042d565b90508281526020810184848401111561021b5761021a610630565b5b610226848285610550565b509392505050565b60008083601f84011261024457610243610626565b5b8235905067ffffffffffffffff81111561026157610260610621565b5b60208301915083600182028301111561027d5761027c61062b565b5b9250929050565b600082601f83011261029957610298610626565b5b81356102a98482602086016101ec565b91505092915050565b600080602083850312156102c9576102c861063a565b5b600083013567ffffffffffffffff8111156102e7576102e6610635565b5b6102f38582860161022e565b92509250509250929050565b6000602082840312156103155761031461063a565b5b600082013567ffffffffffffffff81111561033357610332610635565b5b61033f84828501610284565b91505092915050565b6103518161053a565b82525050565b600061036282610483565b61036c818561048e565b935061037c81856020860161055f565b6103858161063f565b840191505092915050565b600061039d60158361049f565b91506103a882610650565b602082019050919050565b6103bc81610546565b82525050565b60006040820190506103d76000830185610348565b81810360208301526103e98184610357565b90509392505050565b6000602082019050818103600083015261040b81610390565b9050919050565b600060208201905061042760008301846103b3565b92915050565b6000610437610448565b90506104438282610592565b919050565b6000604051905090565b600067ffffffffffffffff82111561046d5761046c6105f2565b5b6104768261063f565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006104bb82610546565b91506104c683610546565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104fb576104fa6105c3565b5b828201905092915050565b600061051182610546565b915061051c83610546565b92508282101561052f5761052e6105c3565b5b828203905092915050565b60008115159050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561057d578082015181840152602081019050610562565b8381111561058c576000848401525b50505050565b61059b8261063f565b810181811067ffffffffffffffff821117156105ba576105b96105f2565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f54696d6520696e74657276616c206e6f74206d6574000000000000000000000060008201525056fea26469706673582212208bfb5eef2e1b6387d7fd77e72b208a16b4f459bc7e25442d0bb714882edb0b5864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP3 SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18D JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x506 JUMP JUMPDEST GT SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF PUSH2 0x1FA DUP5 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21B JUMPI PUSH2 0x21A PUSH2 0x630 JUMP JUMPDEST JUMPDEST PUSH2 0x226 DUP5 DUP3 DUP6 PUSH2 0x550 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0x626 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x261 JUMPI PUSH2 0x260 PUSH2 0x621 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x27D JUMPI PUSH2 0x27C PUSH2 0x62B JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x299 JUMPI PUSH2 0x298 PUSH2 0x626 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C9 JUMPI PUSH2 0x2C8 PUSH2 0x63A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E7 JUMPI PUSH2 0x2E6 PUSH2 0x635 JUMP JUMPDEST JUMPDEST PUSH2 0x2F3 DUP6 DUP3 DUP7 ADD PUSH2 0x22E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0x63A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x333 JUMPI PUSH2 0x332 PUSH2 0x635 JUMP JUMPDEST JUMPDEST PUSH2 0x33F DUP5 DUP3 DUP6 ADD PUSH2 0x284 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x351 DUP2 PUSH2 0x53A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362 DUP3 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x36C DUP2 DUP6 PUSH2 0x48E JUMP JUMPDEST SWAP4 POP PUSH2 0x37C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x55F JUMP JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x63F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D PUSH1 0x15 DUP4 PUSH2 0x49F JUMP JUMPDEST SWAP2 POP PUSH2 0x3A8 DUP3 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BC DUP2 PUSH2 0x546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x348 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3E9 DUP2 DUP5 PUSH2 0x357 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40B DUP2 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x427 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x437 PUSH2 0x448 JUMP JUMPDEST SWAP1 POP PUSH2 0x443 DUP3 DUP3 PUSH2 0x592 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x46D JUMPI PUSH2 0x46C PUSH2 0x5F2 JUMP JUMPDEST JUMPDEST PUSH2 0x476 DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP3 PUSH2 0x546 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C6 DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4FA PUSH2 0x5C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x511 DUP3 PUSH2 0x546 JUMP JUMPDEST SWAP2 POP PUSH2 0x51C DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x52F JUMPI PUSH2 0x52E PUSH2 0x5C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x57D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x562 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x59B DUP3 PUSH2 0x63F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5B9 PUSH2 0x5F2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D6520696E74657276616C206E6F74206D65740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xFB 0x5E 0xEF 0x2E SHL PUSH4 0x87D7FD77 0xE7 0x2B KECCAK256 DUP11 AND 0xB4 DELEGATECALL MSIZE 0xBC PUSH31 0x25442D0BB714882EDB0B5864736F6C63430008070033000000000000000000 ","sourceMap":"276:1703:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1534:443;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;382:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1025:404;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;505:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;544:28;;;;:::o;1534:443::-;1667:17;1690:15;;;;;;;;;;;;;:11;:15::i;:::-;1666:39;;;1723:12;1715:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1788:15;1772:13;:31;;;;1833:1;1823:7;;:11;;;;:::i;:::-;1813:7;:21;;;;1623:354;1534:443;;:::o;382:22::-;;;;:::o;1025:404::-;1165:17;1196:12;1302:8;1285:13;;1267:15;:31;;;;:::i;:::-;1266:44;1251:59;;1025:404;;;:::o;505:33::-;;;:::o;7:410:22:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;436:552::-;493:8;503:6;553:3;546:4;538:6;534:17;530:27;520:122;;561:79;;:::i;:::-;520:122;674:6;661:20;651:30;;704:18;696:6;693:30;690:117;;;726:79;;:::i;:::-;690:117;840:4;832:6;828:17;816:29;;894:3;886:4;878:6;874:17;864:8;860:32;857:41;854:128;;;901:79;;:::i;:::-;854:128;436:552;;;;;:::o;1007:338::-;1062:5;1111:3;1104:4;1096:6;1092:17;1088:27;1078:122;;1119:79;;:::i;:::-;1078:122;1236:6;1223:20;1261:78;1335:3;1327:6;1320:4;1312:6;1308:17;1261:78;:::i;:::-;1252:87;;1068:277;1007:338;;;;:::o;1351:527::-;1421:6;1429;1478:2;1466:9;1457:7;1453:23;1449:32;1446:119;;;1484:79;;:::i;:::-;1446:119;1632:1;1621:9;1617:17;1604:31;1662:18;1654:6;1651:30;1648:117;;;1684:79;;:::i;:::-;1648:117;1797:64;1853:7;1844:6;1833:9;1829:22;1797:64;:::i;:::-;1779:82;;;;1575:296;1351:527;;;;;:::o;1884:507::-;1952:6;2001:2;1989:9;1980:7;1976:23;1972:32;1969:119;;;2007:79;;:::i;:::-;1969:119;2155:1;2144:9;2140:17;2127:31;2185:18;2177:6;2174:30;2171:117;;;2207:79;;:::i;:::-;2171:117;2312:62;2366:7;2357:6;2346:9;2342:22;2312:62;:::i;:::-;2302:72;;2098:286;1884:507;;;;:::o;2397:109::-;2478:21;2493:5;2478:21;:::i;:::-;2473:3;2466:34;2397:109;;:::o;2512:360::-;2598:3;2626:38;2658:5;2626:38;:::i;:::-;2680:70;2743:6;2738:3;2680:70;:::i;:::-;2673:77;;2759:52;2804:6;2799:3;2792:4;2785:5;2781:16;2759:52;:::i;:::-;2836:29;2858:6;2836:29;:::i;:::-;2831:3;2827:39;2820:46;;2602:270;2512:360;;;;:::o;2878:366::-;3020:3;3041:67;3105:2;3100:3;3041:67;:::i;:::-;3034:74;;3117:93;3206:3;3117:93;:::i;:::-;3235:2;3230:3;3226:12;3219:19;;2878:366;;;:::o;3250:118::-;3337:24;3355:5;3337:24;:::i;:::-;3332:3;3325:37;3250:118;;:::o;3374:407::-;3507:4;3545:2;3534:9;3530:18;3522:26;;3558:65;3620:1;3609:9;3605:17;3596:6;3558:65;:::i;:::-;3670:9;3664:4;3660:20;3655:2;3644:9;3640:18;3633:48;3698:76;3769:4;3760:6;3698:76;:::i;:::-;3690:84;;3374:407;;;;;:::o;3787:419::-;3953:4;3991:2;3980:9;3976:18;3968:26;;4040:9;4034:4;4030:20;4026:1;4015:9;4011:17;4004:47;4068:131;4194:4;4068:131;:::i;:::-;4060:139;;3787:419;;;:::o;4212:222::-;4305:4;4343:2;4332:9;4328:18;4320:26;;4356:71;4424:1;4413:9;4409:17;4400:6;4356:71;:::i;:::-;4212:222;;;;:::o;4440:129::-;4474:6;4501:20;;:::i;:::-;4491:30;;4530:33;4558:4;4550:6;4530:33;:::i;:::-;4440:129;;;:::o;4575:75::-;4608:6;4641:2;4635:9;4625:19;;4575:75;:::o;4656:307::-;4717:4;4807:18;4799:6;4796:30;4793:56;;;4829:18;;:::i;:::-;4793:56;4867:29;4889:6;4867:29;:::i;:::-;4859:37;;4951:4;4945;4941:15;4933:23;;4656:307;;;:::o;4969:98::-;5020:6;5054:5;5048:12;5038:22;;4969:98;;;:::o;5073:168::-;5156:11;5190:6;5185:3;5178:19;5230:4;5225:3;5221:14;5206:29;;5073:168;;;;:::o;5247:169::-;5331:11;5365:6;5360:3;5353:19;5405:4;5400:3;5396:14;5381:29;;5247:169;;;;:::o;5422:305::-;5462:3;5481:20;5499:1;5481:20;:::i;:::-;5476:25;;5515:20;5533:1;5515:20;:::i;:::-;5510:25;;5669:1;5601:66;5597:74;5594:1;5591:81;5588:107;;;5675:18;;:::i;:::-;5588:107;5719:1;5716;5712:9;5705:16;;5422:305;;;;:::o;5733:191::-;5773:4;5793:20;5811:1;5793:20;:::i;:::-;5788:25;;5827:20;5845:1;5827:20;:::i;:::-;5822:25;;5866:1;5863;5860:8;5857:34;;;5871:18;;:::i;:::-;5857:34;5916:1;5913;5909:9;5901:17;;5733:191;;;;:::o;5930:90::-;5964:7;6007:5;6000:13;5993:21;5982:32;;5930:90;;;:::o;6026:77::-;6063:7;6092:5;6081:16;;6026:77;;;:::o;6109:154::-;6193:6;6188:3;6183;6170:30;6255:1;6246:6;6241:3;6237:16;6230:27;6109:154;;;:::o;6269:307::-;6337:1;6347:113;6361:6;6358:1;6355:13;6347:113;;;6446:1;6441:3;6437:11;6431:18;6427:1;6422:3;6418:11;6411:39;6383:2;6380:1;6376:10;6371:15;;6347:113;;;6478:6;6475:1;6472:13;6469:101;;;6558:1;6549:6;6544:3;6540:16;6533:27;6469:101;6318:258;6269:307;;;:::o;6582:281::-;6665:27;6687:4;6665:27;:::i;:::-;6657:6;6653:40;6795:6;6783:10;6780:22;6759:18;6747:10;6744:34;6741:62;6738:88;;;6806:18;;:::i;:::-;6738:88;6846:10;6842:2;6835:22;6625:238;6582:281;;:::o;6869:180::-;6917:77;6914:1;6907:88;7014:4;7011:1;7004:15;7038:4;7035:1;7028:15;7055:180;7103:77;7100:1;7093:88;7200:4;7197:1;7190:15;7224:4;7221:1;7214:15;7241:117;7350:1;7347;7340:12;7364:117;7473:1;7470;7463:12;7487:117;7596:1;7593;7586:12;7610:117;7719:1;7716;7709:12;7733:117;7842:1;7839;7832:12;7856:117;7965:1;7962;7955:12;7979:102;8020:6;8071:2;8067:7;8062:2;8055:5;8051:14;8047:28;8037:38;;7979:102;;;:::o;8087:171::-;8227:23;8223:1;8215:6;8211:14;8204:47;8087:171;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"342200","executionCost":"infinite","totalCost":"infinite"},"external":{"checkUpkeep(bytes)":"infinite","counter()":"2451","interval()":"infinite","lastTimeStamp()":"2407","performUpkeep(bytes)":"infinite"}},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","counter()":"61bc221a","interval()":"947a36fb","lastTimeStamp()":"3f3b3b27","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"updateInterval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"updateInterval\":\"- Period of time between two counter increments expressed as UNIX timestamp value\"}}},\"title\":\"The Counter contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"Checks if the contract requires work to be done\"},\"constructor\":{\"notice\":\"Executes once when a contract is created to initialize state variables\"},\"counter()\":{\"notice\":\"Public counter variable\"},\"interval()\":{\"notice\":\"Use an interval in seconds and a timestamp to slow execution of Upkeep\"},\"performUpkeep(bytes)\":{\"notice\":\"Performs the work on the contract, if instructed by :checkUpkeep():\"}},\"notice\":\"A keeper-compatible contract that increments counter variable at fixed time intervals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KeepersCounter.sol\":\"KeepersCounter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"},\"contracts/KeepersCounter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\n\\n/**\\n * @title The Counter contract\\n * @notice  A keeper-compatible contract that increments counter variable at fixed time intervals\\n */\\ncontract KeepersCounter is KeeperCompatibleInterface {\\n    /**\\n     * Public counter variable\\n     */\\n    uint256 public counter;\\n\\n    /**\\n     * Use an interval in seconds and a timestamp to slow execution of Upkeep\\n     */\\n    uint256 public immutable interval;\\n    uint256 public lastTimeStamp;\\n\\n    /**\\n     * @notice Executes once when a contract is created to initialize state variables\\n     *\\n     * @param updateInterval - Period of time between two counter increments expressed as UNIX timestamp value\\n     */\\n    constructor(uint256 updateInterval) {\\n        interval = updateInterval;\\n        lastTimeStamp = block.timestamp;\\n\\n        counter = 0;\\n    }\\n\\n    /**\\n     * @notice Checks if the contract requires work to be done\\n     */\\n    function checkUpkeep(\\n        bytes memory /* checkData */\\n    )\\n        public\\n        view\\n        override\\n        returns (\\n            bool upkeepNeeded,\\n            bytes memory /* performData */\\n        )\\n    {\\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > interval;\\n        // We don't use the checkData in this example. The checkData is defined when the Upkeep was registered.\\n    }\\n\\n    /**\\n     * @notice Performs the work on the contract, if instructed by :checkUpkeep():\\n     */\\n    function performUpkeep(\\n        bytes calldata /* performData */\\n    ) external override {\\n        // add some verification\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\n        require(upkeepNeeded, \\\"Time interval not met\\\");\\n\\n        lastTimeStamp = block.timestamp;\\n        counter = counter + 1;\\n        // We don't use the performData in this example. The performData is generated by the Keeper's call to your checkUpkeep function\\n    }\\n}\\n\",\"keccak256\":\"0x44777401f1da1d5787252884b3ad44fc1c40e3cd9f8da50d47a02273d5eac933\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3120,"contract":"contracts/KeepersCounter.sol:KeepersCounter","label":"counter","offset":0,"slot":"0","type":"t_uint256"},{"astId":3125,"contract":"contracts/KeepersCounter.sol:KeepersCounter","label":"lastTimeStamp","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"Checks if the contract requires work to be done"},"constructor":{"notice":"Executes once when a contract is created to initialize state variables"},"counter()":{"notice":"Public counter variable"},"interval()":{"notice":"Use an interval in seconds and a timestamp to slow execution of Upkeep"},"performUpkeep(bytes)":{"notice":"Performs the work on the contract, if instructed by :checkUpkeep():"}},"notice":"A keeper-compatible contract that increments counter variable at fixed time intervals","version":1}}},"contracts/PriceConsumerV3.sol":{"PriceConsumerV3":{"abi":[{"inputs":[{"internalType":"address","name":"_priceFeed","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getLatestPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"_priceFeed":"- Price Feed Address Network: Goerli Aggregator: ETH/USD Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"}},"getLatestPrice()":{"returns":{"_0":"latest price"}},"getPriceFeed()":{"returns":{"_0":"Price Feed address"}}},"title":"The PriceConsumerV3 contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_3218":{"entryPoint":null,"id":3218,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":132,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":177,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":195,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":227,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":232,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:22","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:22","statements":[{"nodeType":"YulAssignment","src":"80:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:22"},"nodeType":"YulFunctionCall","src":"89:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:22"},"nodeType":"YulFunctionCall","src":"111:33:22"},"nodeType":"YulExpressionStatement","src":"111:33:22"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:22","type":""}],"src":"7:143:22"},{"body":{"nodeType":"YulBlock","src":"233:274:22","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:22"},"nodeType":"YulFunctionCall","src":"281:79:22"},"nodeType":"YulExpressionStatement","src":"281:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:22"},"nodeType":"YulFunctionCall","src":"250:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:22"},"nodeType":"YulFunctionCall","src":"246:32:22"},"nodeType":"YulIf","src":"243:119:22"},{"nodeType":"YulBlock","src":"372:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:22","type":""}]},{"nodeType":"YulAssignment","src":"416:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:22"},"nodeType":"YulFunctionCall","src":"458:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"426:31:22"},"nodeType":"YulFunctionCall","src":"426:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:22"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:22","type":""}],"src":"156:351:22"},{"body":{"nodeType":"YulBlock","src":"553:35:22","statements":[{"nodeType":"YulAssignment","src":"563:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"579:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"573:5:22"},"nodeType":"YulFunctionCall","src":"573:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"563:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"546:6:22","type":""}],"src":"513:75:22"},{"body":{"nodeType":"YulBlock","src":"639:51:22","statements":[{"nodeType":"YulAssignment","src":"649:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"678:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"660:17:22"},"nodeType":"YulFunctionCall","src":"660:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"649:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"621:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"631:7:22","type":""}],"src":"594:96:22"},{"body":{"nodeType":"YulBlock","src":"741:81:22","statements":[{"nodeType":"YulAssignment","src":"751:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"766:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"773:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"762:3:22"},"nodeType":"YulFunctionCall","src":"762:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"751:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"723:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"733:7:22","type":""}],"src":"696:126:22"},{"body":{"nodeType":"YulBlock","src":"917:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"934:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"937:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"927:6:22"},"nodeType":"YulFunctionCall","src":"927:12:22"},"nodeType":"YulExpressionStatement","src":"927:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"828:117:22"},{"body":{"nodeType":"YulBlock","src":"1040:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1057:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1060:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1050:6:22"},"nodeType":"YulFunctionCall","src":"1050:12:22"},"nodeType":"YulExpressionStatement","src":"1050:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"951:117:22"},{"body":{"nodeType":"YulBlock","src":"1117:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"1174:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1186:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1176:6:22"},"nodeType":"YulFunctionCall","src":"1176:12:22"},"nodeType":"YulExpressionStatement","src":"1176:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1140:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1165:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1147:17:22"},"nodeType":"YulFunctionCall","src":"1147:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1137:2:22"},"nodeType":"YulFunctionCall","src":"1137:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1130:6:22"},"nodeType":"YulFunctionCall","src":"1130:43:22"},"nodeType":"YulIf","src":"1127:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1110:5:22","type":""}],"src":"1074:122:22"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161048c38038061048c83398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506100ff565b60008151905061007e816100e8565b92915050565b60006020828403121561009a576100996100e3565b5b60006100a88482850161006f565b91505092915050565b60006100bc826100c3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100f1816100b1565b81146100fc57600080fd5b50565b60805160601c610369610123600039600081816082015261013701526103696000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b5780639e87a5cd14610059575b600080fd5b610043610077565b604051610050919061024e565b60405180910390f35b610061610133565b60405161006e9190610233565b60405180910390f35b6000806000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100e657600080fd5b505afa1580156100fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011e919061019a565b94509450945094509450839550505050505090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008151905061016a816102ee565b92915050565b60008151905061017f81610305565b92915050565b6000815190506101948161031c565b92915050565b600080600080600060a086880312156101b6576101b56102e9565b5b60006101c488828901610185565b95505060206101d58882890161015b565b94505060406101e688828901610170565b93505060606101f788828901610170565b925050608061020888828901610185565b9150509295509295909350565b61021e816102b3565b82525050565b61022d81610269565b82525050565b60006020820190506102486000830184610215565b92915050565b60006020820190506102636000830184610224565b92915050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006102be826102c5565b9050919050565b60006102d0826102d7565b9050919050565b60006102e282610273565b9050919050565b600080fd5b6102f781610269565b811461030257600080fd5b50565b61030e81610293565b811461031957600080fd5b50565b6103258161029d565b811461033057600080fd5b5056fea2646970667358221220ee87fab67fd756c320133a2f49bd862dc84006ce8bb770312279fc1abcc793ca64736f6c63430008070033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x48C CODESIZE SUB DUP1 PUSH2 0x48C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x84 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A JUMPI PUSH2 0x99 PUSH2 0xE3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP5 DUP3 DUP6 ADD PUSH2 0x6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC DUP3 PUSH2 0xC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB1 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x369 PUSH2 0x123 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x82 ADD MSTORE PUSH2 0x137 ADD MSTORE PUSH2 0x369 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9E87A5CD EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16A DUP2 PUSH2 0x2EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x17F DUP2 PUSH2 0x305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x194 DUP2 PUSH2 0x31C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x1B5 PUSH2 0x2E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C4 DUP9 DUP3 DUP10 ADD PUSH2 0x185 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D5 DUP9 DUP3 DUP10 ADD PUSH2 0x15B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E6 DUP9 DUP3 DUP10 ADD PUSH2 0x170 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F7 DUP9 DUP3 DUP10 ADD PUSH2 0x170 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x208 DUP9 DUP3 DUP10 ADD PUSH2 0x185 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x21E DUP2 PUSH2 0x2B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x269 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x263 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE DUP3 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0 DUP3 PUSH2 0x2D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP3 PUSH2 0x273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x269 JUMP JUMPDEST DUP2 EQ PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30E DUP2 PUSH2 0x293 JUMP JUMPDEST DUP2 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x325 DUP2 PUSH2 0x29D JUMP JUMPDEST DUP2 EQ PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE DUP8 STATICCALL 0xB6 PUSH32 0xD756C320133A2F49BD862DC84006CE8BB770312279FC1ABCC793CA64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ","sourceMap":"256:1048:18:-:0;;;615:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;691:10;657:45;;;;;;;;;;;;615:94;256:1048;;7:143:22;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;256:1048:18:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getLatestPrice_3241":{"entryPoint":119,"id":3241,"parameterSlots":0,"returnSlots":1},"@getPriceFeed_3251":{"entryPoint":307,"id":3251,"parameterSlots":0,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":368,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":410,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_contract$_AggregatorV3Interface_$965_to_t_address_fromStack":{"entryPoint":533,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":548,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$965__to_t_address__fromStack_reversed":{"entryPoint":563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":590,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_int256":{"entryPoint":617,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":627,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":659,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":669,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$965_to_t_address":{"entryPoint":691,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":709,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":727,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":745,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":750,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":773,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":796,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3777:22","statements":[{"body":{"nodeType":"YulBlock","src":"69:79:22","statements":[{"nodeType":"YulAssignment","src":"79:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"94:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:22"},"nodeType":"YulFunctionCall","src":"88:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"79:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"136:5:22"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"110:25:22"},"nodeType":"YulFunctionCall","src":"110:32:22"},"nodeType":"YulExpressionStatement","src":"110:32:22"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"47:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"55:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"63:5:22","type":""}],"src":"7:141:22"},{"body":{"nodeType":"YulBlock","src":"217:80:22","statements":[{"nodeType":"YulAssignment","src":"227:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"242:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"236:5:22"},"nodeType":"YulFunctionCall","src":"236:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"285:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"258:26:22"},"nodeType":"YulFunctionCall","src":"258:33:22"},"nodeType":"YulExpressionStatement","src":"258:33:22"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"195:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"203:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"211:5:22","type":""}],"src":"154:143:22"},{"body":{"nodeType":"YulBlock","src":"365:79:22","statements":[{"nodeType":"YulAssignment","src":"375:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"390:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"384:5:22"},"nodeType":"YulFunctionCall","src":"384:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"375:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"432:5:22"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"406:25:22"},"nodeType":"YulFunctionCall","src":"406:32:22"},"nodeType":"YulExpressionStatement","src":"406:32:22"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"343:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"351:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"359:5:22","type":""}],"src":"303:141:22"},{"body":{"nodeType":"YulBlock","src":"592:829:22","statements":[{"body":{"nodeType":"YulBlock","src":"639:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"641:77:22"},"nodeType":"YulFunctionCall","src":"641:79:22"},"nodeType":"YulExpressionStatement","src":"641:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"613:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"609:3:22"},"nodeType":"YulFunctionCall","src":"609:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"634:3:22","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"605:3:22"},"nodeType":"YulFunctionCall","src":"605:33:22"},"nodeType":"YulIf","src":"602:120:22"},{"nodeType":"YulBlock","src":"732:127:22","statements":[{"nodeType":"YulVariableDeclaration","src":"747:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"761:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"751:6:22","type":""}]},{"nodeType":"YulAssignment","src":"776:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"821:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"832:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:22"},"nodeType":"YulFunctionCall","src":"817:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"841:7:22"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"786:30:22"},"nodeType":"YulFunctionCall","src":"786:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"776:6:22"}]}]},{"nodeType":"YulBlock","src":"869:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"884:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"898:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"888:6:22","type":""}]},{"nodeType":"YulAssignment","src":"914:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"959:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"970:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:22"},"nodeType":"YulFunctionCall","src":"955:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"979:7:22"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"924:30:22"},"nodeType":"YulFunctionCall","src":"924:63:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"914:6:22"}]}]},{"nodeType":"YulBlock","src":"1007:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1022:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1036:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1026:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1052:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1098:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1109:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1094:3:22"},"nodeType":"YulFunctionCall","src":"1094:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1118:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1062:31:22"},"nodeType":"YulFunctionCall","src":"1062:64:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1052:6:22"}]}]},{"nodeType":"YulBlock","src":"1146:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1161:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1175:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1165:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1191:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1237:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1248:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1233:3:22"},"nodeType":"YulFunctionCall","src":"1233:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1257:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1201:31:22"},"nodeType":"YulFunctionCall","src":"1201:64:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1191:6:22"}]}]},{"nodeType":"YulBlock","src":"1285:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1300:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1314:3:22","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1304:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1331:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1376:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1387:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1372:3:22"},"nodeType":"YulFunctionCall","src":"1372:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1396:7:22"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"1341:30:22"},"nodeType":"YulFunctionCall","src":"1341:63:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1331:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"530:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"541:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"553:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"561:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"569:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"577:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"585:6:22","type":""}],"src":"450:971:22"},{"body":{"nodeType":"YulBlock","src":"1521:95:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1538:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1603:5:22"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$965_to_t_address","nodeType":"YulIdentifier","src":"1543:59:22"},"nodeType":"YulFunctionCall","src":"1543:66:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1531:6:22"},"nodeType":"YulFunctionCall","src":"1531:79:22"},"nodeType":"YulExpressionStatement","src":"1531:79:22"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$965_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1509:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1516:3:22","type":""}],"src":"1427:189:22"},{"body":{"nodeType":"YulBlock","src":"1685:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1702:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1724:5:22"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"1707:16:22"},"nodeType":"YulFunctionCall","src":"1707:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1695:6:22"},"nodeType":"YulFunctionCall","src":"1695:36:22"},"nodeType":"YulExpressionStatement","src":"1695:36:22"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1673:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1680:3:22","type":""}],"src":"1622:115:22"},{"body":{"nodeType":"YulBlock","src":"1870:153:22","statements":[{"nodeType":"YulAssignment","src":"1880:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1892:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1903:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1888:3:22"},"nodeType":"YulFunctionCall","src":"1888:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1880:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:22"},"nodeType":"YulFunctionCall","src":"1998:17:22"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$965_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1916:72:22"},"nodeType":"YulFunctionCall","src":"1916:100:22"},"nodeType":"YulExpressionStatement","src":"1916:100:22"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$965__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1842:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1854:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1865:4:22","type":""}],"src":"1743:280:22"},{"body":{"nodeType":"YulBlock","src":"2125:122:22","statements":[{"nodeType":"YulAssignment","src":"2135:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2147:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2158:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2143:3:22"},"nodeType":"YulFunctionCall","src":"2143:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2135:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2213:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2226:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2237:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2222:3:22"},"nodeType":"YulFunctionCall","src":"2222:17:22"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"2171:41:22"},"nodeType":"YulFunctionCall","src":"2171:69:22"},"nodeType":"YulExpressionStatement","src":"2171:69:22"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2097:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2109:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2120:4:22","type":""}],"src":"2029:218:22"},{"body":{"nodeType":"YulBlock","src":"2293:35:22","statements":[{"nodeType":"YulAssignment","src":"2303:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2319:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2313:5:22"},"nodeType":"YulFunctionCall","src":"2313:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2303:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2286:6:22","type":""}],"src":"2253:75:22"},{"body":{"nodeType":"YulBlock","src":"2378:32:22","statements":[{"nodeType":"YulAssignment","src":"2388:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"2399:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2388:7:22"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2360:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2370:7:22","type":""}],"src":"2334:76:22"},{"body":{"nodeType":"YulBlock","src":"2461:81:22","statements":[{"nodeType":"YulAssignment","src":"2471:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2486:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2493:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2482:3:22"},"nodeType":"YulFunctionCall","src":"2482:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2471:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2443:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2453:7:22","type":""}],"src":"2416:126:22"},{"body":{"nodeType":"YulBlock","src":"2593:32:22","statements":[{"nodeType":"YulAssignment","src":"2603:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"2614:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2603:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2575:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2585:7:22","type":""}],"src":"2548:77:22"},{"body":{"nodeType":"YulBlock","src":"2675:61:22","statements":[{"nodeType":"YulAssignment","src":"2685:45:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2700:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2707:22:22","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2696:3:22"},"nodeType":"YulFunctionCall","src":"2696:34:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2685:7:22"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2657:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2667:7:22","type":""}],"src":"2631:105:22"},{"body":{"nodeType":"YulBlock","src":"2831:66:22","statements":[{"nodeType":"YulAssignment","src":"2841:50:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2885:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"2854:30:22"},"nodeType":"YulFunctionCall","src":"2854:37:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2841:9:22"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$965_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2811:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2821:9:22","type":""}],"src":"2742:155:22"},{"body":{"nodeType":"YulBlock","src":"2963:66:22","statements":[{"nodeType":"YulAssignment","src":"2973:50:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3017:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"2986:30:22"},"nodeType":"YulFunctionCall","src":"2986:37:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2973:9:22"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2943:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2953:9:22","type":""}],"src":"2903:126:22"},{"body":{"nodeType":"YulBlock","src":"3095:53:22","statements":[{"nodeType":"YulAssignment","src":"3105:37:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3136:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3118:17:22"},"nodeType":"YulFunctionCall","src":"3118:24:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3105:9:22"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3075:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3085:9:22","type":""}],"src":"3035:113:22"},{"body":{"nodeType":"YulBlock","src":"3243:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3260:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3263:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3253:6:22"},"nodeType":"YulFunctionCall","src":"3253:12:22"},"nodeType":"YulExpressionStatement","src":"3253:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3154:117:22"},{"body":{"nodeType":"YulBlock","src":"3366:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3383:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3386:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3376:6:22"},"nodeType":"YulFunctionCall","src":"3376:12:22"},"nodeType":"YulExpressionStatement","src":"3376:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3277:117:22"},{"body":{"nodeType":"YulBlock","src":"3442:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"3498:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3507:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3510:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3500:6:22"},"nodeType":"YulFunctionCall","src":"3500:12:22"},"nodeType":"YulExpressionStatement","src":"3500:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3465:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3489:5:22"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"3472:16:22"},"nodeType":"YulFunctionCall","src":"3472:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3462:2:22"},"nodeType":"YulFunctionCall","src":"3462:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3455:6:22"},"nodeType":"YulFunctionCall","src":"3455:42:22"},"nodeType":"YulIf","src":"3452:62:22"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3435:5:22","type":""}],"src":"3400:120:22"},{"body":{"nodeType":"YulBlock","src":"3569:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"3626:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3635:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3638:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3628:6:22"},"nodeType":"YulFunctionCall","src":"3628:12:22"},"nodeType":"YulExpressionStatement","src":"3628:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3592:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3617:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3599:17:22"},"nodeType":"YulFunctionCall","src":"3599:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3589:2:22"},"nodeType":"YulFunctionCall","src":"3589:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3582:6:22"},"nodeType":"YulFunctionCall","src":"3582:43:22"},"nodeType":"YulIf","src":"3579:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3562:5:22","type":""}],"src":"3526:122:22"},{"body":{"nodeType":"YulBlock","src":"3696:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"3752:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3761:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3764:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3754:6:22"},"nodeType":"YulFunctionCall","src":"3754:12:22"},"nodeType":"YulExpressionStatement","src":"3754:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3719:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3743:5:22"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"3726:16:22"},"nodeType":"YulFunctionCall","src":"3726:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3716:2:22"},"nodeType":"YulFunctionCall","src":"3716:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3709:6:22"},"nodeType":"YulFunctionCall","src":"3709:42:22"},"nodeType":"YulIf","src":"3706:62:22"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3689:5:22","type":""}],"src":"3654:120:22"}]},"contents":"{\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$965_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$965_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$965__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$965_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$965_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3205":[{"length":32,"start":130},{"length":32,"start":311}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b5780639e87a5cd14610059575b600080fd5b610043610077565b604051610050919061024e565b60405180910390f35b610061610133565b60405161006e9190610233565b60405180910390f35b6000806000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100e657600080fd5b505afa1580156100fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011e919061019a565b94509450945094509450839550505050505090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008151905061016a816102ee565b92915050565b60008151905061017f81610305565b92915050565b6000815190506101948161031c565b92915050565b600080600080600060a086880312156101b6576101b56102e9565b5b60006101c488828901610185565b95505060206101d58882890161015b565b94505060406101e688828901610170565b93505060606101f788828901610170565b925050608061020888828901610185565b9150509295509295909350565b61021e816102b3565b82525050565b61022d81610269565b82525050565b60006020820190506102486000830184610215565b92915050565b60006020820190506102636000830184610224565b92915050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006102be826102c5565b9050919050565b60006102d0826102d7565b9050919050565b60006102e282610273565b9050919050565b600080fd5b6102f781610269565b811461030257600080fd5b50565b61030e81610293565b811461031957600080fd5b50565b6103258161029d565b811461033057600080fd5b5056fea2646970667358221220ee87fab67fd756c320133a2f49bd862dc84006ce8bb770312279fc1abcc793ca64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9E87A5CD EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16A DUP2 PUSH2 0x2EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x17F DUP2 PUSH2 0x305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x194 DUP2 PUSH2 0x31C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x1B5 PUSH2 0x2E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C4 DUP9 DUP3 DUP10 ADD PUSH2 0x185 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D5 DUP9 DUP3 DUP10 ADD PUSH2 0x15B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E6 DUP9 DUP3 DUP10 ADD PUSH2 0x170 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F7 DUP9 DUP3 DUP10 ADD PUSH2 0x170 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x208 DUP9 DUP3 DUP10 ADD PUSH2 0x185 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x21E DUP2 PUSH2 0x2B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x269 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x263 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE DUP3 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0 DUP3 PUSH2 0x2D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP3 PUSH2 0x273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x269 JUMP JUMPDEST DUP2 EQ PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30E DUP2 PUSH2 0x293 JUMP JUMPDEST DUP2 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x325 DUP2 PUSH2 0x29D JUMP JUMPDEST DUP2 EQ PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE DUP8 STATICCALL 0xB6 PUSH32 0xD756C320133A2F49BD862DC84006CE8BB770312279FC1ABCC793CA64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ","sourceMap":"256:1048:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:286;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;806:286;853:6;885:14;913:12;939:17;970;1001:22;1036:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;871:192;;;;;;;;;;1080:5;1073:12;;;;;;;806:286;:::o;1201:101::-;1246:21;1286:9;1279:16;;1201:101;:::o;7:141:22:-;63:5;94:6;88:13;79:22;;110:32;136:5;110:32;:::i;:::-;7:141;;;;:::o;154:143::-;211:5;242:6;236:13;227:22;;258:33;285:5;258:33;:::i;:::-;154:143;;;;:::o;303:141::-;359:5;390:6;384:13;375:22;;406:32;432:5;406:32;:::i;:::-;303:141;;;;:::o;450:971::-;553:6;561;569;577;585;634:3;622:9;613:7;609:23;605:33;602:120;;;641:79;;:::i;:::-;602:120;761:1;786:63;841:7;832:6;821:9;817:22;786:63;:::i;:::-;776:73;;732:127;898:2;924:63;979:7;970:6;959:9;955:22;924:63;:::i;:::-;914:73;;869:128;1036:2;1062:64;1118:7;1109:6;1098:9;1094:22;1062:64;:::i;:::-;1052:74;;1007:129;1175:2;1201:64;1257:7;1248:6;1237:9;1233:22;1201:64;:::i;:::-;1191:74;;1146:129;1314:3;1341:63;1396:7;1387:6;1376:9;1372:22;1341:63;:::i;:::-;1331:73;;1285:129;450:971;;;;;;;;:::o;1427:189::-;1543:66;1603:5;1543:66;:::i;:::-;1538:3;1531:79;1427:189;;:::o;1622:115::-;1707:23;1724:5;1707:23;:::i;:::-;1702:3;1695:36;1622:115;;:::o;1743:280::-;1865:4;1903:2;1892:9;1888:18;1880:26;;1916:100;2013:1;2002:9;1998:17;1989:6;1916:100;:::i;:::-;1743:280;;;;:::o;2029:218::-;2120:4;2158:2;2147:9;2143:18;2135:26;;2171:69;2237:1;2226:9;2222:17;2213:6;2171:69;:::i;:::-;2029:218;;;;:::o;2334:76::-;2370:7;2399:5;2388:16;;2334:76;;;:::o;2416:126::-;2453:7;2493:42;2486:5;2482:54;2471:65;;2416:126;;;:::o;2548:77::-;2585:7;2614:5;2603:16;;2548:77;;;:::o;2631:105::-;2667:7;2707:22;2700:5;2696:34;2685:45;;2631:105;;;:::o;2742:155::-;2821:9;2854:37;2885:5;2854:37;:::i;:::-;2841:50;;2742:155;;;:::o;2903:126::-;2953:9;2986:37;3017:5;2986:37;:::i;:::-;2973:50;;2903:126;;;:::o;3035:113::-;3085:9;3118:24;3136:5;3118:24;:::i;:::-;3105:37;;3035:113;;;:::o;3277:117::-;3386:1;3383;3376:12;3400:120;3472:23;3489:5;3472:23;:::i;:::-;3465:5;3462:34;3452:62;;3510:1;3507;3500:12;3452:62;3400:120;:::o;3526:122::-;3599:24;3617:5;3599:24;:::i;:::-;3592:5;3589:35;3579:63;;3638:1;3635;3628:12;3579:63;3526:122;:::o;3654:120::-;3726:23;3743:5;3726:23;:::i;:::-;3719:5;3716:34;3706:62;;3764:1;3761;3754:12;3706:62;3654:120;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"174600","executionCost":"infinite","totalCost":"infinite"},"external":{"getLatestPrice()":"infinite","getPriceFeed()":"infinite"}},"methodIdentifiers":{"getLatestPrice()":"8e15f473","getPriceFeed()":"9e87a5cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_priceFeed\":\"- Price Feed Address Network: Goerli Aggregator: ETH/USD Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\"}},\"getLatestPrice()\":{\"returns\":{\"_0\":\"latest price\"}},\"getPriceFeed()\":{\"returns\":{\"_0\":\"Price Feed address\"}}},\"title\":\"The PriceConsumerV3 contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Executes once when a contract is created to initialize state variables\"},\"getLatestPrice()\":{\"notice\":\"Returns the latest price\"},\"getPriceFeed()\":{\"notice\":\"Returns the Price Feed address\"}},\"notice\":\"Acontract that returns latest price from Chainlink Price Feeds\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceConsumerV3.sol\":\"PriceConsumerV3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/PriceConsumerV3.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n/**\\n * @title The PriceConsumerV3 contract\\n * @notice Acontract that returns latest price from Chainlink Price Feeds\\n */\\ncontract PriceConsumerV3 {\\n    AggregatorV3Interface internal immutable priceFeed;\\n\\n    /**\\n     * @notice Executes once when a contract is created to initialize state variables\\n     *\\n     * @param _priceFeed - Price Feed Address\\n     *\\n     * Network: Goerli\\n     * Aggregator: ETH/USD\\n     * Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n     */\\n    constructor(address _priceFeed) {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    /**\\n     * @notice Returns the latest price\\n     *\\n     * @return latest price\\n     */\\n    function getLatestPrice() public view returns (int256) {\\n        (\\n            uint80 roundID,\\n            int256 price,\\n            uint256 startedAt,\\n            uint256 timeStamp,\\n            uint80 answeredInRound\\n        ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n\\n    /**\\n     * @notice Returns the Price Feed address\\n     *\\n     * @return Price Feed address\\n     */\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xb7c870ca4b29f884653df32caa1d275201a0c7eebb336c8223cc7a16eb825e04\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Executes once when a contract is created to initialize state variables"},"getLatestPrice()":{"notice":"Returns the latest price"},"getPriceFeed()":{"notice":"Returns the Price Feed address"}},"notice":"Acontract that returns latest price from Chainlink Price Feeds","version":1}}},"contracts/RandomNumberConsumerV2.sol":{"RandomNumberConsumerV2":{"abi":[{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"address","name":"vrfCoordinator","type":"address"},{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"ReturnedRandomness","type":"event"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_randomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_requestId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"keyHash":"- the gas lane to use, which specifies the maximum gas price to bump to","subscriptionId":"- the subscription ID that this contract uses for funding requests","vrfCoordinator":"- coordinator, check https://docs.chain.link/docs/vrf-contracts/#configurations"}}},"title":"The RandomNumberConsumerV2 contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_3320":{"entryPoint":null,"id":3320,"parameterSlots":3,"returnSlots":0},"@_883":{"entryPoint":null,"id":883,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":327,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_addresst_bytes32_fromMemory":{"entryPoint":350,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":442,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":462,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":472,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":524,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":529,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":555,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2249:22","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:22","statements":[{"nodeType":"YulAssignment","src":"80:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:22"},"nodeType":"YulFunctionCall","src":"89:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:22"},"nodeType":"YulFunctionCall","src":"111:33:22"},"nodeType":"YulExpressionStatement","src":"111:33:22"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:22","type":""}],"src":"7:143:22"},{"body":{"nodeType":"YulBlock","src":"219:80:22","statements":[{"nodeType":"YulAssignment","src":"229:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"244:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"238:5:22"},"nodeType":"YulFunctionCall","src":"238:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"287:5:22"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"260:26:22"},"nodeType":"YulFunctionCall","src":"260:33:22"},"nodeType":"YulExpressionStatement","src":"260:33:22"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"197:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"205:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"213:5:22","type":""}],"src":"156:143:22"},{"body":{"nodeType":"YulBlock","src":"367:79:22","statements":[{"nodeType":"YulAssignment","src":"377:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"392:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"386:5:22"},"nodeType":"YulFunctionCall","src":"386:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"377:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"434:5:22"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"408:25:22"},"nodeType":"YulFunctionCall","src":"408:32:22"},"nodeType":"YulExpressionStatement","src":"408:32:22"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"345:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"353:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"361:5:22","type":""}],"src":"305:141:22"},{"body":{"nodeType":"YulBlock","src":"562:551:22","statements":[{"body":{"nodeType":"YulBlock","src":"608:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"610:77:22"},"nodeType":"YulFunctionCall","src":"610:79:22"},"nodeType":"YulExpressionStatement","src":"610:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"583:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"592:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"579:3:22"},"nodeType":"YulFunctionCall","src":"579:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"604:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"575:3:22"},"nodeType":"YulFunctionCall","src":"575:32:22"},"nodeType":"YulIf","src":"572:119:22"},{"nodeType":"YulBlock","src":"701:127:22","statements":[{"nodeType":"YulVariableDeclaration","src":"716:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"730:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"720:6:22","type":""}]},{"nodeType":"YulAssignment","src":"745:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"790:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"801:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"786:3:22"},"nodeType":"YulFunctionCall","src":"786:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"810:7:22"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"755:30:22"},"nodeType":"YulFunctionCall","src":"755:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"745:6:22"}]}]},{"nodeType":"YulBlock","src":"838:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"853:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"867:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"857:6:22","type":""}]},{"nodeType":"YulAssignment","src":"883:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"929:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"940:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"925:3:22"},"nodeType":"YulFunctionCall","src":"925:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"949:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"893:31:22"},"nodeType":"YulFunctionCall","src":"893:64:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"883:6:22"}]}]},{"nodeType":"YulBlock","src":"977:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"992:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1006:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"996:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1022:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1068:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1079:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1064:3:22"},"nodeType":"YulFunctionCall","src":"1064:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1088:7:22"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"1032:31:22"},"nodeType":"YulFunctionCall","src":"1032:64:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1022:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint64t_addresst_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"516:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"527:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"539:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"547:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"555:6:22","type":""}],"src":"452:661:22"},{"body":{"nodeType":"YulBlock","src":"1159:35:22","statements":[{"nodeType":"YulAssignment","src":"1169:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1185:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1179:5:22"},"nodeType":"YulFunctionCall","src":"1179:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1169:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1152:6:22","type":""}],"src":"1119:75:22"},{"body":{"nodeType":"YulBlock","src":"1245:51:22","statements":[{"nodeType":"YulAssignment","src":"1255:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1284:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1266:17:22"},"nodeType":"YulFunctionCall","src":"1266:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1255:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1227:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1237:7:22","type":""}],"src":"1200:96:22"},{"body":{"nodeType":"YulBlock","src":"1347:32:22","statements":[{"nodeType":"YulAssignment","src":"1357:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1368:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1357:7:22"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1329:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1339:7:22","type":""}],"src":"1302:77:22"},{"body":{"nodeType":"YulBlock","src":"1430:81:22","statements":[{"nodeType":"YulAssignment","src":"1440:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1455:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1462:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1451:3:22"},"nodeType":"YulFunctionCall","src":"1451:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1440:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1412:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1422:7:22","type":""}],"src":"1385:126:22"},{"body":{"nodeType":"YulBlock","src":"1561:57:22","statements":[{"nodeType":"YulAssignment","src":"1571:41:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1586:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1593:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1582:3:22"},"nodeType":"YulFunctionCall","src":"1582:30:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1571:7:22"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1543:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1553:7:22","type":""}],"src":"1517:101:22"},{"body":{"nodeType":"YulBlock","src":"1713:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1730:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1733:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1723:6:22"},"nodeType":"YulFunctionCall","src":"1723:12:22"},"nodeType":"YulExpressionStatement","src":"1723:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1624:117:22"},{"body":{"nodeType":"YulBlock","src":"1836:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1853:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1856:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1846:6:22"},"nodeType":"YulFunctionCall","src":"1846:12:22"},"nodeType":"YulExpressionStatement","src":"1846:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1747:117:22"},{"body":{"nodeType":"YulBlock","src":"1913:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"1970:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1979:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1982:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1972:6:22"},"nodeType":"YulFunctionCall","src":"1972:12:22"},"nodeType":"YulExpressionStatement","src":"1972:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1936:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1961:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1943:17:22"},"nodeType":"YulFunctionCall","src":"1943:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1933:2:22"},"nodeType":"YulFunctionCall","src":"1933:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1926:6:22"},"nodeType":"YulFunctionCall","src":"1926:43:22"},"nodeType":"YulIf","src":"1923:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1906:5:22","type":""}],"src":"1870:122:22"},{"body":{"nodeType":"YulBlock","src":"2041:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"2098:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2107:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2110:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2100:6:22"},"nodeType":"YulFunctionCall","src":"2100:12:22"},"nodeType":"YulExpressionStatement","src":"2100:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2064:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2089:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2071:17:22"},"nodeType":"YulFunctionCall","src":"2071:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2061:2:22"},"nodeType":"YulFunctionCall","src":"2061:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2054:6:22"},"nodeType":"YulFunctionCall","src":"2054:43:22"},"nodeType":"YulIf","src":"2051:63:22"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2034:5:22","type":""}],"src":"1998:122:22"},{"body":{"nodeType":"YulBlock","src":"2168:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:22"},"nodeType":"YulFunctionCall","src":"2226:12:22"},"nodeType":"YulExpressionStatement","src":"2226:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2191:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2215:5:22"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"2198:16:22"},"nodeType":"YulFunctionCall","src":"2198:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2188:2:22"},"nodeType":"YulFunctionCall","src":"2188:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2181:6:22"},"nodeType":"YulFunctionCall","src":"2181:42:22"},"nodeType":"YulIf","src":"2178:62:22"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2161:5:22","type":""}],"src":"2126:120:22"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_addresst_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101006040523480156200001257600080fd5b5060405162000b5738038062000b5783398181016040528101906200003891906200015e565b818073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060e0818152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508267ffffffffffffffff1660c08167ffffffffffffffff1660c01b815250505050506200025f565b6000815190506200012a8162000211565b92915050565b60008151905062000141816200022b565b92915050565b600081519050620001588162000245565b92915050565b6000806000606084860312156200017a57620001796200020c565b5b60006200018a8682870162000147565b93505060206200019d8682870162000119565b9250506040620001b08682870162000130565b9150509250925092565b6000620001c782620001d8565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b6200021c81620001ba565b81146200022857600080fd5b50565b6200023681620001ce565b81146200024257600080fd5b50565b6200025081620001f8565b81146200025c57600080fd5b50565b60805160601c60a05160601c60c05160c01c60e0516108af620002a8600039600061021d0152600061023e015260006101e101526000818160c7015261011b01526108af6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631fe543e314610051578063e0c862891461006d578063e89e106a14610077578063f6eaffc814610095575b600080fd5b61006b600480360381019061006691906104e7565b6100c5565b005b610075610185565b005b61007f6102df565b60405161008c91906106c0565b60405180910390f35b6100af60048036038101906100aa919061048d565b6102e5565b6040516100bc91906106c0565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017757337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161016e929190610622565b60405180910390fd5b6101818282610309565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101df57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006003620186a060026040518663ffffffff1660e01b815260040161028595949392919061066d565b602060405180830381600087803b15801561029f57600080fd5b505af11580156102b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d791906104ba565b600181905550565b60015481565b600081815481106102f557600080fd5b906000526020600020016000915090505481565b806000908051906020019061031f92919061035b565b507fefb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e8160405161034f919061064b565b60405180910390a15050565b828054828255906000526020600020908101928215610397579160200282015b8281111561039657825182559160200191906001019061037b565b5b5090506103a491906103a8565b5090565b5b808211156103c15760008160009055506001016103a9565b5090565b60006103d86103d384610700565b6106db565b905080838252602082019050828560208602820111156103fb576103fa610842565b5b60005b8581101561042b57816104118882610463565b8452602084019350602083019250506001810190506103fe565b5050509392505050565b600082601f83011261044a5761044961083d565b5b813561045a8482602086016103c5565b91505092915050565b60008135905061047281610862565b92915050565b60008151905061048781610862565b92915050565b6000602082840312156104a3576104a261084c565b5b60006104b184828501610463565b91505092915050565b6000602082840312156104d0576104cf61084c565b5b60006104de84828501610478565b91505092915050565b600080604083850312156104fe576104fd61084c565b5b600061050c85828601610463565b925050602083013567ffffffffffffffff81111561052d5761052c610847565b5b61053985828601610435565b9150509250929050565b600061054f83836105e6565b60208301905092915050565b61056481610765565b82525050565b60006105758261073c565b61057f8185610754565b935061058a8361072c565b8060005b838110156105bb5781516105a28882610543565b97506105ad83610747565b92505060018101905061058e565b5085935050505092915050565b6105d181610777565b82525050565b6105e081610781565b82525050565b6105ef816107af565b82525050565b6105fe816107af565b82525050565b61060d816107b9565b82525050565b61061c816107c9565b82525050565b6000604082019050610637600083018561055b565b610644602083018461055b565b9392505050565b60006020820190508181036000830152610665818461056a565b905092915050565b600060a08201905061068260008301886105c8565b61068f6020830187610613565b61069c60408301866105d7565b6106a96060830185610604565b6106b66080830184610604565b9695505050505050565b60006020820190506106d560008301846105f5565b92915050565b60006106e56106f6565b90506106f182826107dd565b919050565b6000604051905090565b600067ffffffffffffffff82111561071b5761071a61080e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006107708261078f565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b6107e682610851565b810181811067ffffffffffffffff821117156108055761080461080e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61086b816107af565b811461087657600080fd5b5056fea2646970667358221220d6cf3de3a93e844855e4d35bfdeb73976a48c4ee93d67c631b0a5970557a0d7964736f6c63430008070033","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB57 CODESIZE SUB DUP1 PUSH3 0xB57 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x15E JUMP JUMPDEST DUP2 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP POP POP POP PUSH3 0x25F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x12A DUP2 PUSH3 0x211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x141 DUP2 PUSH3 0x22B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x158 DUP2 PUSH3 0x245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x17A JUMPI PUSH3 0x179 PUSH3 0x20C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x18A DUP7 DUP3 DUP8 ADD PUSH3 0x147 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x19D DUP7 DUP3 DUP8 ADD PUSH3 0x119 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1B0 DUP7 DUP3 DUP8 ADD PUSH3 0x130 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C7 DUP3 PUSH3 0x1D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x21C DUP2 PUSH3 0x1BA JUMP JUMPDEST DUP2 EQ PUSH3 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x236 DUP2 PUSH3 0x1CE JUMP JUMPDEST DUP2 EQ PUSH3 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x250 DUP2 PUSH3 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH3 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xC0 SHR PUSH1 0xE0 MLOAD PUSH2 0x8AF PUSH3 0x2A8 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x21D ADD MSTORE PUSH1 0x0 PUSH2 0x23E ADD MSTORE PUSH1 0x0 PUSH2 0x1E1 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xC7 ADD MSTORE PUSH2 0x11B ADD MSTORE PUSH2 0x8AF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xE0C86289 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xE89E106A EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xF6EAFFC8 EQ PUSH2 0x95 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x177 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x181 DUP3 DUP3 PUSH2 0x309 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH3 0x186A0 PUSH1 0x2 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x31F SWAP3 SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST POP PUSH32 0xEFB16D61046900DA527008568620FB9F8420E2F5ED4DE3BFBDED5035C9362B0E DUP2 PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x397 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x396 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x37B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3A9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8 PUSH2 0x3D3 DUP5 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FA PUSH2 0x842 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x42B JUMPI DUP2 PUSH2 0x411 DUP9 DUP3 PUSH2 0x463 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44A JUMPI PUSH2 0x449 PUSH2 0x83D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x45A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x472 DUP2 PUSH2 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x487 DUP2 PUSH2 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A3 JUMPI PUSH2 0x4A2 PUSH2 0x84C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B1 DUP5 DUP3 DUP6 ADD PUSH2 0x463 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D0 JUMPI PUSH2 0x4CF PUSH2 0x84C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4DE DUP5 DUP3 DUP6 ADD PUSH2 0x478 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FE JUMPI PUSH2 0x4FD PUSH2 0x84C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP6 DUP3 DUP7 ADD PUSH2 0x463 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52D JUMPI PUSH2 0x52C PUSH2 0x847 JUMP JUMPDEST JUMPDEST PUSH2 0x539 DUP6 DUP3 DUP7 ADD PUSH2 0x435 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54F DUP4 DUP4 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x564 DUP2 PUSH2 0x765 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x575 DUP3 PUSH2 0x73C JUMP JUMPDEST PUSH2 0x57F DUP2 DUP6 PUSH2 0x754 JUMP JUMPDEST SWAP4 POP PUSH2 0x58A DUP4 PUSH2 0x72C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5BB JUMPI DUP2 MLOAD PUSH2 0x5A2 DUP9 DUP3 PUSH2 0x543 JUMP JUMPDEST SWAP8 POP PUSH2 0x5AD DUP4 PUSH2 0x747 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x58E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D1 DUP2 PUSH2 0x777 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5E0 DUP2 PUSH2 0x781 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5EF DUP2 PUSH2 0x7AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5FE DUP2 PUSH2 0x7AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x60D DUP2 PUSH2 0x7B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61C DUP2 PUSH2 0x7C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x637 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x55B JUMP JUMPDEST PUSH2 0x644 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x55B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x665 DUP2 DUP5 PUSH2 0x56A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x682 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x613 JUMP JUMPDEST PUSH2 0x69C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x6A9 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x604 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x6F1 DUP3 DUP3 PUSH2 0x7DD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x71B JUMPI PUSH2 0x71A PUSH2 0x80E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x770 DUP3 PUSH2 0x78F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E6 DUP3 PUSH2 0x851 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x805 JUMPI PUSH2 0x804 PUSH2 0x80E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86B DUP2 PUSH2 0x7AF JUMP JUMPDEST DUP2 EQ PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xCF RETURNDATASIZE 0xE3 0xA9 RETURNDATACOPY DUP5 BASEFEE SSTORE 0xE4 0xD3 JUMPDEST REVERT 0xEB PUSH20 0x976A48C4EE93D67C631B0A5970557A0D7964736F PUSH13 0x63430008070033000000000000 ","sourceMap":"403:2937:19:-:0;;;2062:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2186:14;5616:15:2;5599:32;;;;;;;;;;;;5556:80;2252:14:19::1;2212:55;;;;;;;;;;::::0;::::1;2289:7;2277:19;;;;::::0;::::1;2316:10;2306:7;;:20;;;;;;;;;;;;;;;;;;2355:14;2336:33;;;;;;;;;;::::0;::::1;2062:314:::0;;;403:2937;;7:143:22;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;156:143;;;;:::o;305:141::-;361:5;392:6;386:13;377:22;;408:32;434:5;408:32;:::i;:::-;305:141;;;;:::o;452:661::-;539:6;547;555;604:2;592:9;583:7;579:23;575:32;572:119;;;610:79;;:::i;:::-;572:119;730:1;755:63;810:7;801:6;790:9;786:22;755:63;:::i;:::-;745:73;;701:127;867:2;893:64;949:7;940:6;929:9;925:22;893:64;:::i;:::-;883:74;;838:129;1006:2;1032:64;1088:7;1079:6;1068:9;1064:22;1032:64;:::i;:::-;1022:74;;977:129;452:661;;;;;:::o;1200:96::-;1237:7;1266:24;1284:5;1266:24;:::i;:::-;1255:35;;1200:96;;;:::o;1302:77::-;1339:7;1368:5;1357:16;;1302:77;;;:::o;1385:126::-;1422:7;1462:42;1455:5;1451:54;1440:65;;1385:126;;;:::o;1517:101::-;1553:7;1593:18;1586:5;1582:30;1571:41;;1517:101;;;:::o;1747:117::-;1856:1;1853;1846:12;1870:122;1943:24;1961:5;1943:24;:::i;:::-;1936:5;1933:35;1923:63;;1982:1;1979;1972:12;1923:63;1870:122;:::o;1998:::-;2071:24;2089:5;2071:24;:::i;:::-;2064:5;2061:35;2051:63;;2110:1;2107;2100:12;2051:63;1998:122;:::o;2126:120::-;2198:23;2215:5;2198:23;:::i;:::-;2191:5;2188:34;2178:62;;2236:1;2233;2226:12;2178:62;2126:120;:::o;403:2937:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@fulfillRandomWords_3357":{"entryPoint":777,"id":3357,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_918":{"entryPoint":197,"id":918,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_3338":{"entryPoint":389,"id":3338,"parameterSlots":0,"returnSlots":0},"@s_randomWords_3278":{"entryPoint":741,"id":3278,"parameterSlots":0,"returnSlots":0},"@s_requestId_3280":{"entryPoint":735,"id":3280,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":965,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1165,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1255,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":1347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1371,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":1386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1480,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":1495,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":1510,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1525,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":1540,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":1555,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":1570,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":1645,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1728,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1755,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1782,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1792,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1836,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1852,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1863,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":1876,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1893,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1911,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":1921,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1935,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1967,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1977,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":1993,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2013,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":2062,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2109,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2124,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2129,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_uint256":{"entryPoint":2146,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9221:22","statements":[{"body":{"nodeType":"YulBlock","src":"126:620:22","statements":[{"nodeType":"YulAssignment","src":"136:90:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:22"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:22"},"nodeType":"YulFunctionCall","src":"161:64:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:22"},"nodeType":"YulFunctionCall","src":"145:81:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:22"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:22","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:22","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:22"},"nodeType":"YulFunctionCall","src":"261:21:22"},"nodeType":"YulExpressionStatement","src":"261:21:22"},{"nodeType":"YulAssignment","src":"291:23:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:22"},"nodeType":"YulFunctionCall","src":"298:16:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:103:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"404:77:22"},"nodeType":"YulFunctionCall","src":"404:79:22"},"nodeType":"YulExpressionStatement","src":"404:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:22"},"nodeType":"YulFunctionCall","src":"365:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:22"},"nodeType":"YulFunctionCall","src":"356:27:22"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:22"},"nodeType":"YulFunctionCall","src":"353:36:22"},"nodeType":"YulIf","src":"350:143:22"},{"body":{"nodeType":"YulBlock","src":"562:178:22","statements":[{"nodeType":"YulVariableDeclaration","src":"577:21:22","value":{"name":"src","nodeType":"YulIdentifier","src":"595:3:22"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"581:10:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:22"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"645:10:22"},{"name":"end","nodeType":"YulIdentifier","src":"657:3:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"624:20:22"},"nodeType":"YulFunctionCall","src":"624:37:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"612:6:22"},"nodeType":"YulFunctionCall","src":"612:50:22"},"nodeType":"YulExpressionStatement","src":"612:50:22"},{"nodeType":"YulAssignment","src":"675:21:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"686:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"691:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:22"},"nodeType":"YulFunctionCall","src":"682:14:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"675:3:22"}]},{"nodeType":"YulAssignment","src":"709:21:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"720:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"725:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:22"},"nodeType":"YulFunctionCall","src":"716:14:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"709:3:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"524:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"527:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"521:2:22"},"nodeType":"YulFunctionCall","src":"521:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"535:18:22","statements":[{"nodeType":"YulAssignment","src":"537:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"546:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"549:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"542:3:22"},"nodeType":"YulFunctionCall","src":"542:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"537:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"506:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"508:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"517:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"512:1:22","type":""}]}]},"src":"502:238:22"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:22","type":""}],"src":"24:722:22"},{"body":{"nodeType":"YulBlock","src":"846:293:22","statements":[{"body":{"nodeType":"YulBlock","src":"895:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"897:77:22"},"nodeType":"YulFunctionCall","src":"897:79:22"},"nodeType":"YulExpressionStatement","src":"897:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"874:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"882:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"870:3:22"},"nodeType":"YulFunctionCall","src":"870:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"889:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"866:3:22"},"nodeType":"YulFunctionCall","src":"866:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"859:6:22"},"nodeType":"YulFunctionCall","src":"859:35:22"},"nodeType":"YulIf","src":"856:122:22"},{"nodeType":"YulVariableDeclaration","src":"987:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1014:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1001:12:22"},"nodeType":"YulFunctionCall","src":"1001:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"991:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1030:103:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1106:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1114:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1102:3:22"},"nodeType":"YulFunctionCall","src":"1102:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"1121:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"1129:3:22"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1039:62:22"},"nodeType":"YulFunctionCall","src":"1039:94:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1030:5:22"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"824:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"832:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"840:5:22","type":""}],"src":"769:370:22"},{"body":{"nodeType":"YulBlock","src":"1197:87:22","statements":[{"nodeType":"YulAssignment","src":"1207:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1229:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1216:12:22"},"nodeType":"YulFunctionCall","src":"1216:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1272:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1245:26:22"},"nodeType":"YulFunctionCall","src":"1245:33:22"},"nodeType":"YulExpressionStatement","src":"1245:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1175:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1183:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1191:5:22","type":""}],"src":"1145:139:22"},{"body":{"nodeType":"YulBlock","src":"1353:80:22","statements":[{"nodeType":"YulAssignment","src":"1363:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1378:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1372:5:22"},"nodeType":"YulFunctionCall","src":"1372:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1363:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1421:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1394:26:22"},"nodeType":"YulFunctionCall","src":"1394:33:22"},"nodeType":"YulExpressionStatement","src":"1394:33:22"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1331:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1339:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1347:5:22","type":""}],"src":"1290:143:22"},{"body":{"nodeType":"YulBlock","src":"1505:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"1551:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1553:77:22"},"nodeType":"YulFunctionCall","src":"1553:79:22"},"nodeType":"YulExpressionStatement","src":"1553:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1526:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1535:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1522:3:22"},"nodeType":"YulFunctionCall","src":"1522:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1547:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1518:3:22"},"nodeType":"YulFunctionCall","src":"1518:32:22"},"nodeType":"YulIf","src":"1515:119:22"},{"nodeType":"YulBlock","src":"1644:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1659:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1673:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1663:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1688:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1723:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1734:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1719:3:22"},"nodeType":"YulFunctionCall","src":"1719:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1743:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1698:20:22"},"nodeType":"YulFunctionCall","src":"1698:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1688:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1475:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1486:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1498:6:22","type":""}],"src":"1439:329:22"},{"body":{"nodeType":"YulBlock","src":"1851:274:22","statements":[{"body":{"nodeType":"YulBlock","src":"1897:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1899:77:22"},"nodeType":"YulFunctionCall","src":"1899:79:22"},"nodeType":"YulExpressionStatement","src":"1899:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1872:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1881:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1868:3:22"},"nodeType":"YulFunctionCall","src":"1868:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1893:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1864:3:22"},"nodeType":"YulFunctionCall","src":"1864:32:22"},"nodeType":"YulIf","src":"1861:119:22"},{"nodeType":"YulBlock","src":"1990:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2005:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2019:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2009:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2034:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2080:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2091:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2076:3:22"},"nodeType":"YulFunctionCall","src":"2076:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2100:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2044:31:22"},"nodeType":"YulFunctionCall","src":"2044:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2034:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1821:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1832:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1844:6:22","type":""}],"src":"1774:351:22"},{"body":{"nodeType":"YulBlock","src":"2239:576:22","statements":[{"body":{"nodeType":"YulBlock","src":"2285:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2287:77:22"},"nodeType":"YulFunctionCall","src":"2287:79:22"},"nodeType":"YulExpressionStatement","src":"2287:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2260:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2269:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2256:3:22"},"nodeType":"YulFunctionCall","src":"2256:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2281:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2252:3:22"},"nodeType":"YulFunctionCall","src":"2252:32:22"},"nodeType":"YulIf","src":"2249:119:22"},{"nodeType":"YulBlock","src":"2378:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2393:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2407:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2397:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2422:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2457:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2453:3:22"},"nodeType":"YulFunctionCall","src":"2453:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2477:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2432:20:22"},"nodeType":"YulFunctionCall","src":"2432:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2422:6:22"}]}]},{"nodeType":"YulBlock","src":"2505:303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2520:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2551:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2562:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:22"},"nodeType":"YulFunctionCall","src":"2547:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2534:12:22"},"nodeType":"YulFunctionCall","src":"2534:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2524:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2613:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2615:77:22"},"nodeType":"YulFunctionCall","src":"2615:79:22"},"nodeType":"YulExpressionStatement","src":"2615:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2585:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2593:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2582:2:22"},"nodeType":"YulFunctionCall","src":"2582:30:22"},"nodeType":"YulIf","src":"2579:117:22"},{"nodeType":"YulAssignment","src":"2710:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2770:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2781:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2766:3:22"},"nodeType":"YulFunctionCall","src":"2766:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2790:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2720:45:22"},"nodeType":"YulFunctionCall","src":"2720:78:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2710:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2201:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2212:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2224:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2232:6:22","type":""}],"src":"2131:684:22"},{"body":{"nodeType":"YulBlock","src":"2901:99:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2945:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"2953:3:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2911:33:22"},"nodeType":"YulFunctionCall","src":"2911:46:22"},"nodeType":"YulExpressionStatement","src":"2911:46:22"},{"nodeType":"YulAssignment","src":"2966:28:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2984:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2989:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2980:3:22"},"nodeType":"YulFunctionCall","src":"2980:14:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"2966:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2874:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2882:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2890:10:22","type":""}],"src":"2821:179:22"},{"body":{"nodeType":"YulBlock","src":"3071:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3088:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3111:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3093:17:22"},"nodeType":"YulFunctionCall","src":"3093:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3081:6:22"},"nodeType":"YulFunctionCall","src":"3081:37:22"},"nodeType":"YulExpressionStatement","src":"3081:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3059:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3066:3:22","type":""}],"src":"3006:118:22"},{"body":{"nodeType":"YulBlock","src":"3284:608:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:68:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3356:5:22"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3308:47:22"},"nodeType":"YulFunctionCall","src":"3308:54:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3298:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3371:93:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3452:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"3457:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3378:73:22"},"nodeType":"YulFunctionCall","src":"3378:86:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3371:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"3473:71:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3538:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3488:49:22"},"nodeType":"YulFunctionCall","src":"3488:56:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3477:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3553:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3567:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3557:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3643:224:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3657:34:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3684:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3678:5:22"},"nodeType":"YulFunctionCall","src":"3678:13:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"3661:13:22","type":""}]},{"nodeType":"YulAssignment","src":"3704:70:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3755:13:22"},{"name":"pos","nodeType":"YulIdentifier","src":"3770:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3711:43:22"},"nodeType":"YulFunctionCall","src":"3711:63:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3704:3:22"}]},{"nodeType":"YulAssignment","src":"3787:70:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3850:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3797:52:22"},"nodeType":"YulFunctionCall","src":"3797:60:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3787:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3605:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"3608:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3602:2:22"},"nodeType":"YulFunctionCall","src":"3602:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3616:18:22","statements":[{"nodeType":"YulAssignment","src":"3618:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3627:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"3630:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3623:3:22"},"nodeType":"YulFunctionCall","src":"3623:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3618:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"3587:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3589:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3598:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3593:1:22","type":""}]}]},"src":"3583:284:22"},{"nodeType":"YulAssignment","src":"3876:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"3883:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3876:3:22"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3263:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3270:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3279:3:22","type":""}],"src":"3160:732:22"},{"body":{"nodeType":"YulBlock","src":"3963:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3980:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4003:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3985:17:22"},"nodeType":"YulFunctionCall","src":"3985:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3973:6:22"},"nodeType":"YulFunctionCall","src":"3973:37:22"},"nodeType":"YulExpressionStatement","src":"3973:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3951:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3958:3:22","type":""}],"src":"3898:118:22"},{"body":{"nodeType":"YulBlock","src":"4085:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4102:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4124:5:22"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"4107:16:22"},"nodeType":"YulFunctionCall","src":"4107:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4095:6:22"},"nodeType":"YulFunctionCall","src":"4095:36:22"},"nodeType":"YulExpressionStatement","src":"4095:36:22"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4073:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4080:3:22","type":""}],"src":"4022:115:22"},{"body":{"nodeType":"YulBlock","src":"4198:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4215:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4238:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4220:17:22"},"nodeType":"YulFunctionCall","src":"4220:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4208:6:22"},"nodeType":"YulFunctionCall","src":"4208:37:22"},"nodeType":"YulExpressionStatement","src":"4208:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4186:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4193:3:22","type":""}],"src":"4143:108:22"},{"body":{"nodeType":"YulBlock","src":"4322:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4339:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4362:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4344:17:22"},"nodeType":"YulFunctionCall","src":"4344:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4332:6:22"},"nodeType":"YulFunctionCall","src":"4332:37:22"},"nodeType":"YulExpressionStatement","src":"4332:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4310:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4317:3:22","type":""}],"src":"4257:118:22"},{"body":{"nodeType":"YulBlock","src":"4444:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4461:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4483:5:22"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"4466:16:22"},"nodeType":"YulFunctionCall","src":"4466:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4454:6:22"},"nodeType":"YulFunctionCall","src":"4454:36:22"},"nodeType":"YulExpressionStatement","src":"4454:36:22"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4432:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4439:3:22","type":""}],"src":"4381:115:22"},{"body":{"nodeType":"YulBlock","src":"4565:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4582:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4604:5:22"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"4587:16:22"},"nodeType":"YulFunctionCall","src":"4587:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4575:6:22"},"nodeType":"YulFunctionCall","src":"4575:36:22"},"nodeType":"YulExpressionStatement","src":"4575:36:22"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4553:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4560:3:22","type":""}],"src":"4502:115:22"},{"body":{"nodeType":"YulBlock","src":"4749:206:22","statements":[{"nodeType":"YulAssignment","src":"4759:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4782:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4767:3:22"},"nodeType":"YulFunctionCall","src":"4767:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4759:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4839:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4852:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4863:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4848:3:22"},"nodeType":"YulFunctionCall","src":"4848:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4795:43:22"},"nodeType":"YulFunctionCall","src":"4795:71:22"},"nodeType":"YulExpressionStatement","src":"4795:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4920:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4933:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4944:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4929:3:22"},"nodeType":"YulFunctionCall","src":"4929:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4876:43:22"},"nodeType":"YulFunctionCall","src":"4876:72:22"},"nodeType":"YulExpressionStatement","src":"4876:72:22"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4713:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4725:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4733:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4744:4:22","type":""}],"src":"4623:332:22"},{"body":{"nodeType":"YulBlock","src":"5109:225:22","statements":[{"nodeType":"YulAssignment","src":"5119:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5131:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5142:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5127:3:22"},"nodeType":"YulFunctionCall","src":"5127:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5119:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5166:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5177:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5162:3:22"},"nodeType":"YulFunctionCall","src":"5162:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5185:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5181:3:22"},"nodeType":"YulFunctionCall","src":"5181:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5155:6:22"},"nodeType":"YulFunctionCall","src":"5155:47:22"},"nodeType":"YulExpressionStatement","src":"5155:47:22"},{"nodeType":"YulAssignment","src":"5211:116:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5313:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"5322:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5219:93:22"},"nodeType":"YulFunctionCall","src":"5219:108:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5211:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5081:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5093:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5104:4:22","type":""}],"src":"4961:373:22"},{"body":{"nodeType":"YulBlock","src":"5542:446:22","statements":[{"nodeType":"YulAssignment","src":"5552:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5564:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5575:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5560:3:22"},"nodeType":"YulFunctionCall","src":"5560:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5552:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5633:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5646:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5657:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5642:3:22"},"nodeType":"YulFunctionCall","src":"5642:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5589:43:22"},"nodeType":"YulFunctionCall","src":"5589:71:22"},"nodeType":"YulExpressionStatement","src":"5589:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5712:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5725:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5736:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5721:3:22"},"nodeType":"YulFunctionCall","src":"5721:18:22"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"5670:41:22"},"nodeType":"YulFunctionCall","src":"5670:70:22"},"nodeType":"YulExpressionStatement","src":"5670:70:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5792:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5805:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5816:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5801:3:22"},"nodeType":"YulFunctionCall","src":"5801:18:22"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"5750:41:22"},"nodeType":"YulFunctionCall","src":"5750:70:22"},"nodeType":"YulExpressionStatement","src":"5750:70:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5872:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5885:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5896:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5881:3:22"},"nodeType":"YulFunctionCall","src":"5881:18:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"5830:41:22"},"nodeType":"YulFunctionCall","src":"5830:70:22"},"nodeType":"YulExpressionStatement","src":"5830:70:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5952:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5965:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5976:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5961:3:22"},"nodeType":"YulFunctionCall","src":"5961:19:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"5910:41:22"},"nodeType":"YulFunctionCall","src":"5910:71:22"},"nodeType":"YulExpressionStatement","src":"5910:71:22"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5482:9:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5494:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5502:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5510:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5518:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5526:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5537:4:22","type":""}],"src":"5340:648:22"},{"body":{"nodeType":"YulBlock","src":"6092:124:22","statements":[{"nodeType":"YulAssignment","src":"6102:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6114:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6125:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6110:3:22"},"nodeType":"YulFunctionCall","src":"6110:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6102:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6182:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6195:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6206:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6191:3:22"},"nodeType":"YulFunctionCall","src":"6191:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6138:43:22"},"nodeType":"YulFunctionCall","src":"6138:71:22"},"nodeType":"YulExpressionStatement","src":"6138:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6064:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6076:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6087:4:22","type":""}],"src":"5994:222:22"},{"body":{"nodeType":"YulBlock","src":"6263:88:22","statements":[{"nodeType":"YulAssignment","src":"6273:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6283:18:22"},"nodeType":"YulFunctionCall","src":"6283:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6273:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6332:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"6340:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6312:19:22"},"nodeType":"YulFunctionCall","src":"6312:33:22"},"nodeType":"YulExpressionStatement","src":"6312:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6247:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6256:6:22","type":""}],"src":"6222:129:22"},{"body":{"nodeType":"YulBlock","src":"6397:35:22","statements":[{"nodeType":"YulAssignment","src":"6407:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6423:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6417:5:22"},"nodeType":"YulFunctionCall","src":"6417:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6407:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6390:6:22","type":""}],"src":"6357:75:22"},{"body":{"nodeType":"YulBlock","src":"6520:229:22","statements":[{"body":{"nodeType":"YulBlock","src":"6625:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6627:16:22"},"nodeType":"YulFunctionCall","src":"6627:18:22"},"nodeType":"YulExpressionStatement","src":"6627:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6597:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6605:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6594:2:22"},"nodeType":"YulFunctionCall","src":"6594:30:22"},"nodeType":"YulIf","src":"6591:56:22"},{"nodeType":"YulAssignment","src":"6657:25:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6669:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6677:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6665:3:22"},"nodeType":"YulFunctionCall","src":"6665:17:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6657:4:22"}]},{"nodeType":"YulAssignment","src":"6719:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6731:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"6737:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6727:3:22"},"nodeType":"YulFunctionCall","src":"6727:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6719:4:22"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6504:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6515:4:22","type":""}],"src":"6438:311:22"},{"body":{"nodeType":"YulBlock","src":"6827:60:22","statements":[{"nodeType":"YulAssignment","src":"6837:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6845:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6837:4:22"}]},{"nodeType":"YulAssignment","src":"6858:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6870:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"6875:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6866:3:22"},"nodeType":"YulFunctionCall","src":"6866:14:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6858:4:22"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6814:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6822:4:22","type":""}],"src":"6755:132:22"},{"body":{"nodeType":"YulBlock","src":"6967:40:22","statements":[{"nodeType":"YulAssignment","src":"6978:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6994:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6988:5:22"},"nodeType":"YulFunctionCall","src":"6988:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6978:6:22"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6950:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6960:6:22","type":""}],"src":"6893:114:22"},{"body":{"nodeType":"YulBlock","src":"7088:38:22","statements":[{"nodeType":"YulAssignment","src":"7098:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7110:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7115:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7106:3:22"},"nodeType":"YulFunctionCall","src":"7106:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7098:4:22"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7075:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7083:4:22","type":""}],"src":"7013:113:22"},{"body":{"nodeType":"YulBlock","src":"7243:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7260:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7265:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7253:6:22"},"nodeType":"YulFunctionCall","src":"7253:19:22"},"nodeType":"YulExpressionStatement","src":"7253:19:22"},{"nodeType":"YulAssignment","src":"7281:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7300:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7305:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7296:3:22"},"nodeType":"YulFunctionCall","src":"7296:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7281:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7215:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"7220:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7231:11:22","type":""}],"src":"7132:184:22"},{"body":{"nodeType":"YulBlock","src":"7367:51:22","statements":[{"nodeType":"YulAssignment","src":"7377:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7406:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7388:17:22"},"nodeType":"YulFunctionCall","src":"7388:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7377:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7349:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7359:7:22","type":""}],"src":"7322:96:22"},{"body":{"nodeType":"YulBlock","src":"7469:32:22","statements":[{"nodeType":"YulAssignment","src":"7479:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"7490:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7479:7:22"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7451:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7461:7:22","type":""}],"src":"7424:77:22"},{"body":{"nodeType":"YulBlock","src":"7551:45:22","statements":[{"nodeType":"YulAssignment","src":"7561:29:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7576:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7583:6:22","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7572:3:22"},"nodeType":"YulFunctionCall","src":"7572:18:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7561:7:22"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7533:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7543:7:22","type":""}],"src":"7507:89:22"},{"body":{"nodeType":"YulBlock","src":"7647:81:22","statements":[{"nodeType":"YulAssignment","src":"7657:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7672:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7679:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7668:3:22"},"nodeType":"YulFunctionCall","src":"7668:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7657:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7629:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7639:7:22","type":""}],"src":"7602:126:22"},{"body":{"nodeType":"YulBlock","src":"7779:32:22","statements":[{"nodeType":"YulAssignment","src":"7789:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"7800:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7789:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7761:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7771:7:22","type":""}],"src":"7734:77:22"},{"body":{"nodeType":"YulBlock","src":"7861:49:22","statements":[{"nodeType":"YulAssignment","src":"7871:33:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7886:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7893:10:22","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7882:3:22"},"nodeType":"YulFunctionCall","src":"7882:22:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7871:7:22"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7843:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7853:7:22","type":""}],"src":"7817:93:22"},{"body":{"nodeType":"YulBlock","src":"7960:57:22","statements":[{"nodeType":"YulAssignment","src":"7970:41:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7985:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7992:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7981:3:22"},"nodeType":"YulFunctionCall","src":"7981:30:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7970:7:22"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7942:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7952:7:22","type":""}],"src":"7916:101:22"},{"body":{"nodeType":"YulBlock","src":"8066:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8076:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8098:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8106:21:22"},"nodeType":"YulFunctionCall","src":"8106:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8094:3:22"},"nodeType":"YulFunctionCall","src":"8094:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"8080:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8245:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8247:16:22"},"nodeType":"YulFunctionCall","src":"8247:18:22"},"nodeType":"YulExpressionStatement","src":"8247:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8188:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"8200:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8185:2:22"},"nodeType":"YulFunctionCall","src":"8185:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8224:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8236:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8221:2:22"},"nodeType":"YulFunctionCall","src":"8221:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8182:2:22"},"nodeType":"YulFunctionCall","src":"8182:62:22"},"nodeType":"YulIf","src":"8179:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8283:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8287:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8276:6:22"},"nodeType":"YulFunctionCall","src":"8276:22:22"},"nodeType":"YulExpressionStatement","src":"8276:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8052:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"8060:4:22","type":""}],"src":"8023:281:22"},{"body":{"nodeType":"YulBlock","src":"8338:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8355:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8358:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8348:6:22"},"nodeType":"YulFunctionCall","src":"8348:88:22"},"nodeType":"YulExpressionStatement","src":"8348:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8452:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8455:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8445:6:22"},"nodeType":"YulFunctionCall","src":"8445:15:22"},"nodeType":"YulExpressionStatement","src":"8445:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8476:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8479:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8469:6:22"},"nodeType":"YulFunctionCall","src":"8469:15:22"},"nodeType":"YulExpressionStatement","src":"8469:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8310:180:22"},{"body":{"nodeType":"YulBlock","src":"8585:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8602:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8605:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8595:6:22"},"nodeType":"YulFunctionCall","src":"8595:12:22"},"nodeType":"YulExpressionStatement","src":"8595:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"8496:117:22"},{"body":{"nodeType":"YulBlock","src":"8708:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8725:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8728:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8718:6:22"},"nodeType":"YulFunctionCall","src":"8718:12:22"},"nodeType":"YulExpressionStatement","src":"8718:12:22"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"8619:117:22"},{"body":{"nodeType":"YulBlock","src":"8831:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8848:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8851:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8841:6:22"},"nodeType":"YulFunctionCall","src":"8841:12:22"},"nodeType":"YulExpressionStatement","src":"8841:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"8742:117:22"},{"body":{"nodeType":"YulBlock","src":"8954:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8971:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8974:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8964:6:22"},"nodeType":"YulFunctionCall","src":"8964:12:22"},"nodeType":"YulExpressionStatement","src":"8964:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"8865:117:22"},{"body":{"nodeType":"YulBlock","src":"9036:54:22","statements":[{"nodeType":"YulAssignment","src":"9046:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9064:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"9071:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9060:3:22"},"nodeType":"YulFunctionCall","src":"9060:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9080:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9076:3:22"},"nodeType":"YulFunctionCall","src":"9076:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9056:3:22"},"nodeType":"YulFunctionCall","src":"9056:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9046:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9019:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9029:6:22","type":""}],"src":"8988:102:22"},{"body":{"nodeType":"YulBlock","src":"9139:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"9196:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9205:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9208:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9198:6:22"},"nodeType":"YulFunctionCall","src":"9198:12:22"},"nodeType":"YulExpressionStatement","src":"9198:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9162:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9187:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9169:17:22"},"nodeType":"YulFunctionCall","src":"9169:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9159:2:22"},"nodeType":"YulFunctionCall","src":"9159:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9152:6:22"},"nodeType":"YulFunctionCall","src":"9152:43:22"},"nodeType":"YulIf","src":"9149:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9132:5:22","type":""}],"src":"9096:122:22"}]},"contents":"{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"872":[{"length":32,"start":199},{"length":32,"start":283}],"3262":[{"length":32,"start":481}],"3264":[{"length":32,"start":574}],"3266":[{"length":32,"start":541}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80631fe543e314610051578063e0c862891461006d578063e89e106a14610077578063f6eaffc814610095575b600080fd5b61006b600480360381019061006691906104e7565b6100c5565b005b610075610185565b005b61007f6102df565b60405161008c91906106c0565b60405180910390f35b6100af60048036038101906100aa919061048d565b6102e5565b6040516100bc91906106c0565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017757337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161016e929190610622565b60405180910390fd5b6101818282610309565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101df57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006003620186a060026040518663ffffffff1660e01b815260040161028595949392919061066d565b602060405180830381600087803b15801561029f57600080fd5b505af11580156102b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d791906104ba565b600181905550565b60015481565b600081815481106102f557600080fd5b906000526020600020016000915090505481565b806000908051906020019061031f92919061035b565b507fefb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e8160405161034f919061064b565b60405180910390a15050565b828054828255906000526020600020908101928215610397579160200282015b8281111561039657825182559160200191906001019061037b565b5b5090506103a491906103a8565b5090565b5b808211156103c15760008160009055506001016103a9565b5090565b60006103d86103d384610700565b6106db565b905080838252602082019050828560208602820111156103fb576103fa610842565b5b60005b8581101561042b57816104118882610463565b8452602084019350602083019250506001810190506103fe565b5050509392505050565b600082601f83011261044a5761044961083d565b5b813561045a8482602086016103c5565b91505092915050565b60008135905061047281610862565b92915050565b60008151905061048781610862565b92915050565b6000602082840312156104a3576104a261084c565b5b60006104b184828501610463565b91505092915050565b6000602082840312156104d0576104cf61084c565b5b60006104de84828501610478565b91505092915050565b600080604083850312156104fe576104fd61084c565b5b600061050c85828601610463565b925050602083013567ffffffffffffffff81111561052d5761052c610847565b5b61053985828601610435565b9150509250929050565b600061054f83836105e6565b60208301905092915050565b61056481610765565b82525050565b60006105758261073c565b61057f8185610754565b935061058a8361072c565b8060005b838110156105bb5781516105a28882610543565b97506105ad83610747565b92505060018101905061058e565b5085935050505092915050565b6105d181610777565b82525050565b6105e081610781565b82525050565b6105ef816107af565b82525050565b6105fe816107af565b82525050565b61060d816107b9565b82525050565b61061c816107c9565b82525050565b6000604082019050610637600083018561055b565b610644602083018461055b565b9392505050565b60006020820190508181036000830152610665818461056a565b905092915050565b600060a08201905061068260008301886105c8565b61068f6020830187610613565b61069c60408301866105d7565b6106a96060830185610604565b6106b66080830184610604565b9695505050505050565b60006020820190506106d560008301846105f5565b92915050565b60006106e56106f6565b90506106f182826107dd565b919050565b6000604051905090565b600067ffffffffffffffff82111561071b5761071a61080e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006107708261078f565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b6107e682610851565b810181811067ffffffffffffffff821117156108055761080461080e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61086b816107af565b811461087657600080fd5b5056fea2646970667358221220d6cf3de3a93e844855e4d35bfdeb73976a48c4ee93d67c631b0a5970557a0d7964736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xE0C86289 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xE89E106A EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xF6EAFFC8 EQ PUSH2 0x95 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x177 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x181 DUP3 DUP3 PUSH2 0x309 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH3 0x186A0 PUSH1 0x2 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x31F SWAP3 SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST POP PUSH32 0xEFB16D61046900DA527008568620FB9F8420E2F5ED4DE3BFBDED5035C9362B0E DUP2 PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x397 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x396 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x37B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3A9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8 PUSH2 0x3D3 DUP5 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FA PUSH2 0x842 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x42B JUMPI DUP2 PUSH2 0x411 DUP9 DUP3 PUSH2 0x463 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44A JUMPI PUSH2 0x449 PUSH2 0x83D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x45A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x472 DUP2 PUSH2 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x487 DUP2 PUSH2 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A3 JUMPI PUSH2 0x4A2 PUSH2 0x84C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B1 DUP5 DUP3 DUP6 ADD PUSH2 0x463 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D0 JUMPI PUSH2 0x4CF PUSH2 0x84C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4DE DUP5 DUP3 DUP6 ADD PUSH2 0x478 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FE JUMPI PUSH2 0x4FD PUSH2 0x84C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP6 DUP3 DUP7 ADD PUSH2 0x463 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52D JUMPI PUSH2 0x52C PUSH2 0x847 JUMP JUMPDEST JUMPDEST PUSH2 0x539 DUP6 DUP3 DUP7 ADD PUSH2 0x435 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54F DUP4 DUP4 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x564 DUP2 PUSH2 0x765 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x575 DUP3 PUSH2 0x73C JUMP JUMPDEST PUSH2 0x57F DUP2 DUP6 PUSH2 0x754 JUMP JUMPDEST SWAP4 POP PUSH2 0x58A DUP4 PUSH2 0x72C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5BB JUMPI DUP2 MLOAD PUSH2 0x5A2 DUP9 DUP3 PUSH2 0x543 JUMP JUMPDEST SWAP8 POP PUSH2 0x5AD DUP4 PUSH2 0x747 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x58E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D1 DUP2 PUSH2 0x777 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5E0 DUP2 PUSH2 0x781 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5EF DUP2 PUSH2 0x7AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5FE DUP2 PUSH2 0x7AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x60D DUP2 PUSH2 0x7B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61C DUP2 PUSH2 0x7C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x637 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x55B JUMP JUMPDEST PUSH2 0x644 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x55B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x665 DUP2 DUP5 PUSH2 0x56A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x682 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x613 JUMP JUMPDEST PUSH2 0x69C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x6A9 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x604 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x6F1 DUP3 DUP3 PUSH2 0x7DD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x71B JUMPI PUSH2 0x71A PUSH2 0x80E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x770 DUP3 PUSH2 0x78F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E6 DUP3 PUSH2 0x851 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x805 JUMPI PUSH2 0x804 PUSH2 0x80E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86B DUP2 PUSH2 0x7AF JUMP JUMPDEST DUP2 EQ PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xCF RETURNDATASIZE 0xE3 0xA9 RETURNDATACOPY DUP5 BASEFEE SSTORE 0xE4 0xD3 JUMPDEST REVERT 0xEB PUSH20 0x976A48C4EE93D67C631B0A5970557A0D7964736F PUSH13 0x63430008070033000000000000 ","sourceMap":"403:2937:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6618:256:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2540:325:19;;;:::i;:::-;;1578:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1542:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:2;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;2540:325:19:-;3312:7;;;;;;;;;;;3298:21;;:10;:21;;;3290:30;;;;;;2675:11:::1;:30;;;2719:9;2742:16;1379:1;1272:6;1534:1;2675:183;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2661:11;:197;;;;2540:325::o:0;1578:26::-;;;;:::o;1542:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3068:185::-;3189:11;3173:13;:27;;;;;;;;;;;;:::i;:::-;;3215:31;3234:11;3215:31;;;;;;:::i;:::-;;;;;;;;3068:185;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:22:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:370::-;840:5;889:3;882:4;874:6;870:17;866:27;856:122;;897:79;;:::i;:::-;856:122;1014:6;1001:20;1039:94;1129:3;1121:6;1114:4;1106:6;1102:17;1039:94;:::i;:::-;1030:103;;846:293;769:370;;;;:::o;1145:139::-;1191:5;1229:6;1216:20;1207:29;;1245:33;1272:5;1245:33;:::i;:::-;1145:139;;;;:::o;1290:143::-;1347:5;1378:6;1372:13;1363:22;;1394:33;1421:5;1394:33;:::i;:::-;1290:143;;;;:::o;1439:329::-;1498:6;1547:2;1535:9;1526:7;1522:23;1518:32;1515:119;;;1553:79;;:::i;:::-;1515:119;1673:1;1698:53;1743:7;1734:6;1723:9;1719:22;1698:53;:::i;:::-;1688:63;;1644:117;1439:329;;;;:::o;1774:351::-;1844:6;1893:2;1881:9;1872:7;1868:23;1864:32;1861:119;;;1899:79;;:::i;:::-;1861:119;2019:1;2044:64;2100:7;2091:6;2080:9;2076:22;2044:64;:::i;:::-;2034:74;;1990:128;1774:351;;;;:::o;2131:684::-;2224:6;2232;2281:2;2269:9;2260:7;2256:23;2252:32;2249:119;;;2287:79;;:::i;:::-;2249:119;2407:1;2432:53;2477:7;2468:6;2457:9;2453:22;2432:53;:::i;:::-;2422:63;;2378:117;2562:2;2551:9;2547:18;2534:32;2593:18;2585:6;2582:30;2579:117;;;2615:79;;:::i;:::-;2579:117;2720:78;2790:7;2781:6;2770:9;2766:22;2720:78;:::i;:::-;2710:88;;2505:303;2131:684;;;;;:::o;2821:179::-;2890:10;2911:46;2953:3;2945:6;2911:46;:::i;:::-;2989:4;2984:3;2980:14;2966:28;;2821:179;;;;:::o;3006:118::-;3093:24;3111:5;3093:24;:::i;:::-;3088:3;3081:37;3006:118;;:::o;3160:732::-;3279:3;3308:54;3356:5;3308:54;:::i;:::-;3378:86;3457:6;3452:3;3378:86;:::i;:::-;3371:93;;3488:56;3538:5;3488:56;:::i;:::-;3567:7;3598:1;3583:284;3608:6;3605:1;3602:13;3583:284;;;3684:6;3678:13;3711:63;3770:3;3755:13;3711:63;:::i;:::-;3704:70;;3797:60;3850:6;3797:60;:::i;:::-;3787:70;;3643:224;3630:1;3627;3623:9;3618:14;;3583:284;;;3587:14;3883:3;3876:10;;3284:608;;;3160:732;;;;:::o;3898:118::-;3985:24;4003:5;3985:24;:::i;:::-;3980:3;3973:37;3898:118;;:::o;4022:115::-;4107:23;4124:5;4107:23;:::i;:::-;4102:3;4095:36;4022:115;;:::o;4143:108::-;4220:24;4238:5;4220:24;:::i;:::-;4215:3;4208:37;4143:108;;:::o;4257:118::-;4344:24;4362:5;4344:24;:::i;:::-;4339:3;4332:37;4257:118;;:::o;4381:115::-;4466:23;4483:5;4466:23;:::i;:::-;4461:3;4454:36;4381:115;;:::o;4502:::-;4587:23;4604:5;4587:23;:::i;:::-;4582:3;4575:36;4502:115;;:::o;4623:332::-;4744:4;4782:2;4771:9;4767:18;4759:26;;4795:71;4863:1;4852:9;4848:17;4839:6;4795:71;:::i;:::-;4876:72;4944:2;4933:9;4929:18;4920:6;4876:72;:::i;:::-;4623:332;;;;;:::o;4961:373::-;5104:4;5142:2;5131:9;5127:18;5119:26;;5191:9;5185:4;5181:20;5177:1;5166:9;5162:17;5155:47;5219:108;5322:4;5313:6;5219:108;:::i;:::-;5211:116;;4961:373;;;;:::o;5340:648::-;5537:4;5575:3;5564:9;5560:19;5552:27;;5589:71;5657:1;5646:9;5642:17;5633:6;5589:71;:::i;:::-;5670:70;5736:2;5725:9;5721:18;5712:6;5670:70;:::i;:::-;5750;5816:2;5805:9;5801:18;5792:6;5750:70;:::i;:::-;5830;5896:2;5885:9;5881:18;5872:6;5830:70;:::i;:::-;5910:71;5976:3;5965:9;5961:19;5952:6;5910:71;:::i;:::-;5340:648;;;;;;;;:::o;5994:222::-;6087:4;6125:2;6114:9;6110:18;6102:26;;6138:71;6206:1;6195:9;6191:17;6182:6;6138:71;:::i;:::-;5994:222;;;;:::o;6222:129::-;6256:6;6283:20;;:::i;:::-;6273:30;;6312:33;6340:4;6332:6;6312:33;:::i;:::-;6222:129;;;:::o;6357:75::-;6390:6;6423:2;6417:9;6407:19;;6357:75;:::o;6438:311::-;6515:4;6605:18;6597:6;6594:30;6591:56;;;6627:18;;:::i;:::-;6591:56;6677:4;6669:6;6665:17;6657:25;;6737:4;6731;6727:15;6719:23;;6438:311;;;:::o;6755:132::-;6822:4;6845:3;6837:11;;6875:4;6870:3;6866:14;6858:22;;6755:132;;;:::o;6893:114::-;6960:6;6994:5;6988:12;6978:22;;6893:114;;;:::o;7013:113::-;7083:4;7115;7110:3;7106:14;7098:22;;7013:113;;;:::o;7132:184::-;7231:11;7265:6;7260:3;7253:19;7305:4;7300:3;7296:14;7281:29;;7132:184;;;;:::o;7322:96::-;7359:7;7388:24;7406:5;7388:24;:::i;:::-;7377:35;;7322:96;;;:::o;7424:77::-;7461:7;7490:5;7479:16;;7424:77;;;:::o;7507:89::-;7543:7;7583:6;7576:5;7572:18;7561:29;;7507:89;;;:::o;7602:126::-;7639:7;7679:42;7672:5;7668:54;7657:65;;7602:126;;;:::o;7734:77::-;7771:7;7800:5;7789:16;;7734:77;;;:::o;7817:93::-;7853:7;7893:10;7886:5;7882:22;7871:33;;7817:93;;;:::o;7916:101::-;7952:7;7992:18;7985:5;7981:30;7970:41;;7916:101;;;:::o;8023:281::-;8106:27;8128:4;8106:27;:::i;:::-;8098:6;8094:40;8236:6;8224:10;8221:22;8200:18;8188:10;8185:34;8182:62;8179:88;;;8247:18;;:::i;:::-;8179:88;8287:10;8283:2;8276:22;8066:238;8023:281;;:::o;8310:180::-;8358:77;8355:1;8348:88;8455:4;8452:1;8445:15;8479:4;8476:1;8469:15;8496:117;8605:1;8602;8595:12;8619:117;8728:1;8725;8718:12;8742:117;8851:1;8848;8841:12;8865:117;8974:1;8971;8964:12;8988:102;9029:6;9080:2;9076:7;9071:2;9064:5;9060:14;9056:28;9046:38;;8988:102;;;:::o;9096:122::-;9169:24;9187:5;9169:24;:::i;:::-;9162:5;9159:35;9149:63;;9208:1;9205;9198:12;9149:63;9096:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"444600","executionCost":"infinite","totalCost":"infinite"},"external":{"rawFulfillRandomWords(uint256,uint256[])":"infinite","requestRandomWords()":"infinite","s_randomWords(uint256)":"infinite","s_requestId()":"2451"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestRandomWords()":"e0c86289","s_randomWords(uint256)":"f6eaffc8","s_requestId()":"e89e106a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"ReturnedRandomness\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_randomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_requestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"keyHash\":\"- the gas lane to use, which specifies the maximum gas price to bump to\",\"subscriptionId\":\"- the subscription ID that this contract uses for funding requests\",\"vrfCoordinator\":\"- coordinator, check https://docs.chain.link/docs/vrf-contracts/#configurations\"}}},\"title\":\"The RandomNumberConsumerV2 contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor inherits VRFConsumerBaseV2\"},\"requestRandomWords()\":{\"notice\":\"Requests randomness Assumes the subscription is funded sufficiently; \\\"Words\\\" refers to unit of data in Computer Science\"}},\"notice\":\"A contract that gets random values from Chainlink VRF V2\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RandomNumberConsumerV2.sol\":\"RandomNumberConsumerV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"contracts/RandomNumberConsumerV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// An example of a consumer contract that relies on a subscription for funding.\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\n\\n/**\\n * @title The RandomNumberConsumerV2 contract\\n * @notice A contract that gets random values from Chainlink VRF V2\\n */\\ncontract RandomNumberConsumerV2 is VRFConsumerBaseV2 {\\n    VRFCoordinatorV2Interface immutable COORDINATOR;\\n\\n    // Your subscription ID.\\n    uint64 immutable s_subscriptionId;\\n\\n    // The gas lane to use, which specifies the maximum gas price to bump to.\\n    // For a list of available gas lanes on each network,\\n    // see https://docs.chain.link/docs/vrf-contracts/#configurations\\n    bytes32 immutable s_keyHash;\\n\\n    // Depends on the number of requested values that you want sent to the\\n    // fulfillRandomWords() function. Storing each word costs about 20,000 gas,\\n    // so 100,000 is a safe default for this example contract. Test and adjust\\n    // this limit based on the network that you select, the size of the request,\\n    // and the processing of the callback request in the fulfillRandomWords()\\n    // function.\\n    uint32 constant CALLBACK_GAS_LIMIT = 100000;\\n\\n    // The default is 3, but you can set this higher.\\n    uint16 constant REQUEST_CONFIRMATIONS = 3;\\n\\n    // For this example, retrieve 2 random values in one request.\\n    // Cannot exceed VRFCoordinatorV2.MAX_NUM_WORDS.\\n    uint32 constant NUM_WORDS = 2;\\n\\n    uint256[] public s_randomWords;\\n    uint256 public s_requestId;\\n    address s_owner;\\n\\n    event ReturnedRandomness(uint256[] randomWords);\\n\\n    /**\\n     * @notice Constructor inherits VRFConsumerBaseV2\\n     *\\n     * @param subscriptionId - the subscription ID that this contract uses for funding requests\\n     * @param vrfCoordinator - coordinator, check https://docs.chain.link/docs/vrf-contracts/#configurations\\n     * @param keyHash - the gas lane to use, which specifies the maximum gas price to bump to\\n     */\\n    constructor(\\n        uint64 subscriptionId,\\n        address vrfCoordinator,\\n        bytes32 keyHash\\n    ) VRFConsumerBaseV2(vrfCoordinator) {\\n        COORDINATOR = VRFCoordinatorV2Interface(vrfCoordinator);\\n        s_keyHash = keyHash;\\n        s_owner = msg.sender;\\n        s_subscriptionId = subscriptionId;\\n    }\\n\\n    /**\\n     * @notice Requests randomness\\n     * Assumes the subscription is funded sufficiently; \\\"Words\\\" refers to unit of data in Computer Science\\n     */\\n    function requestRandomWords() external onlyOwner {\\n        // Will revert if subscription is not set and funded.\\n        s_requestId = COORDINATOR.requestRandomWords(\\n            s_keyHash,\\n            s_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            CALLBACK_GAS_LIMIT,\\n            NUM_WORDS\\n        );\\n    }\\n\\n    /**\\n     * @notice Callback function used by VRF Coordinator\\n     *\\n     * @param requestId - id of the request\\n     * @param randomWords - array of random results from VRF Coordinator\\n     */\\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\\n        s_randomWords = randomWords;\\n        emit ReturnedRandomness(randomWords);\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == s_owner);\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x5cf1874aeacfb3f2e34aa1ed8e579341c4b240f2db8c1b92e2ceef5259f40eae\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3278,"contract":"contracts/RandomNumberConsumerV2.sol:RandomNumberConsumerV2","label":"s_randomWords","offset":0,"slot":"0","type":"t_array(t_uint256)dyn_storage"},{"astId":3280,"contract":"contracts/RandomNumberConsumerV2.sol:RandomNumberConsumerV2","label":"s_requestId","offset":0,"slot":"1","type":"t_uint256"},{"astId":3282,"contract":"contracts/RandomNumberConsumerV2.sol:RandomNumberConsumerV2","label":"s_owner","offset":0,"slot":"2","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructor inherits VRFConsumerBaseV2"},"requestRandomWords()":{"notice":"Requests randomness Assumes the subscription is funded sufficiently; \"Words\" refers to unit of data in Computer Science"}},"notice":"A contract that gets random values from Chainlink VRF V2","version":1}}},"contracts/test/fuzzing/KeepersCounterEchidnaTest.sol":{"KeepersCounterEchidnaTest":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"counter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"echidna_test_perform_upkeep_gate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"interval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3145":{"entryPoint":null,"id":3145,"parameterSlots":1,"returnSlots":0},"@_3384":{"entryPoint":null,"id":3384,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a060405234801561001057600080fd5b50620a8c0080608081815250504260018190555060008081905550506080516106ff61004e600039600081816101bc01526101ff01526106ff6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633f3b3b27146100675780634585e33b1461008557806361bc221a146100a15780636e04ff0d146100bf5780637d1b7ebd146100f0578063947a36fb1461010e575b600080fd5b61006f61012c565b60405161007c9190610462565b60405180910390f35b61009f600480360381019061009a91906102e7565b610132565b005b6100a96101b0565b6040516100b69190610462565b60405180910390f35b6100d960048036038101906100d49190610334565b6101b6565b6040516100e7929190610412565b60405180910390f35b6100f86101f1565b60405161010591906103f7565b60405180910390f35b6101166101fd565b6040516101239190610462565b60405180910390f35b60015481565b600061014c604051806020016040528060008152506101b6565b5090508061018f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018690610442565b60405180910390fd5b4260018190555060016000546101a59190610500565b600081905550505050565b60005481565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426101e99190610556565b119150915091565b60008060005414905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061023461022f846104a2565b61047d565b9050828152602081018484840111156102505761024f610680565b5b61025b8482856105a0565b509392505050565b60008083601f84011261027957610278610676565b5b8235905067ffffffffffffffff81111561029657610295610671565b5b6020830191508360018202830111156102b2576102b161067b565b5b9250929050565b600082601f8301126102ce576102cd610676565b5b81356102de848260208601610221565b91505092915050565b600080602083850312156102fe576102fd61068a565b5b600083013567ffffffffffffffff81111561031c5761031b610685565b5b61032885828601610263565b92509250509250929050565b60006020828403121561034a5761034961068a565b5b600082013567ffffffffffffffff81111561036857610367610685565b5b610374848285016102b9565b91505092915050565b6103868161058a565b82525050565b6000610397826104d3565b6103a181856104de565b93506103b18185602086016105af565b6103ba8161068f565b840191505092915050565b60006103d26015836104ef565b91506103dd826106a0565b602082019050919050565b6103f181610596565b82525050565b600060208201905061040c600083018461037d565b92915050565b6000604082019050610427600083018561037d565b8181036020830152610439818461038c565b90509392505050565b6000602082019050818103600083015261045b816103c5565b9050919050565b600060208201905061047760008301846103e8565b92915050565b6000610487610498565b905061049382826105e2565b919050565b6000604051905090565b600067ffffffffffffffff8211156104bd576104bc610642565b5b6104c68261068f565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061050b82610596565b915061051683610596565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561054b5761054a610613565b5b828201905092915050565b600061056182610596565b915061056c83610596565b92508282101561057f5761057e610613565b5b828203905092915050565b60008115159050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156105cd5780820151818401526020810190506105b2565b838111156105dc576000848401525b50505050565b6105eb8261068f565b810181811067ffffffffffffffff8211171561060a57610609610642565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f54696d6520696e74657276616c206e6f74206d6574000000000000000000000060008201525056fea26469706673582212205cd4d733b183a9ae360c7a7722466b05767a90d5d59a0d6639c32449208b442664736f6c63430008070033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xA8C00 DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0x6FF PUSH2 0x4E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1BC ADD MSTORE PUSH2 0x1FF ADD MSTORE PUSH2 0x6FF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x7D1B7EBD EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP3 SWAP2 SWAP1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1B6 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186 SWAP1 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x556 JUMP JUMPDEST GT SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234 PUSH2 0x22F DUP5 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x250 JUMPI PUSH2 0x24F PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH2 0x25B DUP5 DUP3 DUP6 PUSH2 0x5A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x279 JUMPI PUSH2 0x278 PUSH2 0x676 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x296 JUMPI PUSH2 0x295 PUSH2 0x671 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x2B1 PUSH2 0x67B JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x2CD PUSH2 0x676 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0x68A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31B PUSH2 0x685 JUMP JUMPDEST JUMPDEST PUSH2 0x328 DUP6 DUP3 DUP7 ADD PUSH2 0x263 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A JUMPI PUSH2 0x349 PUSH2 0x68A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x368 JUMPI PUSH2 0x367 PUSH2 0x685 JUMP JUMPDEST JUMPDEST PUSH2 0x374 DUP5 DUP3 DUP6 ADD PUSH2 0x2B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x386 DUP2 PUSH2 0x58A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP3 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x3A1 DUP2 DUP6 PUSH2 0x4DE JUMP JUMPDEST SWAP4 POP PUSH2 0x3B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x3BA DUP2 PUSH2 0x68F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2 PUSH1 0x15 DUP4 PUSH2 0x4EF JUMP JUMPDEST SWAP2 POP PUSH2 0x3DD DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F1 DUP2 PUSH2 0x596 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x427 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x37D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x439 DUP2 DUP5 PUSH2 0x38C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45B DUP2 PUSH2 0x3C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x477 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x487 PUSH2 0x498 JUMP JUMPDEST SWAP1 POP PUSH2 0x493 DUP3 DUP3 PUSH2 0x5E2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH2 0x4C6 DUP3 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50B DUP3 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x516 DUP4 PUSH2 0x596 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54A PUSH2 0x613 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x561 DUP3 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x56C DUP4 PUSH2 0x596 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57E PUSH2 0x613 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5CD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5B2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5EB DUP3 PUSH2 0x68F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x60A JUMPI PUSH2 0x609 PUSH2 0x642 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D6520696E74657276616C206E6F74206D65740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xD4 0xD7 CALLER 0xB1 DUP4 0xA9 0xAE CALLDATASIZE 0xC PUSH27 0x7722466B05767A90D5D59A0D6639C32449208B442664736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"93:213:21:-:0;;;152:39;;;;;;;;;;181:6;856:14:17;845:25;;;;;;896:15;880:13;:31;;;;932:1;922:7;:11;;;;799:141;93:213:21;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkUpkeep_3167":{"entryPoint":438,"id":3167,"parameterSlots":1,"returnSlots":2},"@counter_3120":{"entryPoint":432,"id":3120,"parameterSlots":0,"returnSlots":0},"@echidna_test_perform_upkeep_gate_3394":{"entryPoint":497,"id":3394,"parameterSlots":0,"returnSlots":1},"@interval_3123":{"entryPoint":509,"id":3123,"parameterSlots":0,"returnSlots":0},"@lastTimeStamp_3125":{"entryPoint":300,"id":3125,"parameterSlots":0,"returnSlots":0},"@performUpkeep_3197":{"entryPoint":306,"id":3197,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":545,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":611,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":743,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":820,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":893,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack":{"entryPoint":965,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":1015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1042,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1090,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1122,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1149,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1176,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1186,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1235,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":1246,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1263,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1280,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1366,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1418,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1430,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":1440,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":1455,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1506,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":1555,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1602,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":1649,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1654,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1659,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1664,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1669,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1674,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1679,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4":{"entryPoint":1696,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8477:22","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:22","statements":[{"nodeType":"YulAssignment","src":"100:74:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:22"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:22"},"nodeType":"YulFunctionCall","src":"125:48:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:22"},"nodeType":"YulFunctionCall","src":"109:65:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:22"},"nodeType":"YulFunctionCall","src":"183:21:22"},"nodeType":"YulExpressionStatement","src":"183:21:22"},{"nodeType":"YulVariableDeclaration","src":"213:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:22"},"nodeType":"YulFunctionCall","src":"224:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:22"},"nodeType":"YulFunctionCall","src":"280:79:22"},"nodeType":"YulExpressionStatement","src":"280:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:22"},"nodeType":"YulFunctionCall","src":"255:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:22"},"nodeType":"YulFunctionCall","src":"252:25:22"},"nodeType":"YulIf","src":"249:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:22"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:22"},"nodeType":"YulFunctionCall","src":"370:41:22"},"nodeType":"YulExpressionStatement","src":"370:41:22"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:22","type":""}],"src":"7:410:22"},{"body":{"nodeType":"YulBlock","src":"510:478:22","statements":[{"body":{"nodeType":"YulBlock","src":"559:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"561:77:22"},"nodeType":"YulFunctionCall","src":"561:79:22"},"nodeType":"YulExpressionStatement","src":"561:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"538:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"546:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"534:3:22"},"nodeType":"YulFunctionCall","src":"534:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"553:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"530:3:22"},"nodeType":"YulFunctionCall","src":"530:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"523:6:22"},"nodeType":"YulFunctionCall","src":"523:35:22"},"nodeType":"YulIf","src":"520:122:22"},{"nodeType":"YulAssignment","src":"651:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"674:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"661:12:22"},"nodeType":"YulFunctionCall","src":"661:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"651:6:22"}]},{"body":{"nodeType":"YulBlock","src":"724:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"726:77:22"},"nodeType":"YulFunctionCall","src":"726:79:22"},"nodeType":"YulExpressionStatement","src":"726:79:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"696:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"704:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"693:2:22"},"nodeType":"YulFunctionCall","src":"693:30:22"},"nodeType":"YulIf","src":"690:117:22"},{"nodeType":"YulAssignment","src":"816:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"832:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"840:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"828:3:22"},"nodeType":"YulFunctionCall","src":"828:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"816:8:22"}]},{"body":{"nodeType":"YulBlock","src":"899:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"901:77:22"},"nodeType":"YulFunctionCall","src":"901:79:22"},"nodeType":"YulExpressionStatement","src":"901:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"864:8:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"878:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"886:4:22","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"874:3:22"},"nodeType":"YulFunctionCall","src":"874:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"860:3:22"},"nodeType":"YulFunctionCall","src":"860:32:22"},{"name":"end","nodeType":"YulIdentifier","src":"894:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"857:2:22"},"nodeType":"YulFunctionCall","src":"857:41:22"},"nodeType":"YulIf","src":"854:128:22"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"477:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"485:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"493:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"503:6:22","type":""}],"src":"436:552:22"},{"body":{"nodeType":"YulBlock","src":"1068:277:22","statements":[{"body":{"nodeType":"YulBlock","src":"1117:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1119:77:22"},"nodeType":"YulFunctionCall","src":"1119:79:22"},"nodeType":"YulExpressionStatement","src":"1119:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1096:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1104:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1092:3:22"},"nodeType":"YulFunctionCall","src":"1092:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"1111:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1088:3:22"},"nodeType":"YulFunctionCall","src":"1088:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1081:6:22"},"nodeType":"YulFunctionCall","src":"1081:35:22"},"nodeType":"YulIf","src":"1078:122:22"},{"nodeType":"YulVariableDeclaration","src":"1209:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1236:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1223:12:22"},"nodeType":"YulFunctionCall","src":"1223:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1213:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1252:87:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1312:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1320:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1308:3:22"},"nodeType":"YulFunctionCall","src":"1308:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"1327:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"1335:3:22"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1261:46:22"},"nodeType":"YulFunctionCall","src":"1261:78:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1252:5:22"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1046:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1054:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1062:5:22","type":""}],"src":"1007:338:22"},{"body":{"nodeType":"YulBlock","src":"1436:442:22","statements":[{"body":{"nodeType":"YulBlock","src":"1482:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1484:77:22"},"nodeType":"YulFunctionCall","src":"1484:79:22"},"nodeType":"YulExpressionStatement","src":"1484:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1457:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1466:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1453:3:22"},"nodeType":"YulFunctionCall","src":"1453:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1478:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1449:3:22"},"nodeType":"YulFunctionCall","src":"1449:32:22"},"nodeType":"YulIf","src":"1446:119:22"},{"nodeType":"YulBlock","src":"1575:296:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1590:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1621:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1632:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1617:3:22"},"nodeType":"YulFunctionCall","src":"1617:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1604:12:22"},"nodeType":"YulFunctionCall","src":"1604:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1594:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1684:77:22"},"nodeType":"YulFunctionCall","src":"1684:79:22"},"nodeType":"YulExpressionStatement","src":"1684:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1654:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1662:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1651:2:22"},"nodeType":"YulFunctionCall","src":"1651:30:22"},"nodeType":"YulIf","src":"1648:117:22"},{"nodeType":"YulAssignment","src":"1779:82:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1833:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1844:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1829:3:22"},"nodeType":"YulFunctionCall","src":"1829:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1853:7:22"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"1797:31:22"},"nodeType":"YulFunctionCall","src":"1797:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1779:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"1787:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1398:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1409:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1421:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1429:6:22","type":""}],"src":"1351:527:22"},{"body":{"nodeType":"YulBlock","src":"1959:432:22","statements":[{"body":{"nodeType":"YulBlock","src":"2005:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2007:77:22"},"nodeType":"YulFunctionCall","src":"2007:79:22"},"nodeType":"YulExpressionStatement","src":"2007:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1980:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1989:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1976:3:22"},"nodeType":"YulFunctionCall","src":"1976:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2001:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1972:3:22"},"nodeType":"YulFunctionCall","src":"1972:32:22"},"nodeType":"YulIf","src":"1969:119:22"},{"nodeType":"YulBlock","src":"2098:286:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2113:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2144:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2155:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2140:3:22"},"nodeType":"YulFunctionCall","src":"2140:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2127:12:22"},"nodeType":"YulFunctionCall","src":"2127:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2117:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2205:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2207:77:22"},"nodeType":"YulFunctionCall","src":"2207:79:22"},"nodeType":"YulExpressionStatement","src":"2207:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2177:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2185:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2174:2:22"},"nodeType":"YulFunctionCall","src":"2174:30:22"},"nodeType":"YulIf","src":"2171:117:22"},{"nodeType":"YulAssignment","src":"2302:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2346:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2357:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2342:3:22"},"nodeType":"YulFunctionCall","src":"2342:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2366:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2312:29:22"},"nodeType":"YulFunctionCall","src":"2312:62:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2302:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1929:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1940:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1952:6:22","type":""}],"src":"1884:507:22"},{"body":{"nodeType":"YulBlock","src":"2456:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2473:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2493:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2478:14:22"},"nodeType":"YulFunctionCall","src":"2478:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2466:6:22"},"nodeType":"YulFunctionCall","src":"2466:34:22"},"nodeType":"YulExpressionStatement","src":"2466:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2444:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2451:3:22","type":""}],"src":"2397:109:22"},{"body":{"nodeType":"YulBlock","src":"2602:270:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2612:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2658:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2626:31:22"},"nodeType":"YulFunctionCall","src":"2626:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2616:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2673:77:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2738:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2743:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2680:57:22"},"nodeType":"YulFunctionCall","src":"2680:70:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2673:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2785:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2792:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2781:3:22"},"nodeType":"YulFunctionCall","src":"2781:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"2799:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2804:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2759:21:22"},"nodeType":"YulFunctionCall","src":"2759:52:22"},"nodeType":"YulExpressionStatement","src":"2759:52:22"},{"nodeType":"YulAssignment","src":"2820:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2831:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2858:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2836:21:22"},"nodeType":"YulFunctionCall","src":"2836:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2827:3:22"},"nodeType":"YulFunctionCall","src":"2827:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2820:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2583:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2590:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2598:3:22","type":""}],"src":"2512:360:22"},{"body":{"nodeType":"YulBlock","src":"3024:220:22","statements":[{"nodeType":"YulAssignment","src":"3034:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3100:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3105:2:22","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3041:58:22"},"nodeType":"YulFunctionCall","src":"3041:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3034:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3206:3:22"}],"functionName":{"name":"store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4","nodeType":"YulIdentifier","src":"3117:88:22"},"nodeType":"YulFunctionCall","src":"3117:93:22"},"nodeType":"YulExpressionStatement","src":"3117:93:22"},{"nodeType":"YulAssignment","src":"3219:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3230:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3235:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3226:3:22"},"nodeType":"YulFunctionCall","src":"3226:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3219:3:22"}]}]},"name":"abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3012:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3020:3:22","type":""}],"src":"2878:366:22"},{"body":{"nodeType":"YulBlock","src":"3315:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3332:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3355:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3337:17:22"},"nodeType":"YulFunctionCall","src":"3337:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3325:6:22"},"nodeType":"YulFunctionCall","src":"3325:37:22"},"nodeType":"YulExpressionStatement","src":"3325:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3303:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3310:3:22","type":""}],"src":"3250:118:22"},{"body":{"nodeType":"YulBlock","src":"3466:118:22","statements":[{"nodeType":"YulAssignment","src":"3476:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3488:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3499:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3484:3:22"},"nodeType":"YulFunctionCall","src":"3484:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3476:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3550:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3563:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3574:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3559:3:22"},"nodeType":"YulFunctionCall","src":"3559:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3512:37:22"},"nodeType":"YulFunctionCall","src":"3512:65:22"},"nodeType":"YulExpressionStatement","src":"3512:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3438:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3450:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3461:4:22","type":""}],"src":"3374:210:22"},{"body":{"nodeType":"YulBlock","src":"3728:269:22","statements":[{"nodeType":"YulAssignment","src":"3738:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3750:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3761:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3746:3:22"},"nodeType":"YulFunctionCall","src":"3746:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3738:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3812:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3825:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3836:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3821:3:22"},"nodeType":"YulFunctionCall","src":"3821:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3774:37:22"},"nodeType":"YulFunctionCall","src":"3774:65:22"},"nodeType":"YulExpressionStatement","src":"3774:65:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3860:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3871:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3856:3:22"},"nodeType":"YulFunctionCall","src":"3856:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3880:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3886:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3876:3:22"},"nodeType":"YulFunctionCall","src":"3876:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3849:6:22"},"nodeType":"YulFunctionCall","src":"3849:48:22"},"nodeType":"YulExpressionStatement","src":"3849:48:22"},{"nodeType":"YulAssignment","src":"3906:84:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3976:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"3985:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3914:61:22"},"nodeType":"YulFunctionCall","src":"3914:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3906:4:22"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3692:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3704:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3712:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3723:4:22","type":""}],"src":"3590:407:22"},{"body":{"nodeType":"YulBlock","src":"4174:248:22","statements":[{"nodeType":"YulAssignment","src":"4184:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4196:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4207:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4192:3:22"},"nodeType":"YulFunctionCall","src":"4192:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4184:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4231:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4242:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4227:3:22"},"nodeType":"YulFunctionCall","src":"4227:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4250:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4256:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4246:3:22"},"nodeType":"YulFunctionCall","src":"4246:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4220:6:22"},"nodeType":"YulFunctionCall","src":"4220:47:22"},"nodeType":"YulExpressionStatement","src":"4220:47:22"},{"nodeType":"YulAssignment","src":"4276:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4410:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4284:124:22"},"nodeType":"YulFunctionCall","src":"4284:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4276:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4154:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4169:4:22","type":""}],"src":"4003:419:22"},{"body":{"nodeType":"YulBlock","src":"4526:124:22","statements":[{"nodeType":"YulAssignment","src":"4536:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4548:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4559:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4544:3:22"},"nodeType":"YulFunctionCall","src":"4544:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4536:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4616:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4629:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4640:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4625:3:22"},"nodeType":"YulFunctionCall","src":"4625:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4572:43:22"},"nodeType":"YulFunctionCall","src":"4572:71:22"},"nodeType":"YulExpressionStatement","src":"4572:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4498:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4510:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4521:4:22","type":""}],"src":"4428:222:22"},{"body":{"nodeType":"YulBlock","src":"4697:88:22","statements":[{"nodeType":"YulAssignment","src":"4707:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4717:18:22"},"nodeType":"YulFunctionCall","src":"4717:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4707:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4766:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"4774:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4746:19:22"},"nodeType":"YulFunctionCall","src":"4746:33:22"},"nodeType":"YulExpressionStatement","src":"4746:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4681:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4690:6:22","type":""}],"src":"4656:129:22"},{"body":{"nodeType":"YulBlock","src":"4831:35:22","statements":[{"nodeType":"YulAssignment","src":"4841:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4857:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4851:5:22"},"nodeType":"YulFunctionCall","src":"4851:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4841:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4824:6:22","type":""}],"src":"4791:75:22"},{"body":{"nodeType":"YulBlock","src":"4938:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"5043:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5045:16:22"},"nodeType":"YulFunctionCall","src":"5045:18:22"},"nodeType":"YulExpressionStatement","src":"5045:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5015:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5023:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5012:2:22"},"nodeType":"YulFunctionCall","src":"5012:30:22"},"nodeType":"YulIf","src":"5009:56:22"},{"nodeType":"YulAssignment","src":"5075:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5105:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5083:21:22"},"nodeType":"YulFunctionCall","src":"5083:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5075:4:22"}]},{"nodeType":"YulAssignment","src":"5149:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5161:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"5167:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5157:3:22"},"nodeType":"YulFunctionCall","src":"5157:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5149:4:22"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4922:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4933:4:22","type":""}],"src":"4872:307:22"},{"body":{"nodeType":"YulBlock","src":"5243:40:22","statements":[{"nodeType":"YulAssignment","src":"5254:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5270:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5264:5:22"},"nodeType":"YulFunctionCall","src":"5264:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5254:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5226:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5236:6:22","type":""}],"src":"5185:98:22"},{"body":{"nodeType":"YulBlock","src":"5384:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5401:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5406:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5394:6:22"},"nodeType":"YulFunctionCall","src":"5394:19:22"},"nodeType":"YulExpressionStatement","src":"5394:19:22"},{"nodeType":"YulAssignment","src":"5422:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5441:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"5446:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5437:3:22"},"nodeType":"YulFunctionCall","src":"5437:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5422:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5356:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"5361:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5372:11:22","type":""}],"src":"5289:168:22"},{"body":{"nodeType":"YulBlock","src":"5559:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5576:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5581:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5569:6:22"},"nodeType":"YulFunctionCall","src":"5569:19:22"},"nodeType":"YulExpressionStatement","src":"5569:19:22"},{"nodeType":"YulAssignment","src":"5597:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5616:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"5621:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5612:3:22"},"nodeType":"YulFunctionCall","src":"5612:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5597:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5531:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"5536:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5547:11:22","type":""}],"src":"5463:169:22"},{"body":{"nodeType":"YulBlock","src":"5682:261:22","statements":[{"nodeType":"YulAssignment","src":"5692:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5715:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5697:17:22"},"nodeType":"YulFunctionCall","src":"5697:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5692:1:22"}]},{"nodeType":"YulAssignment","src":"5726:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5749:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5731:17:22"},"nodeType":"YulFunctionCall","src":"5731:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5726:1:22"}]},{"body":{"nodeType":"YulBlock","src":"5889:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5891:16:22"},"nodeType":"YulFunctionCall","src":"5891:18:22"},"nodeType":"YulExpressionStatement","src":"5891:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5810:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5817:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"5885:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5813:3:22"},"nodeType":"YulFunctionCall","src":"5813:74:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5807:2:22"},"nodeType":"YulFunctionCall","src":"5807:81:22"},"nodeType":"YulIf","src":"5804:107:22"},{"nodeType":"YulAssignment","src":"5921:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5932:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"5935:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5928:3:22"},"nodeType":"YulFunctionCall","src":"5928:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5921:3:22"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5669:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"5672:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5678:3:22","type":""}],"src":"5638:305:22"},{"body":{"nodeType":"YulBlock","src":"5994:146:22","statements":[{"nodeType":"YulAssignment","src":"6004:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6027:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6009:17:22"},"nodeType":"YulFunctionCall","src":"6009:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6004:1:22"}]},{"nodeType":"YulAssignment","src":"6038:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6061:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6043:17:22"},"nodeType":"YulFunctionCall","src":"6043:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6038:1:22"}]},{"body":{"nodeType":"YulBlock","src":"6085:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6087:16:22"},"nodeType":"YulFunctionCall","src":"6087:18:22"},"nodeType":"YulExpressionStatement","src":"6087:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6079:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"6082:1:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6076:2:22"},"nodeType":"YulFunctionCall","src":"6076:8:22"},"nodeType":"YulIf","src":"6073:34:22"},{"nodeType":"YulAssignment","src":"6117:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6129:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"6132:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6125:3:22"},"nodeType":"YulFunctionCall","src":"6125:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6117:4:22"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5980:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"5983:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5989:4:22","type":""}],"src":"5949:191:22"},{"body":{"nodeType":"YulBlock","src":"6188:48:22","statements":[{"nodeType":"YulAssignment","src":"6198:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6223:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6216:6:22"},"nodeType":"YulFunctionCall","src":"6216:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6209:6:22"},"nodeType":"YulFunctionCall","src":"6209:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6198:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6170:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6180:7:22","type":""}],"src":"6146:90:22"},{"body":{"nodeType":"YulBlock","src":"6287:32:22","statements":[{"nodeType":"YulAssignment","src":"6297:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"6308:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6297:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6269:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6279:7:22","type":""}],"src":"6242:77:22"},{"body":{"nodeType":"YulBlock","src":"6376:103:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6399:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"6404:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6409:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6386:12:22"},"nodeType":"YulFunctionCall","src":"6386:30:22"},"nodeType":"YulExpressionStatement","src":"6386:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6457:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6462:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6453:3:22"},"nodeType":"YulFunctionCall","src":"6453:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"6471:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6446:6:22"},"nodeType":"YulFunctionCall","src":"6446:27:22"},"nodeType":"YulExpressionStatement","src":"6446:27:22"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6358:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6363:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"6368:6:22","type":""}],"src":"6325:154:22"},{"body":{"nodeType":"YulBlock","src":"6534:258:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6544:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6553:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6548:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6613:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6638:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"6643:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6634:3:22"},"nodeType":"YulFunctionCall","src":"6634:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6657:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"6662:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6653:3:22"},"nodeType":"YulFunctionCall","src":"6653:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6647:5:22"},"nodeType":"YulFunctionCall","src":"6647:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6627:6:22"},"nodeType":"YulFunctionCall","src":"6627:39:22"},"nodeType":"YulExpressionStatement","src":"6627:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6574:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"6577:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6571:2:22"},"nodeType":"YulFunctionCall","src":"6571:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6585:19:22","statements":[{"nodeType":"YulAssignment","src":"6587:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6596:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"6599:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6592:3:22"},"nodeType":"YulFunctionCall","src":"6592:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6587:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"6567:3:22","statements":[]},"src":"6563:113:22"},{"body":{"nodeType":"YulBlock","src":"6710:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6760:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6765:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6756:3:22"},"nodeType":"YulFunctionCall","src":"6756:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"6774:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6749:6:22"},"nodeType":"YulFunctionCall","src":"6749:27:22"},"nodeType":"YulExpressionStatement","src":"6749:27:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6691:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"6694:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6688:2:22"},"nodeType":"YulFunctionCall","src":"6688:13:22"},"nodeType":"YulIf","src":"6685:101:22"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6516:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6521:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"6526:6:22","type":""}],"src":"6485:307:22"},{"body":{"nodeType":"YulBlock","src":"6841:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6851:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6873:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6903:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6881:21:22"},"nodeType":"YulFunctionCall","src":"6881:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6869:3:22"},"nodeType":"YulFunctionCall","src":"6869:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6855:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7020:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7022:16:22"},"nodeType":"YulFunctionCall","src":"7022:18:22"},"nodeType":"YulExpressionStatement","src":"7022:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6963:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"6975:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6960:2:22"},"nodeType":"YulFunctionCall","src":"6960:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6999:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7011:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6996:2:22"},"nodeType":"YulFunctionCall","src":"6996:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6957:2:22"},"nodeType":"YulFunctionCall","src":"6957:62:22"},"nodeType":"YulIf","src":"6954:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7058:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7062:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7051:6:22"},"nodeType":"YulFunctionCall","src":"7051:22:22"},"nodeType":"YulExpressionStatement","src":"7051:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6827:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"6835:4:22","type":""}],"src":"6798:281:22"},{"body":{"nodeType":"YulBlock","src":"7113:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7130:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7133:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7123:6:22"},"nodeType":"YulFunctionCall","src":"7123:88:22"},"nodeType":"YulExpressionStatement","src":"7123:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7227:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7230:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7220:6:22"},"nodeType":"YulFunctionCall","src":"7220:15:22"},"nodeType":"YulExpressionStatement","src":"7220:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7251:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7254:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7244:6:22"},"nodeType":"YulFunctionCall","src":"7244:15:22"},"nodeType":"YulExpressionStatement","src":"7244:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7085:180:22"},{"body":{"nodeType":"YulBlock","src":"7299:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7316:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7319:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7309:6:22"},"nodeType":"YulFunctionCall","src":"7309:88:22"},"nodeType":"YulExpressionStatement","src":"7309:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7413:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7416:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7406:6:22"},"nodeType":"YulFunctionCall","src":"7406:15:22"},"nodeType":"YulExpressionStatement","src":"7406:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7437:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7440:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7430:6:22"},"nodeType":"YulFunctionCall","src":"7430:15:22"},"nodeType":"YulExpressionStatement","src":"7430:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7271:180:22"},{"body":{"nodeType":"YulBlock","src":"7546:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7563:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7566:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7556:6:22"},"nodeType":"YulFunctionCall","src":"7556:12:22"},"nodeType":"YulExpressionStatement","src":"7556:12:22"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"7457:117:22"},{"body":{"nodeType":"YulBlock","src":"7669:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7686:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7689:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7679:6:22"},"nodeType":"YulFunctionCall","src":"7679:12:22"},"nodeType":"YulExpressionStatement","src":"7679:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7580:117:22"},{"body":{"nodeType":"YulBlock","src":"7792:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7809:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7812:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7802:6:22"},"nodeType":"YulFunctionCall","src":"7802:12:22"},"nodeType":"YulExpressionStatement","src":"7802:12:22"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7703:117:22"},{"body":{"nodeType":"YulBlock","src":"7915:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7932:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7935:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7925:6:22"},"nodeType":"YulFunctionCall","src":"7925:12:22"},"nodeType":"YulExpressionStatement","src":"7925:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7826:117:22"},{"body":{"nodeType":"YulBlock","src":"8038:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8055:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8058:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8048:6:22"},"nodeType":"YulFunctionCall","src":"8048:12:22"},"nodeType":"YulExpressionStatement","src":"8048:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"7949:117:22"},{"body":{"nodeType":"YulBlock","src":"8161:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8178:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8181:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8171:6:22"},"nodeType":"YulFunctionCall","src":"8171:12:22"},"nodeType":"YulExpressionStatement","src":"8171:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"8072:117:22"},{"body":{"nodeType":"YulBlock","src":"8243:54:22","statements":[{"nodeType":"YulAssignment","src":"8253:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8271:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"8278:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8267:3:22"},"nodeType":"YulFunctionCall","src":"8267:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8287:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8283:3:22"},"nodeType":"YulFunctionCall","src":"8283:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8263:3:22"},"nodeType":"YulFunctionCall","src":"8263:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8253:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8226:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8236:6:22","type":""}],"src":"8195:102:22"},{"body":{"nodeType":"YulBlock","src":"8409:65:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8431:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8439:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:22"},"nodeType":"YulFunctionCall","src":"8427:14:22"},{"hexValue":"54696d6520696e74657276616c206e6f74206d6574","kind":"string","nodeType":"YulLiteral","src":"8443:23:22","type":"","value":"Time interval not met"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8420:6:22"},"nodeType":"YulFunctionCall","src":"8420:47:22"},"nodeType":"YulExpressionStatement","src":"8420:47:22"}]},"name":"store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8401:6:22","type":""}],"src":"8303:171:22"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_9691625a4472b919cd74f439acf082863d1736c3c84eca30d528853ac95bc0b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Time interval not met\")\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3123":[{"length":32,"start":444},{"length":32,"start":511}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c80633f3b3b27146100675780634585e33b1461008557806361bc221a146100a15780636e04ff0d146100bf5780637d1b7ebd146100f0578063947a36fb1461010e575b600080fd5b61006f61012c565b60405161007c9190610462565b60405180910390f35b61009f600480360381019061009a91906102e7565b610132565b005b6100a96101b0565b6040516100b69190610462565b60405180910390f35b6100d960048036038101906100d49190610334565b6101b6565b6040516100e7929190610412565b60405180910390f35b6100f86101f1565b60405161010591906103f7565b60405180910390f35b6101166101fd565b6040516101239190610462565b60405180910390f35b60015481565b600061014c604051806020016040528060008152506101b6565b5090508061018f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018690610442565b60405180910390fd5b4260018190555060016000546101a59190610500565b600081905550505050565b60005481565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426101e99190610556565b119150915091565b60008060005414905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061023461022f846104a2565b61047d565b9050828152602081018484840111156102505761024f610680565b5b61025b8482856105a0565b509392505050565b60008083601f84011261027957610278610676565b5b8235905067ffffffffffffffff81111561029657610295610671565b5b6020830191508360018202830111156102b2576102b161067b565b5b9250929050565b600082601f8301126102ce576102cd610676565b5b81356102de848260208601610221565b91505092915050565b600080602083850312156102fe576102fd61068a565b5b600083013567ffffffffffffffff81111561031c5761031b610685565b5b61032885828601610263565b92509250509250929050565b60006020828403121561034a5761034961068a565b5b600082013567ffffffffffffffff81111561036857610367610685565b5b610374848285016102b9565b91505092915050565b6103868161058a565b82525050565b6000610397826104d3565b6103a181856104de565b93506103b18185602086016105af565b6103ba8161068f565b840191505092915050565b60006103d26015836104ef565b91506103dd826106a0565b602082019050919050565b6103f181610596565b82525050565b600060208201905061040c600083018461037d565b92915050565b6000604082019050610427600083018561037d565b8181036020830152610439818461038c565b90509392505050565b6000602082019050818103600083015261045b816103c5565b9050919050565b600060208201905061047760008301846103e8565b92915050565b6000610487610498565b905061049382826105e2565b919050565b6000604051905090565b600067ffffffffffffffff8211156104bd576104bc610642565b5b6104c68261068f565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061050b82610596565b915061051683610596565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561054b5761054a610613565b5b828201905092915050565b600061056182610596565b915061056c83610596565b92508282101561057f5761057e610613565b5b828203905092915050565b60008115159050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156105cd5780820151818401526020810190506105b2565b838111156105dc576000848401525b50505050565b6105eb8261068f565b810181811067ffffffffffffffff8211171561060a57610609610642565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f54696d6520696e74657276616c206e6f74206d6574000000000000000000000060008201525056fea26469706673582212205cd4d733b183a9ae360c7a7722466b05767a90d5d59a0d6639c32449208b442664736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x7D1B7EBD EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP3 SWAP2 SWAP1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1B6 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186 SWAP1 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x556 JUMP JUMPDEST GT SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234 PUSH2 0x22F DUP5 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x250 JUMPI PUSH2 0x24F PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH2 0x25B DUP5 DUP3 DUP6 PUSH2 0x5A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x279 JUMPI PUSH2 0x278 PUSH2 0x676 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x296 JUMPI PUSH2 0x295 PUSH2 0x671 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x2B1 PUSH2 0x67B JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x2CD PUSH2 0x676 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0x68A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31B PUSH2 0x685 JUMP JUMPDEST JUMPDEST PUSH2 0x328 DUP6 DUP3 DUP7 ADD PUSH2 0x263 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A JUMPI PUSH2 0x349 PUSH2 0x68A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x368 JUMPI PUSH2 0x367 PUSH2 0x685 JUMP JUMPDEST JUMPDEST PUSH2 0x374 DUP5 DUP3 DUP6 ADD PUSH2 0x2B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x386 DUP2 PUSH2 0x58A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP3 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x3A1 DUP2 DUP6 PUSH2 0x4DE JUMP JUMPDEST SWAP4 POP PUSH2 0x3B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x3BA DUP2 PUSH2 0x68F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2 PUSH1 0x15 DUP4 PUSH2 0x4EF JUMP JUMPDEST SWAP2 POP PUSH2 0x3DD DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F1 DUP2 PUSH2 0x596 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x427 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x37D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x439 DUP2 DUP5 PUSH2 0x38C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45B DUP2 PUSH2 0x3C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x477 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x487 PUSH2 0x498 JUMP JUMPDEST SWAP1 POP PUSH2 0x493 DUP3 DUP3 PUSH2 0x5E2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH2 0x4C6 DUP3 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50B DUP3 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x516 DUP4 PUSH2 0x596 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54A PUSH2 0x613 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x561 DUP3 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x56C DUP4 PUSH2 0x596 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57E PUSH2 0x613 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5CD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5B2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5EB DUP3 PUSH2 0x68F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x60A JUMPI PUSH2 0x609 PUSH2 0x642 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D6520696E74657276616C206E6F74206D65740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xD4 0xD7 CALLER 0xB1 DUP4 0xA9 0xAE CALLDATASIZE 0xC PUSH27 0x7722466B05767A90D5D59A0D6639C32449208B442664736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"93:213:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:28:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1534:443;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;382:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1025:404;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;197:107:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;505:33:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;544:28;;;;:::o;1534:443::-;1667:17;1690:15;;;;;;;;;;;;;:11;:15::i;:::-;1666:39;;;1723:12;1715:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1788:15;1772:13;:31;;;;1833:1;1823:7;;:11;;;;:::i;:::-;1813:7;:21;;;;1623:354;1534:443;;:::o;382:22::-;;;;:::o;1025:404::-;1165:17;1196:12;1302:8;1285:13;;1267:15;:31;;;;:::i;:::-;1266:44;1251:59;;1025:404;;;:::o;197:107:21:-;262:4;296:1;285:7;;:12;278:19;;197:107;:::o;505:33:17:-;;;:::o;7:410:22:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;436:552::-;493:8;503:6;553:3;546:4;538:6;534:17;530:27;520:122;;561:79;;:::i;:::-;520:122;674:6;661:20;651:30;;704:18;696:6;693:30;690:117;;;726:79;;:::i;:::-;690:117;840:4;832:6;828:17;816:29;;894:3;886:4;878:6;874:17;864:8;860:32;857:41;854:128;;;901:79;;:::i;:::-;854:128;436:552;;;;;:::o;1007:338::-;1062:5;1111:3;1104:4;1096:6;1092:17;1088:27;1078:122;;1119:79;;:::i;:::-;1078:122;1236:6;1223:20;1261:78;1335:3;1327:6;1320:4;1312:6;1308:17;1261:78;:::i;:::-;1252:87;;1068:277;1007:338;;;;:::o;1351:527::-;1421:6;1429;1478:2;1466:9;1457:7;1453:23;1449:32;1446:119;;;1484:79;;:::i;:::-;1446:119;1632:1;1621:9;1617:17;1604:31;1662:18;1654:6;1651:30;1648:117;;;1684:79;;:::i;:::-;1648:117;1797:64;1853:7;1844:6;1833:9;1829:22;1797:64;:::i;:::-;1779:82;;;;1575:296;1351:527;;;;;:::o;1884:507::-;1952:6;2001:2;1989:9;1980:7;1976:23;1972:32;1969:119;;;2007:79;;:::i;:::-;1969:119;2155:1;2144:9;2140:17;2127:31;2185:18;2177:6;2174:30;2171:117;;;2207:79;;:::i;:::-;2171:117;2312:62;2366:7;2357:6;2346:9;2342:22;2312:62;:::i;:::-;2302:72;;2098:286;1884:507;;;;:::o;2397:109::-;2478:21;2493:5;2478:21;:::i;:::-;2473:3;2466:34;2397:109;;:::o;2512:360::-;2598:3;2626:38;2658:5;2626:38;:::i;:::-;2680:70;2743:6;2738:3;2680:70;:::i;:::-;2673:77;;2759:52;2804:6;2799:3;2792:4;2785:5;2781:16;2759:52;:::i;:::-;2836:29;2858:6;2836:29;:::i;:::-;2831:3;2827:39;2820:46;;2602:270;2512:360;;;;:::o;2878:366::-;3020:3;3041:67;3105:2;3100:3;3041:67;:::i;:::-;3034:74;;3117:93;3206:3;3117:93;:::i;:::-;3235:2;3230:3;3226:12;3219:19;;2878:366;;;:::o;3250:118::-;3337:24;3355:5;3337:24;:::i;:::-;3332:3;3325:37;3250:118;;:::o;3374:210::-;3461:4;3499:2;3488:9;3484:18;3476:26;;3512:65;3574:1;3563:9;3559:17;3550:6;3512:65;:::i;:::-;3374:210;;;;:::o;3590:407::-;3723:4;3761:2;3750:9;3746:18;3738:26;;3774:65;3836:1;3825:9;3821:17;3812:6;3774:65;:::i;:::-;3886:9;3880:4;3876:20;3871:2;3860:9;3856:18;3849:48;3914:76;3985:4;3976:6;3914:76;:::i;:::-;3906:84;;3590:407;;;;;:::o;4003:419::-;4169:4;4207:2;4196:9;4192:18;4184:26;;4256:9;4250:4;4246:20;4242:1;4231:9;4227:17;4220:47;4284:131;4410:4;4284:131;:::i;:::-;4276:139;;4003:419;;;:::o;4428:222::-;4521:4;4559:2;4548:9;4544:18;4536:26;;4572:71;4640:1;4629:9;4625:17;4616:6;4572:71;:::i;:::-;4428:222;;;;:::o;4656:129::-;4690:6;4717:20;;:::i;:::-;4707:30;;4746:33;4774:4;4766:6;4746:33;:::i;:::-;4656:129;;;:::o;4791:75::-;4824:6;4857:2;4851:9;4841:19;;4791:75;:::o;4872:307::-;4933:4;5023:18;5015:6;5012:30;5009:56;;;5045:18;;:::i;:::-;5009:56;5083:29;5105:6;5083:29;:::i;:::-;5075:37;;5167:4;5161;5157:15;5149:23;;4872:307;;;:::o;5185:98::-;5236:6;5270:5;5264:12;5254:22;;5185:98;;;:::o;5289:168::-;5372:11;5406:6;5401:3;5394:19;5446:4;5441:3;5437:14;5422:29;;5289:168;;;;:::o;5463:169::-;5547:11;5581:6;5576:3;5569:19;5621:4;5616:3;5612:14;5597:29;;5463:169;;;;:::o;5638:305::-;5678:3;5697:20;5715:1;5697:20;:::i;:::-;5692:25;;5731:20;5749:1;5731:20;:::i;:::-;5726:25;;5885:1;5817:66;5813:74;5810:1;5807:81;5804:107;;;5891:18;;:::i;:::-;5804:107;5935:1;5932;5928:9;5921:16;;5638:305;;;;:::o;5949:191::-;5989:4;6009:20;6027:1;6009:20;:::i;:::-;6004:25;;6043:20;6061:1;6043:20;:::i;:::-;6038:25;;6082:1;6079;6076:8;6073:34;;;6087:18;;:::i;:::-;6073:34;6132:1;6129;6125:9;6117:17;;5949:191;;;;:::o;6146:90::-;6180:7;6223:5;6216:13;6209:21;6198:32;;6146:90;;;:::o;6242:77::-;6279:7;6308:5;6297:16;;6242:77;;;:::o;6325:154::-;6409:6;6404:3;6399;6386:30;6471:1;6462:6;6457:3;6453:16;6446:27;6325:154;;;:::o;6485:307::-;6553:1;6563:113;6577:6;6574:1;6571:13;6563:113;;;6662:1;6657:3;6653:11;6647:18;6643:1;6638:3;6634:11;6627:39;6599:2;6596:1;6592:10;6587:15;;6563:113;;;6694:6;6691:1;6688:13;6685:101;;;6774:1;6765:6;6760:3;6756:16;6749:27;6685:101;6534:258;6485:307;;;:::o;6798:281::-;6881:27;6903:4;6881:27;:::i;:::-;6873:6;6869:40;7011:6;6999:10;6996:22;6975:18;6963:10;6960:34;6957:62;6954:88;;;7022:18;;:::i;:::-;6954:88;7062:10;7058:2;7051:22;6841:238;6798:281;;:::o;7085:180::-;7133:77;7130:1;7123:88;7230:4;7227:1;7220:15;7254:4;7251:1;7244:15;7271:180;7319:77;7316:1;7309:88;7416:4;7413:1;7406:15;7440:4;7437:1;7430:15;7457:117;7566:1;7563;7556:12;7580:117;7689:1;7686;7679:12;7703:117;7812:1;7809;7802:12;7826:117;7935:1;7932;7925:12;7949:117;8058:1;8055;8048:12;8072:117;8181:1;8178;8171:12;8195:102;8236:6;8287:2;8283:7;8278:2;8271:5;8267:14;8263:28;8253:38;;8195:102;;;:::o;8303:171::-;8443:23;8439:1;8431:6;8427:14;8420:47;8303:171;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"358200","executionCost":"infinite","totalCost":"infinite"},"external":{"checkUpkeep(bytes)":"infinite","counter()":"2451","echidna_test_perform_upkeep_gate()":"2515","interval()":"infinite","lastTimeStamp()":"2407","performUpkeep(bytes)":"infinite"}},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","counter()":"61bc221a","echidna_test_perform_upkeep_gate()":"7d1b7ebd","interval()":"947a36fb","lastTimeStamp()":"3f3b3b27","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"echidna_test_perform_upkeep_gate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"Checks if the contract requires work to be done\"},\"counter()\":{\"notice\":\"Public counter variable\"},\"interval()\":{\"notice\":\"Use an interval in seconds and a timestamp to slow execution of Upkeep\"},\"performUpkeep(bytes)\":{\"notice\":\"Performs the work on the contract, if instructed by :checkUpkeep():\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/fuzzing/KeepersCounterEchidnaTest.sol\":\"KeepersCounterEchidnaTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"},\"contracts/KeepersCounter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\n\\n/**\\n * @title The Counter contract\\n * @notice  A keeper-compatible contract that increments counter variable at fixed time intervals\\n */\\ncontract KeepersCounter is KeeperCompatibleInterface {\\n    /**\\n     * Public counter variable\\n     */\\n    uint256 public counter;\\n\\n    /**\\n     * Use an interval in seconds and a timestamp to slow execution of Upkeep\\n     */\\n    uint256 public immutable interval;\\n    uint256 public lastTimeStamp;\\n\\n    /**\\n     * @notice Executes once when a contract is created to initialize state variables\\n     *\\n     * @param updateInterval - Period of time between two counter increments expressed as UNIX timestamp value\\n     */\\n    constructor(uint256 updateInterval) {\\n        interval = updateInterval;\\n        lastTimeStamp = block.timestamp;\\n\\n        counter = 0;\\n    }\\n\\n    /**\\n     * @notice Checks if the contract requires work to be done\\n     */\\n    function checkUpkeep(\\n        bytes memory /* checkData */\\n    )\\n        public\\n        view\\n        override\\n        returns (\\n            bool upkeepNeeded,\\n            bytes memory /* performData */\\n        )\\n    {\\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > interval;\\n        // We don't use the checkData in this example. The checkData is defined when the Upkeep was registered.\\n    }\\n\\n    /**\\n     * @notice Performs the work on the contract, if instructed by :checkUpkeep():\\n     */\\n    function performUpkeep(\\n        bytes calldata /* performData */\\n    ) external override {\\n        // add some verification\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\n        require(upkeepNeeded, \\\"Time interval not met\\\");\\n\\n        lastTimeStamp = block.timestamp;\\n        counter = counter + 1;\\n        // We don't use the performData in this example. The performData is generated by the Keeper's call to your checkUpkeep function\\n    }\\n}\\n\",\"keccak256\":\"0x44777401f1da1d5787252884b3ad44fc1c40e3cd9f8da50d47a02273d5eac933\",\"license\":\"MIT\"},\"contracts/test/fuzzing/KeepersCounterEchidnaTest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"../../KeepersCounter.sol\\\";\\n\\ncontract KeepersCounterEchidnaTest is KeepersCounter {\\n    constructor() KeepersCounter(8 days) {}\\n\\n    function echidna_test_perform_upkeep_gate() public view returns (bool) {\\n        return counter == 0;\\n    }\\n}\\n\",\"keccak256\":\"0x94e60cdfc5f8d3a8a80512de6114749058206a0b526a5685f1c7a578634d2847\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3120,"contract":"contracts/test/fuzzing/KeepersCounterEchidnaTest.sol:KeepersCounterEchidnaTest","label":"counter","offset":0,"slot":"0","type":"t_uint256"},{"astId":3125,"contract":"contracts/test/fuzzing/KeepersCounterEchidnaTest.sol:KeepersCounterEchidnaTest","label":"lastTimeStamp","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"Checks if the contract requires work to be done"},"counter()":{"notice":"Public counter variable"},"interval()":{"notice":"Use an interval in seconds and a timestamp to slow execution of Upkeep"},"performUpkeep(bytes)":{"notice":"Performs the work on the contract, if instructed by :checkUpkeep():"}},"version":1}}}}}}